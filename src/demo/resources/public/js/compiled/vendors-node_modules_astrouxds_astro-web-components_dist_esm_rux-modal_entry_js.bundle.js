"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbh_rccst"] = self["webpackChunkbh_rccst"] || []).push([["vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-modal_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-modal.entry.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-modal.entry.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rux_modal: () => (/* binding */ RuxModal)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n/* harmony import */ var _utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils-73490106.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js\");\n\n\n\nconst ruxModalCss = \":host{--modal-title-color:var(--color-text-primary);--modal-background-color:var(--color-background-surface-default);--modal-border-color:var(--color-background-interactive-default);display:contents}*,*::before,*::after{box-sizing:inherit}:host([hidden]){display:none}rux-button-group{margin-top:auto;margin-left:auto;align-self:flex-end}.rux-modal__wrapper{position:fixed;top:0;left:0;height:100vh;width:100vw;display:flex;justify-content:center;align-items:center;z-index:1100;background-color:rgba(0, 0, 0, 0.5);animation:fadeIn 0.5s;-webkit-animation:fadeIn 0.5s;-moz-animation:fadeIn 0.5s;-o-animation:fadeIn 0.5s;-ms-animation:fadeIn 0.5s}.rux-modal__dialog{position:relative;display:flex;flex-direction:column;justify-content:space-between;background-color:var(--modal-background-color);width:28rem;border:0;margin:auto;padding:0;user-select:none;box-shadow:var(--shadow-outer-dialog)}.rux-modal__header{display:flex;flex-grow:0;flex-shrink:0;align-items:center;width:100%;padding:16px 20px;background-color:var(--color-background-surface-header);color:var(--modal-title-color);user-select:none;font-family:var(--font-heading-2-font-family);font-size:var(--font-heading-2-font-size);font-weight:var(--font-heading-2-font-weight);letter-spacing:var(--font-heading-2-letter-spacing)}.rux-modal__header ::slotted(h6),.rux-modal__header ::slotted(h5),.rux-modal__header ::slotted(h4),.rux-modal__header ::slotted(h3),.rux-modal__header ::slotted(h2),.rux-modal__header ::slotted(h1){margin-block-start:0;margin-block-end:0}.rux-modal__content{display:flex;flex-direction:column;flex-grow:1;padding:1rem 1rem 0 1rem;color:var(--color-text-primary)}.rux-modal__footer{display:flex;flex-direction:column;flex-grow:1;padding:0 1rem 1rem 1rem;color:var(--color-text-primary)}.rux-modal__message{margin:0.5rem 1.875rem 2.5rem 1.875rem}.rux-modal .rux-button{box-shadow:none !important}.rux-modal__header.hidden{display:none}.rux-modal__message.hidden{display:none}rux-icon{margin-right:0.75rem}@keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-moz-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-webkit-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-o-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}@-ms-keyframes fadeIn{0%{opacity:0}100%{opacity:1}}\";\n\nconst RuxModal = class {\n  constructor(hostRef) {\n    (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    this.ruxModalOpened = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxmodalopened\", 7);\n    this.ruxModalClosed = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxmodalclosed\", 7);\n    /**\n     * Shows and hides modal\n     */\n    this.open = false;\n    /**\n     * Text for confirmation button\n     */\n    this.confirmText = 'Confirm';\n    /**\n     * Text for close button\n     */\n    this.denyText = 'Cancel';\n    this.hasFooter = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.element, 'footer');\n    this.hasHeader = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.element, 'header');\n    this.hasMessage = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.element);\n    this._userInput = null;\n  }\n  // confirm dialog if Enter key is pressed\n  handleKeyDown(ev) {\n    var _a;\n    // prevent this from running if the slots version is being used\n    if (this.open && !this.hasFooter) {\n      const btns = this.element.shadowRoot.querySelectorAll('rux-button');\n      if (ev.key === 'Enter') {\n        //If enter is hit but the cancel/deny button is focused, we want to click that instead.\n        let activeEl = (_a = this.element.shadowRoot) === null || _a === void 0 ? void 0 : _a.activeElement;\n        if (activeEl && activeEl === btns[0]) {\n          this._userInput = false;\n          btns[0].click();\n        }\n        else {\n          const button = this._getDefaultButton();\n          if (button) {\n            this._userInput = true;\n            button.click();\n          }\n        }\n      }\n      if (ev.key === 'Escape') {\n        this._userInput = false;\n        btns[0].click();\n      }\n    }\n  }\n  // close modal if click happens outside of dialog\n  handleClick(ev) {\n    const wrapper = this._getWrapper();\n    if (ev.composedPath()[0] === wrapper) {\n      this.open = false;\n    }\n  }\n  handleOpen(isOpen) {\n    if (isOpen && !this.hasFooter) {\n      setTimeout(() => {\n        const button = this._getDefaultButton();\n        if (button) {\n          button.focus();\n        }\n      }, 0);\n    }\n    this.open\n      ? this.ruxModalOpened.emit()\n      : this.ruxModalClosed.emit(this._userInput);\n  }\n  componentWillLoad() {\n    console.warn('RuxModal is deprecated and will be removed in 7.0. Use RuxDialog instead.');\n  }\n  _handleModalChoice(e) {\n    // convert string value to boolean\n    const target = e.currentTarget;\n    const choice = target.dataset.value === 'true';\n    this._userInput = choice;\n    this.open = false;\n  }\n  _getDefaultButton() {\n    var _a, _b, _c;\n    const buttonSet = (_b = (_a = this.element) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelectorAll('rux-button:not([hidden])');\n    if (buttonSet.length > 0) {\n      const defaultButton = buttonSet[buttonSet.length - 1];\n      const shadow = (_c = defaultButton.shadowRoot) === null || _c === void 0 ? void 0 : _c.querySelector('button');\n      if (shadow)\n        return shadow;\n    }\n    return null;\n  }\n  _getWrapper() {\n    var _a, _b;\n    const wrapper = (_b = (_a = this.element) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.querySelector('.rux-modal__wrapper');\n    if (wrapper) {\n      return wrapper;\n    }\n    return null;\n  }\n  connectedCallback() {\n    this._handleModalChoice = this._handleModalChoice.bind(this);\n    this._handleSlotChange = this._handleSlotChange.bind(this);\n  }\n  componentDidRender() {\n    const button = this._getDefaultButton();\n    button && button.focus();\n  }\n  _handleSlotChange() {\n    this.hasHeader = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.element, 'header');\n    this.hasMessage = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.element);\n    this.hasFooter = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__.h)(this.element, 'footer');\n  }\n  render() {\n    const { open, modalMessage, modalTitle, confirmText, denyText, _handleModalChoice, } = this;\n    return (open && ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { part: \"wrapper container\", class: \"rux-modal__wrapper\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"dialog\", { class: \"rux-modal__dialog\", role: \"dialog\", part: \"dialog\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"header\", { class: {\n        hidden: !this.hasHeader &&\n          modalTitle === undefined,\n        'rux-modal__header': true,\n      }, part: \"header\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { name: \"header\", onSlotchange: this._handleSlotChange }, modalTitle)), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-modal__content\", part: \"message\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: {\n        hidden: !this.hasMessage &&\n          modalMessage === undefined,\n        'rux-modal__message': true,\n      }, part: \"message\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { onSlotchange: this._handleSlotChange }, modalMessage))), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"footer\", { class: {\n        'rux-modal__footer': true,\n      }, part: \"footer\" }, this.hasFooter ? ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { name: \"footer\", onSlotchange: this._handleSlotChange })) : ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.F, null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rux-button-group\", { \"h-align\": \"right\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rux-button\", { secondary: confirmText.length > 0, onClick: _handleModalChoice, \"data-value\": \"false\", hidden: !denyText, tabindex: \"0\", exportparts: \"container:deny-button\" }, denyText), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rux-button\", { onClick: _handleModalChoice, hidden: !confirmText, \"data-value\": \"true\", tabindex: \"1\", exportparts: \"container:confirm-button\" }, confirmText)), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { name: \"footer\", onSlotchange: this._handleSlotChange })))))))));\n  }\n  get element() { return (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n  static get watchers() { return {\n    \"open\": [\"handleOpen\"]\n  }; }\n};\nRuxModal.style = ruxModalCss;\n\n\n\n\n//# sourceURL=webpack://bh.rccst/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-modal.entry.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ renderHiddenSelect),\n/* harmony export */   b: () => (/* binding */ hasShadowDom),\n/* harmony export */   h: () => (/* binding */ hasSlot),\n/* harmony export */   r: () => (/* binding */ renderHiddenInput)\n/* harmony export */ });\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nfunction hasSlot(el, name) {\n  // Look for a named slot\n  if (name) {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n  // Look for a default slot\n  return [...el.childNodes].some((node) => {\n    var _a;\n    //If node is text and not an empty string return true\n    if (node.nodeType === node.TEXT_NODE &&\n      ((_a = node === null || node === void 0 ? void 0 : node.textContent) === null || _a === void 0 ? void 0 : _a.trim()) !== '') {\n      return true;\n    }\n    //If node is an element with a slot attribute return true\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node;\n      if (!el.hasAttribute('slot') &&\n        /*\n         * This condition is specifically for checkbox because\n         * the hidden input becomes slotted content\n         */\n        el.getAttribute('type') !== 'hidden') {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n/**\n* This method is used to add a hidden input to a host element that contains\n* a Shadow DOM. It does not add the input inside of the Shadow root which\n* allows it to be picked up inside of forms. It should contain the same\n* values as the host element.\n* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198\n\n*\n* @param always Add a hidden input even if the container does not use Shadow\n* @param container The element where the input will be added\n* @param name The name of the input\n* @param value The value of the input\n* @param disabled If true, the input is disabled\n* @param checked Optional. If true, the input is checked\n*/\nconst renderHiddenInput = (always, container, name, value, disabled, checked) => {\n  let input = container.querySelector('input.aux-input');\n  if (always || hasShadowDom(container)) {\n    if (checked || checked == undefined) {\n      if (!input) {\n        input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-input');\n        container.appendChild(input);\n      }\n      input.disabled = disabled;\n      input.name = name;\n      input.value = value || '';\n    }\n    else {\n      if (input) {\n        input.remove();\n      }\n    }\n  }\n};\n/**\n * Renders multiple hidden inputs from an array of values\n * Used in multiselect\n * @param always\n * @param container\n * @param name\n * @param value\n * @param disabled\n */\nconst renderHiddenSelect = (always, container, name, value, disabled) => {\n  // Clear any existing hidden options. May be more performant to edit their values instead though.\n  let inputs = container.querySelectorAll('input.aux-select');\n  if (inputs) {\n    for (const elem of inputs) {\n      elem.remove();\n    }\n  }\n  if (always || hasShadowDom(container)) {\n    if (Array.isArray(value)) {\n      for (const el in value) {\n        let input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-select');\n        input.classList.add(`aux-select-${el}`);\n        input.disabled = disabled;\n        input.name = name;\n        if (value[el]) {\n          input.value = value[el];\n        }\n        container.appendChild(input);\n      }\n    }\n    else {\n      let input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-select');\n      input.classList.add(`aux-select-0`);\n      input.disabled = disabled;\n      input.name = name;\n      if (value) {\n        input.value = value;\n      }\n      container.appendChild(input);\n    }\n  }\n};\n\n\n\n\n//# sourceURL=webpack://bh.rccst/./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js?");

/***/ })

}]);