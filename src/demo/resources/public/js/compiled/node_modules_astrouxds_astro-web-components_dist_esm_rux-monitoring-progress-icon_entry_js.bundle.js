"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkDemo"] = self["webpackChunkDemo"] || []).push([["node_modules_astrouxds_astro-web-components_dist_esm_rux-monitoring-progress-icon_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/MonitoringLabel-e7961237.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/MonitoringLabel-e7961237.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"M\": () => (/* binding */ MonitoringLabel),\n/* harmony export */   \"a\": () => (/* binding */ MonitoringBadge)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n\n\nconst collapseNotifications = (value) => {\n  const n = Math.floor(value);\n  // don't show any values less than 0\n  if (n <= 0)\n    return null;\n  // get the place value\n  const thousand = Math.floor((n / 1000) % 1000); // only return a whole number\n  const million = (n / 1000000) % 1000000; // return a decimal value for numbers like 1.2m\n  const billion = (n / 1000000000) % 1000000000; // return a decimal value for numbers like 1.2b\n  const trillion = (n / 1000000000000) % 1000000000000; // trillion is just to offer an overflow instance\n  // set the display to its original state\n  let _shorthand = n.toString();\n  if (trillion >= 1) {\n    _shorthand = 'âˆž';\n  }\n  else if (billion >= 1) {\n    _shorthand = `${billion.toFixed(1).toString()}B`;\n  }\n  else if (million >= 1) {\n    _shorthand = `${million.toFixed(1).toString()}M`;\n  }\n  else if (thousand >= 1) {\n    _shorthand = `${thousand}K`;\n  }\n  return _shorthand;\n};\nconst MonitoringBadge = ({ notifications, }) => ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: `rux-advanced-status__badge ${!notifications ? 'rux-advanced-status__hidden' : ''}`, part: \"monitoring-badge\" }, notifications && collapseNotifications(notifications)));\n\nconst MonitoringLabel = ({ label, sublabel, }) => ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-advanced-status__label\" },\n  (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", { part: \"monitoring-label\" }, label),\n  (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", { class: `rux-advanced-status__sublabel ${!sublabel ? 'rux-advanced-status__hidden' : ''}`, part: \"monitoring-sublabel\" }, sublabel)));\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/MonitoringLabel-e7961237.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-monitoring-progress-icon.entry.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-monitoring-progress-icon.entry.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rux_monitoring_progress_icon\": () => (/* binding */ RuxMonitoringProgressIcon)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n/* harmony import */ var _MonitoringLabel_e7961237_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MonitoringLabel-e7961237.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/MonitoringLabel-e7961237.js\");\n\n\n\nconst ruxMonitoringProgressIconCss = \":host{display:inline-block;padding:0}:host([hidden]){display:none}*,*::before,*::after{box-sizing:border-box}.rux-advanced-status{display:flex;flex-direction:column;justify-content:flex-start;position:relative;margin:0;line-height:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rux-advanced-status__icon-group{display:flex;position:relative;margin:0 auto;width:4.5rem}rux-status{position:absolute;top:-0.25rem;left:-0.25rem;margin:0}.rux-advanced-status__badge{display:block;z-index:2;order:3;position:absolute;bottom:-0.75rem;right:-0.4rem;border:1px solid rgba(255, 255, 255, 0.6);border-radius:var(--radius-base);padding:0.65rem 0.25rem;color:#fff;font-family:var(--font-body-3-font-family);font-size:var(--font-body-3-font-size);font-weight:var(--font-body-3-font-weight);letter-spacing:var(--font-body-3-letter-spacing);text-align:center;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background-color:#000}.rux-advanced-status__label{color:var(--color-text-primary);font-family:var(--font-body-2-font-family);font-size:var(--font-body-2-font-size);font-weight:var(--font-body-2-font-weight);letter-spacing:var(--font-body-2-letter-spacing);text-align:center;text-overflow:ellipsis;white-space:nowrap;line-height:1.2;overflow:hidden;margin-top:1rem;width:100%;max-width:6.25rem}.rux-advanced-status__sublabel{font-family:var(--font-body-3-font-family);font-size:var(--font-body-3-font-size);font-weight:var(--font-body-3-font-weight);letter-spacing:var(--font-body-3-letter-spacing);color:var(--color-text-primary);opacity:0.6;display:block}.rux-advanced-status__hidden{display:none}svg{margin:0 auto;width:3rem;height:3rem}svg.rux-status--off{stroke:var(--status-symbol-color-fill-off, #9ea7ad);fill:var(--status-symbol-color-fill-off, #9ea7ad)}svg.rux-status--standby{stroke:var(--status-symbol-color-fill-standby, #2dccff);fill:var(--status-symbol-color-fill-standby, #2dccff)}svg.rux-status--normal{stroke:var(--status-symbol-color-fill-normal, #56f000);fill:var(--status-symbol-color-fill-normal, #56f000)}svg.rux-status--caution{stroke:var(--status-symbol-color-fill-caution, #fce83a);fill:var(--status-symbol-color-fill-caution, #fce83a)}svg.rux-status--serious{stroke:var(--status-symbol-color-fill-serious, #ffb300);fill:var(--status-symbol-color-fill-serious, #ffb300)}svg.rux-status--critical{stroke:var(--status-symbol-color-fill-critical, #ff3838);fill:var(--status-symbol-color-fill-critical, #ff3838)}[data-progress] svg{transition:stroke-dashoffset 0.367s, stroke 0.367s;transform-origin:50% 50%}.rux-advanced-status__progress{font-family:var(--font-monospace-1-font-family);font-size:var(--font-body-3-font-size);font-weight:var(--font-monospace-1-font-weight);letter-spacing:var(--font-monospace-1-letter-spacing);margin-top:-0.125rem;margin-left:-0.125rem;position:absolute;display:flex;justify-content:center;align-items:center;width:100%;height:100%;text-align:center}\";\n\nconst RuxMonitoringProgressIcon = class {\n  constructor(hostRef) {\n    (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    this._circumference = 56 * 2 * Math.PI;\n    this._defaultRangeList = [\n      {\n        threshold: 17,\n        status: 'off',\n      },\n      {\n        threshold: 33,\n        status: 'standby',\n      },\n      {\n        threshold: 49,\n        status: 'normal',\n      },\n      {\n        threshold: 65,\n        status: 'caution',\n      },\n      {\n        threshold: 81,\n        status: 'serious',\n      },\n      {\n        threshold: 100,\n        status: 'critical',\n      },\n    ];\n    /**\n     * Sets the minimum value for the progress range. When progress is this number, it reads 0%.\n     * When it is halfway between min and max, it will read 50%.\n     */\n    this.min = 0;\n    /**\n     * Sets the maximum value for the progress range. When progress is this number, it reads 100%.\n     * When it is halfway between min and max, it will read 50%.\n     */\n    this.max = 100;\n    /**\n     * Displays this value as a percentage of where it lies between min and max\n     * in the center of the donut graph and styles a proportional\n     * segment of the graph. Progress can be positive or negative (the later useful for countdowns).\n     * The progress value must exist within the thresholds specified in the range property below, and must be\n     * an integer. If a non-integer value is passed in, progress will default to 0. If progress ever\n     * becomes less than min or greater than max, it will be set to equal min or max respectively.\n     */\n    this.progress = 0;\n    this._status = 'off';\n    this._graphProgress = 0;\n  }\n  checkProgress(newValue, oldValue) {\n    if (Number.isInteger(this.progress)) {\n      if (newValue !== oldValue) {\n        this._updateProgress();\n      }\n    }\n    else {\n      this.progress = 0;\n    }\n  }\n  checkRange(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this._updateProgress();\n    }\n  }\n  componentWillLoad() {\n    if (!this.range || this.range.length < 1) {\n      this.range = this._defaultRangeList;\n    }\n    if (Number.isInteger(this.progress)) {\n      this.range = this.range.sort((a, b) => a.threshold >= b.threshold ? 1 : -1);\n      this._updateProgress();\n    }\n    else {\n      this.progress = 0;\n    }\n  }\n  get status() {\n    return this._status;\n  }\n  _updateProgress() {\n    if (this.progress > this.max) {\n      this.progress = this.max;\n    }\n    if (this.progress < this.min) {\n      this.progress = this.min;\n    }\n    const rangeStatus = this.range.find((range) => this.progress <= range.threshold);\n    this._status = rangeStatus ? rangeStatus.status : this.range[0].status;\n    this._graphProgress =\n      this._circumference -\n        ((this.progress - this.min) / (this.max - this.min)) *\n          this._circumference;\n  }\n  render() {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { id: \"rux-advanced-status__icon\", class: \"rux-advanced-status\", title: `${this.notifications} ${this.label} ${this.sublabel}`, part: \"container\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-advanced-status__icon-group\", part: \"icon-group\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rux-status\", { status: this._status, part: \"status-icon\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 128 128\", class: `rux-status--${this._status}`, part: \"radial-progress\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"g\", { id: \"progress\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"circle\", { cx: \"60\", cy: \"60\", r: \"56\", fill: \"transparent\", stroke: \"rgba(40, 63, 88, 1)\", \"stroke-width\": \"10\", transform: \"rotate(-90 61 60)\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"circle\", { cx: \"60\", cy: \"60\", r: \"56\", fill: \"transparent\", \"stroke-dasharray\": \"351.8583772 351.8583772\", \"stroke-dashoffset\": this._graphProgress, \"stroke-linecap\": \"round\", \"stroke-width\": \"10\", class: \"progress-ring__circle\", transform: \"rotate(-90 61 60)\" }))), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-advanced-status__progress\", part: \"progress-display\" }, Math.ceil(((this.progress - this.min) /\n      (this.max - this.min)) *\n      100), \"%\"), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_MonitoringLabel_e7961237_js__WEBPACK_IMPORTED_MODULE_1__.a, { notifications: this.notifications })), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_MonitoringLabel_e7961237_js__WEBPACK_IMPORTED_MODULE_1__.M, { label: this.label, sublabel: this.sublabel })));\n  }\n  static get watchers() { return {\n    \"progress\": [\"checkProgress\"],\n    \"range\": [\"checkRange\"]\n  }; }\n};\nRuxMonitoringProgressIcon.style = ruxMonitoringProgressIconCss;\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-monitoring-progress-icon.entry.js?");

/***/ })

}]);