"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbh_rccst"] = self["webpackChunkbh_rccst"] || []).push([["vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-textarea_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   F: () => (/* binding */ FormFieldMessage)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n\n\n/**\n * @part error-text - The error text element\n * @part help-text - The help text element\n */\nconst FormFieldMessage = (props, children) => {\n  const { helpText, errorText } = props;\n  if (errorText) {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-error-text\", part: \"error-text\" },\n      children,\n      (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"svg\", { fill: \"none\", width: \"14\", height: \"14\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 14 14\" },\n        (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"path\", { \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M11.393 12.25c.898 0 1.458-.974 1.009-1.75L8.009 2.91a1.166 1.166 0 0 0-2.018 0L1.598 10.5c-.449.776.111 1.75 1.01 1.75h8.784ZM7 8.167a.585.585 0 0 1-.583-.584V6.417c0-.321.262-.584.583-.584.32 0 .583.263.583.584v1.166c0 .321-.262.584-.583.584Zm-.583 1.166V10.5h1.166V9.333H6.417Z\", fill: \"currentColor\" })),\n      errorText));\n  }\n  if (helpText) {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-help-text\", part: \"help-text\" },\n      children,\n      helpText));\n  }\n  return null;\n};\n\n\n\n\n//# sourceURL=webpack://bh.rccst/./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-textarea.entry.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-textarea.entry.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rux_textarea: () => (/* binding */ RuxTextarea)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n/* harmony import */ var _FormFieldMessage_9a3fc22c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormFieldMessage-9a3fc22c.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js\");\n/* harmony import */ var _utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils-73490106.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js\");\n\n\n\n\nconst ruxTextareaCss = \".rux-help-text{margin-top:0.625rem;color:var(--color-text-primary);font-size:var(--font-body-2-font-size);font-family:var(--font-body-2-font-family);font-weight:var(--font-body-2-font-weight);letter-spacing:var(--font-body-2-letter-spacing)}.rux-error-text{display:flex;align-items:center;text-align:left;width:fit-content;-webkit-order:3;order:3;margin-top:0.625rem;color:var(--color-text-error);font-size:var(--font-body-2-bold-font-size);font-family:var(--font-body-2-bold-font-family);font-weight:var(--font-body-2-bold-font-weight);letter-spacing:var(--font-body-2-bold-letter-spacing)}.rux-error-text svg{margin-right:0.625rem}:host{--textarea-border-color:var(--color-border-interactive-muted);--textarea-text-color:var(--color-text-primary);--textarea-background-color:var(--color-background-base-default);--textarea-invalid-border-color:var(--color-border-error);--textarea-focus-border-color:var(--color-background-interactive-hover);--textarea-selection-background-color:var(--color-palette-brightblue-400);display:block}.hidden,:host([hidden]){display:none}.rux-textarea{box-sizing:border-box;-webkit-order:2;order:2;min-height:4.25rem;width:100%;padding:0.469rem 0.5rem;border:1px solid var(--textarea-border-color);border-radius:var(--radius-base);font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);letter-spacing:var(--font-body-1-letter-spacing);font-weight:var(--font-body-1-font-weight);color:var(--textarea-text-color);background-color:var(--textarea-background-color)}.rux-textarea--invalid{border:1px solid var(--textarea-invalid-border-color)}.rux-textarea--disabled{opacity:0.4;opacity:var(--disabled-opacity);cursor:not-allowed}.rux-textarea--small{padding:0.219rem 0.5rem;min-height:3.25rem}.rux-textarea--large{min-height:5.75rem;padding:0.844rem 0.5rem}.rux-textarea:focus{border-color:var(--textarea-focus-border-color);outline:none}.rux-textarea:hover{border-color:var(--textarea-focus-border-color);outline:none}.rux-textarea--disabled:hover{border:1px solid var(--textarea-border-color);color:var(--textarea-text-color)}.rux-textarea--invalid:hover{border:1px solid var(--textarea-invalid-border-color)}.rux-textarea::placeholder{color:var(--color-text-placeholder)}.rux-textarea-field{display:flex;flex-direction:column;color:var(--color-text-primary)}.rux-textarea-label{font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);font-weight:var(--font-body-1-font-weight);letter-spacing:var(--font-body-1-letter-spacing);margin-bottom:var(--spacing-input-label-top)}.rux-textarea-label__asterisk{margin-left:4px}::selection{background-color:var(--textarea-selection-background-color)}\";\n\nlet id = 0;\nconst RuxTextarea = class {\n  constructor(hostRef) {\n    (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    this.ruxChange = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxchange\", 7);\n    this.ruxInput = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxinput\", 7);\n    this.ruxBlur = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxblur\", 7);\n    this.inputId = `rux-textarea-${++id}`;\n    this.hasLabelSlot = false;\n    /**\n     * Presentational only. Renders the Textarea as invalid.\n     */\n    this.invalid = false;\n    /**\n     * The input value\n     */\n    this.value = '';\n    /**\n     * The input name\n     */\n    this.name = '';\n    /**\n     * Disables the button via HTML disabled attribute. Button takes on a distinct visual state. Cursor uses the not-allowed system replacement and all keyboard and mouse events are ignored.\n     */\n    this.disabled = false;\n    /**\n     * Sets the input as disabled\n     */\n    this.required = false;\n    this._onBlur = () => {\n      this.ruxBlur.emit();\n    };\n  }\n  handleLabelChange() {\n    this._handleSlotChange();\n  }\n  connectedCallback() {\n    this._onChange = this._onChange.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._handleSlotChange = this._handleSlotChange.bind(this);\n  }\n  disconnectedCallback() {\n    this.el.shadowRoot.removeEventListener('slotchange', this._handleSlotChange);\n  }\n  componentWillLoad() {\n    this._handleSlotChange();\n  }\n  get hasLabel() {\n    return this.label ? true : this.hasLabelSlot;\n  }\n  _handleSlotChange() {\n    this.hasLabelSlot = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__.h)(this.el, 'label');\n  }\n  _onChange(e) {\n    const target = e.target;\n    this.value = target.value;\n    this.ruxChange.emit();\n  }\n  _onInput(e) {\n    const target = e.target;\n    this.value = target.value;\n    this.ruxInput.emit();\n  }\n  render() {\n    (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__.r)(true, this.el, this.name, this.value, this.disabled);\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-textarea-field\", part: \"form-field\" }, this.hasLabel ? ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"label\", { class: {\n        'rux-textarea-label': true,\n      }, \"aria-hidden\": this.hasLabel ? 'false' : 'true', htmlFor: this.inputId, part: \"label\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", { class: { hidden: !this.hasLabel } }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { onSlotchange: this._handleSlotChange, name: \"label\" }, this.label, this.required && ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", { part: \"required\", class: \"rux-textarea-label__asterisk\" }, \"*\")))))) : null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"textarea\", { name: this.name, disabled: this.disabled, \"aria-invalid\": this.invalid ? 'true' : 'false', placeholder: this.placeholder, required: this.required, minlength: this.minLength, maxlength: this.maxLength, value: this.value, class: {\n        'rux-textarea': true,\n        'rux-textarea--disabled': this.disabled,\n        'rux-textarea--invalid': this.invalid,\n        'rux-textarea--small': this.size === 'small',\n        'rux-textarea--large': this.size === 'large',\n      }, id: this.inputId, rows: this.rows, onChange: this._onChange, onInput: this._onInput, onBlur: this._onBlur, part: \"textarea\" })), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_FormFieldMessage_9a3fc22c_js__WEBPACK_IMPORTED_MODULE_1__.F, { helpText: this.helpText, errorText: this.errorText })));\n  }\n  get el() { return (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n  static get watchers() { return {\n    \"label\": [\"handleLabelChange\"]\n  }; }\n};\nRuxTextarea.style = ruxTextareaCss;\n\n\n\n\n//# sourceURL=webpack://bh.rccst/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-textarea.entry.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ renderHiddenSelect),\n/* harmony export */   b: () => (/* binding */ hasShadowDom),\n/* harmony export */   h: () => (/* binding */ hasSlot),\n/* harmony export */   r: () => (/* binding */ renderHiddenInput)\n/* harmony export */ });\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nfunction hasSlot(el, name) {\n  // Look for a named slot\n  if (name) {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n  // Look for a default slot\n  return [...el.childNodes].some((node) => {\n    var _a;\n    //If node is text and not an empty string return true\n    if (node.nodeType === node.TEXT_NODE &&\n      ((_a = node === null || node === void 0 ? void 0 : node.textContent) === null || _a === void 0 ? void 0 : _a.trim()) !== '') {\n      return true;\n    }\n    //If node is an element with a slot attribute return true\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node;\n      if (!el.hasAttribute('slot') &&\n        /*\n         * This condition is specifically for checkbox because\n         * the hidden input becomes slotted content\n         */\n        el.getAttribute('type') !== 'hidden') {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n/**\n* This method is used to add a hidden input to a host element that contains\n* a Shadow DOM. It does not add the input inside of the Shadow root which\n* allows it to be picked up inside of forms. It should contain the same\n* values as the host element.\n* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198\n\n*\n* @param always Add a hidden input even if the container does not use Shadow\n* @param container The element where the input will be added\n* @param name The name of the input\n* @param value The value of the input\n* @param disabled If true, the input is disabled\n* @param checked Optional. If true, the input is checked\n*/\nconst renderHiddenInput = (always, container, name, value, disabled, checked) => {\n  let input = container.querySelector('input.aux-input');\n  if (always || hasShadowDom(container)) {\n    if (checked || checked == undefined) {\n      if (!input) {\n        input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-input');\n        container.appendChild(input);\n      }\n      input.disabled = disabled;\n      input.name = name;\n      input.value = value || '';\n    }\n    else {\n      if (input) {\n        input.remove();\n      }\n    }\n  }\n};\n/**\n * Renders multiple hidden inputs from an array of values\n * Used in multiselect\n * @param always\n * @param container\n * @param name\n * @param value\n * @param disabled\n */\nconst renderHiddenSelect = (always, container, name, value, disabled) => {\n  // Clear any existing hidden options. May be more performant to edit their values instead though.\n  let inputs = container.querySelectorAll('input.aux-select');\n  if (inputs) {\n    for (const elem of inputs) {\n      elem.remove();\n    }\n  }\n  if (always || hasShadowDom(container)) {\n    if (Array.isArray(value)) {\n      for (const el in value) {\n        let input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-select');\n        input.classList.add(`aux-select-${el}`);\n        input.disabled = disabled;\n        input.name = name;\n        if (value[el]) {\n          input.value = value[el];\n        }\n        container.appendChild(input);\n      }\n    }\n    else {\n      let input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-select');\n      input.classList.add(`aux-select-0`);\n      input.disabled = disabled;\n      input.name = name;\n      if (value) {\n        input.value = value;\n      }\n      container.appendChild(input);\n    }\n  }\n};\n\n\n\n\n//# sourceURL=webpack://bh.rccst/./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js?");

/***/ })

}]);