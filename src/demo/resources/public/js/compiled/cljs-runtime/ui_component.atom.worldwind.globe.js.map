{"version":3,"sources":["ui_component/atom/worldwind/globe.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","ui-component.atom.worldwind.globe/DEFAULT_BACKGROUND_COLOR","ui-component.atom.worldwind.globe/sample-data","ui-component.utils.helpers/component-id","ui-component.utils.bounding-box/make-bounding-box","ui-component.atom.worldwind.globe/base-layers","globe-id","ui-component.atom.worldwind.globe.layer.blue-marble/blue-marble","ui-component.atom.worldwind.globe.layer.night/night","ui-component.atom.worldwind.globe.layer.compass/compass","ui-component.atom.worldwind.globe.layer.star-field/star-field","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","ui-component.atom.worldwind.globe/globe*","seq59602","G__59603","cljs.core/first","cljs.core/next","self__4851__auto__","props","children","state","cljs.core.atom","dom-node","reagent.core.atom","reagent.core.create_class","this","cljs.core.swap_BANG_","cljs.core/assoc","or__4253__auto__","reagent.core/props","js/Date.now","cljs.core.nth","ui-component.atom.worldwind.globe.projection/projections","reagent.core/children","cljs.core.partial","ui-component.atom.worldwind.globe.react-support/component-did-mount","ui-component.atom.worldwind.globe.react-support/component-did-update","cljs.core/deref","cursor","backgroundColor","cljs.core.merge","ui-component.atom.worldwind.globe/globe-inter","p__59605","map__59606","cljs.core/--destructure-map","cljs.core.get","seq59604","self__4852__auto__","cljs.core/seq","shapes","current-time","component-id","shape-layers","cljs.core.map","ui-component.atom.worldwind.globe.shape/make-shape","cljs.core.into","all-layer","cljs.core.reduce","cljs.core/conj","cljs-time.coerce/to-date","ui-component.atom.worldwind.globe/globe","p__59608","map__59609","seq59607","container-id","s","ui-component.utils.helpers/resolve-value","t","cljs-time.core/now","ui-component.atom.worldwind.globe/meta-data","re-frame.core/dispatch-sync"],"sourcesContent":["(ns ui-component.atom.worldwind.globe\n  (:require [\"worldwindjs\" :as WorldWind]\n            [ui-component.atom.worldwind.globe.geo-tiff]\n            [ui-component.atom.worldwind.globe.image]\n            [ui-component.atom.worldwind.globe.layer.blue-marble :as blue-marble]\n            [ui-component.atom.worldwind.globe.layer.night :as night]\n            [ui-component.atom.worldwind.globe.layer.compass :as compass]\n            [ui-component.atom.worldwind.globe.layer.star-field :as star-field]\n            [ui-component.atom.worldwind.globe.projection :as proj]\n            [ui-component.atom.worldwind.globe.react-support :as rs]\n            [ui-component.atom.worldwind.globe.shape :as shape]\n            [ui-component.atom.worldwind.globe.sector :as sector]\n            [ui-component.utils.bounding-box :as bound]\n            [ui-component.utils.helpers :as h]\n            [re-frame.core :as rf]\n            [cljs-time.coerce :as coerce]\n            [cljs-time.core :as cljs-time]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]))\n\n\n(log/info \"ui-component.atom.worldwind.globe\")\n\n\n(def DEFAULT_BACKGROUND_COLOR \"rgb(36,74,101)\")\n\n\n(def sample-data [\n                  {:shape      :shape/polygon :id \"square\"\n                   :locations [[30.0 -130.0] [30.0 -100.0]\n                               [0.0 -100.0] [0.0 -130.0]]\n                   :fill-color [1 0 0 0.3] :outline-color [1 0 0 1] :width 2}\n                  {:shape      :shape/polygon :id \"5-sided\"\n                   :locations [[37 -115.0] [32.0 -115.0] [33.0 -107.0]\n                               [31.0 -102.0] [35.0 -102.0] [37.0 -115.0]]\n                   :fill-color [1 0 0 0.6] :outline-color [1 0 0 1] :width 2}\n                  {:shape :shape/polyline :id \"line1\" :locations [[35 -75] [35 -125]]\n                   :outline-color [1 1 0 1.0] :width 5}\n                  {:shape      :shape/circle :id \"circle\"\n                   :location [28.538336 -81.379234] :radius 1000000\n                   :fill-color [0 1 0 0.5] :outline-color [1 1 1 1] :width 2 :height 2}\n                  {:shape :shape/polyline :id \"line2\" :locations [[22 -55] [45 -105] [36 -125.7]]\n                   :outline-color [1 0.5 0.78 1.0] :width 5}\n                  {:shape :shape/label :id \"orlando\" :location [28.538336 -81.379234] :label \"Orlando\"\n                   :fill-color [1 0.9 0.0 1.0] :outline-color [1 0.9 0.0 1.0] :width 1}\n\n                  {:shape :shape/image, :id \"image-15\",\n                   :url   \"data/a.png\",\n                   :bounding-box [22.074653 33.344622 -95.433292 -82.723547]}\n\n                  {:shape :shape/image\n                   :id (h/component-id)\n                   :url \"images/lightning/Lightning3png.png\"\n                   :bounding-box (bound/make-bounding-box -26.076 -85.876 0.5)}\n                  {:shape :shape/image\n                   :id (h/component-id)\n                   :url \"images/lightning/Lightning3png.png\"\n                   :bounding-box (bound/make-bounding-box -25.9087 -84.9876 0.5)}\n                  {:shape :shape/image\n                   :id (h/component-id)\n                   :url \"images/lightning/Lightning3png.png\"\n                   :bounding-box (bound/make-bounding-box -25.0987 -86.09 0.5)}\n                  {:shape :shape/image\n                   :id (h/component-id)\n                   :url \"images/lightning/Lightning3png.png\"\n                   :bounding-box (bound/make-bounding-box -26 -85 0.5)}])\n\n;:url    \"https://worldwind.arc.nasa.gov/web/examples/data/black_sea_rgb.tif\"\n;:url    \"data/GOES18-ABI-FD-GEOCOLOR-10848x10848.tif\"\n;:url    \"data/20222351640_GOES18-ABI-FD-GEOCOLOR-10848x10848.jpg\"\n;:url    \"https://cdn.star.nesdis.noaa.gov/GOES18/ABI/FD/GEOCOLOR/20222241400_GOES18-ABI-FD-GEOCOLOR-10848x10848.tif\"\n\n\n(defn- base-layers [globe-id]\n  ;(log/info \"base-layers\" globe-id)\n  [\n   {:id (str globe-id \" Blue Marble\") :layer (blue-marble/blue-marble (str globe-id \" Blue Marble\")) :z 0}\n;(str globe-id \" day-only\") (day-only/day-only (str globe-id \" day-only\"))})\n   {:id (str globe-id \" Night\")       :layer (night/night (str globe-id \" Night\"))  :z 1}\n   {:id (str globe-id \" Compass\")     :layer (compass/compass (str globe-id \" Compass\"))  :z 1}\n   {:id (str globe-id \" Star Field\")  :layer (star-field/star-field (str globe-id \" Star Field\"))  :z 1}])\n\n\n(defn- globe* [props & children]\n  ;(log/info \"globe-render\" props children)\n\n  (let [state    (atom {:children children})\n        dom-node (r/atom nil)]\n\n    (r/create-class\n      {:display-name         (:id props)\n\n       :constructor          (fn [this props children]\n                               ;(log/info \"constructor\" props\n                               ;  \"////\" (r/props this)\n                               ;  \"////\" (r/children this))\n                               (swap! state assoc\n                                 :wwd ()\n                                 :canvasId (or (:id (r/props this)) (str \"canvas_\" (js/Date.now)))\n                                 :id (or (:id (r/props this)) (str \"canvas_\" (js/Date.now)))\n                                 :isValid false\n                                 :isDropArmed false\n                                 :projection (or (:projection (r/props this)) (nth proj/projections 0))\n                                 :layers (r/children this)))\n\n       :component-did-mount  (partial rs/component-did-mount dom-node state)\n\n       :component-did-update (partial rs/component-did-update dom-node state)\n\n       :reagent-render\n       (fn [props & children]\n         @dom-node\n         (let [cursor          (if (:isDropArmed @state) \"crosshair\" \"default\")\n               backgroundColor (or (:backgroundColor @state) DEFAULT_BACKGROUND_COLOR)]\n\n           [:canvas (merge props {:id (:canvasId @state)})\n            \"Your browser does not support HTML5 Canvas.\"]))})))\n\n\n(defn- globe-inter [& {:keys [shapes current-time component-id]}]\n  (let [shape-layers (->> shapes (map shape/make-shape) (into []))\n        all-layer    (reduce conj\n                       (base-layers component-id)\n                       shape-layers)]\n\n    ;(log/info \"globe-inter\" (map :id all-layer) \"//\" current-time \"//\" (count all-layer))\n\n    [globe*\n     {:id         component-id\n      :time       (coerce/to-date current-time)\n      :projection \"3D\"\n      :min-max    :max\n      :style      {:background-color :black\n                   :border-radius    \"3px\"\n                   :width            \"100%\"\n                   :height           \"100%\"}}\n     all-layer]))\n\n\n(defn globe [& {:keys [shapes current-time component-id container-id]}]\n\n  (let [s (h/resolve-value shapes)\n        t (h/resolve-value current-time)]\n\n    ;(log/info \"globe\" shapes \"//\" current-time \"//\" @s \"//\" @t \"//\" component-id)\n\n    (fn []\n      ;(log/info \"globe INNER\" shapes current-time component-id\n      ;  \"//\" @s)\n\n      [globe-inter\n       :shapes @s\n       :current-time (or @t (cljs-time/now))\n       :component-id component-id\n       :container-id container-id])))\n\n\n(def meta-data {:ww/globe {:type :ui-component\n                           :component globe\n                           :ports     {:shapes       :port/sink\n                                       :current-time :port/sink}}})\n\n(rf/dispatch-sync [:register-meta meta-data])\n\n\n(comment\n  (def component-id \"dummy\")\n  (def shapes sample-data)\n  (def children sample-data)\n\n\n  (shape/make-shape (get shapes 0))\n  (->> shapes (map shape/make-shape) (into []))\n\n\n  (map inc [1 2 3 4 5])\n  (filter string? [1 2 3 4 5])\n  (reduce + 0 [1 2 3 4 5])\n  (reduce conj [:a :b :c] [:d :e :f])\n\n  (group-by :shape sample-data)\n\n\n\n  ())\n\n\n"]}