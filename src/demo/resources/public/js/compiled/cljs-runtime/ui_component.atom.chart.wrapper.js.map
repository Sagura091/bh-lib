{"version":3,"sources":["ui_component/atom/chart/wrapper.cljs"],"mappings":"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","names":["var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","ui-component.atom.chart.wrapper/configurable-chart","p__58890","map__58891","cljs.core/--destructure-map","cljs.core.get","seq58889","self__4852__auto__","cljs.core/seq","data","component-id","container-id","config-panel","data-panel","component","ui","open?","reagent.core.atom","config-key","cljs.core.keyword","data-key","tab-panel","ui_component.utils.path__GT_keyword","selected-tab","chart-events","ui-component.utils/dispatch-local","p__58892","map__58893","re-com.core/v-box","js/goog.DEBUG","re-com.core/h-box","ui-component.atom.re-com.configure-toggle/configure-toggle","woolybear.ad.layout/centered","cljs.core.conj","cljs.core/deref","ui-component.utils/chart-config","ui-component.atom.chart.wrapper/chart","p__58895","map__58896","seq58894","d","ui-component.utils.helpers/resolve-value","ui-component.atom.chart.wrapper/base-chart","p__58898","map__58899","seq58897","config","component-panel","id","not-configurable?","cljs.core/reset!","ui-component.utils/init-container-locals"],"sourcesContent":["(ns ui-component.atom.chart.wrapper\n  (:require [ui-component.utils :as ui-utils]\n            [ui-component.atom.re-com.configure-toggle :as ct]\n            [ui-component.utils.helpers :as h]\n            [re-com.core :as rc]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]\n            [woolybear.ad.layout :as layout]))\n\n\n(defn configurable-chart\n  \"takes a component and wraps it with a 'settings' button which can show/hide the\n  appropriate data and config panels.\n\n  ---\n\n  - data : (atom) the data to be shown\n  - config : (hash-map) the data structure providing the local state for the component and the config-panel\n  - id : (string) unique identifier for this component instance\n  - config-panel : (hiccup) the configuration 'molecule' for the component\n  - component : (hiccup) the component itself\n\n  Returns : (hiccup) the Reagent component representing the entire 'package' (component + config-panel + button)\n  \"\n  [& {:keys [data component-id container-id config-panel data-panel component ui]}]\n\n  ;(log/info \"configurable-chart\" data \"//\" component-id \"//\" container-id \"//\" component)\n\n  (let [open? (r/atom false)\n        config-key (keyword component-id \"config\")\n        data-key (keyword component-id \"data\")\n        tab-panel (ui-utils/path->keyword component-id \"tab-panel\")\n        selected-tab (ui-utils/path->keyword component-id \"tab-panel.value\")\n        chart-events [config-key data-key tab-panel selected-tab]]\n\n    ;(log/info \"configurable-chart\" component-id\n    ;  \"///\" container-id \"///\" ui\n    ;  \"///\" chart-events)\n\n    (ui-utils/dispatch-local component-id [:container] container-id)\n\n    (fn [& {:keys [data component-id config-panel component ui]}]\n      [rc/v-box :src (rc/at)\n       :gap \"2px\"\n       :children [[rc/h-box :src (rc/at)\n                   :justify :end\n                   :children [[ct/configure-toggle open?]]]\n                  [layout/centered {:extra-classes :is-one-third}\n                   [rc/h-box :src (rc/at)\n                    :gap \"5px\"\n                    :width \"600px\"\n                    :height \"600px\"\n                    :children (conj\n                                (if @open?\n                                  [[layout/centered {:extra-classes :is-one-third}\n                                    [:div {:width \"75%\"}\n                                     [ui-utils/chart-config\n                                      chart-events\n                                      [data-panel data]\n                                      [config-panel data component-id]]]]]\n                                  [])\n                                [component data component-id container-id ui])]]]])))\n\n\n(defn chart [& {:keys [data component-id container-id component ui]}]\n  (ui-utils/dispatch-local component-id [:container] container-id)\n\n  (let [d (h/resolve-value data)]\n    ;(log/info \"chart\" component-id \"//\" container-id\n    ;  \"//\" data \"//\" @d\n    ;  \"//\" ui)\n\n    [component data component-id container-id ui]))\n\n\n(defn base-chart [& {:keys [data config\n                            component-id container-id\n                            data-panel config-panel component-panel\n                            ui]}]\n\n  ;(log/info \"base-chart\" component-id container-id)\n\n  (let [id (r/atom nil)\n        not-configurable? (nil? config-panel)\n        d (h/resolve-value data)]\n\n    ;(log/info \"base-chart\"\n    ;  component-id container-id\n    ;  \"//\" data \"//\" @d)\n\n    (fn []\n      (when (nil? @id)\n        ;(log/info \"initializing\" component-id)\n        (reset! id component-id)\n        (ui-utils/init-container-locals @id config)\n        (ui-utils/dispatch-local @id [:container] container-id))\n\n      (if not-configurable?\n        [chart\n         :data data\n         :component-id @id\n         :container-id container-id\n         :component component-panel\n         :ui ui]\n\n        [configurable-chart\n         :data d\n         :component-id @id\n         :container-id container-id\n         :data-panel data-panel\n         :config-panel config-panel\n         :component component-panel\n         :ui ui]))))\n\n\n\n(comment\n  (do\n    (def id \"line-chart-demo.line-chart\")\n    (def container-id \"line-chart-demo\")\n    (def config {:tv {:include true, :stroke \"#82ca9d\", :fill \"#82ca9d\"},\n                 :brush false,\n                 :y-axis {:include true, :dataKey \"\", :orientation :left, :scale \"auto\"},\n                 :sub :something-selected,\n                 :grid {:include true, :strokeDasharray {:dash \"3\", :space \"3\"}, :stroke \"#a9a9a9\"},\n                 :legend {:include true, :layout \"horizontal\", :align \"center\", :verticalAlign \"bottom\"},\n                 :type \"line-chart\",\n                 :amt {:include true, :stroke \"#ff00ff\", :fill \"#ff00ff\"},\n                 :tab-panel {:value :line-chart-demo.line-chart.config, :data-path [:containers :line-chart-demo.line-chart :tab-panel]},\n                 :pv {:include true, :stroke \"#ffc107\", :fill \"#ffc107\"},\n                 :container \"\",\n                 :x-axis {:include true, :dataKey :name, :orientation :bottom, :scale \"auto\"},\n                 :pub :name,\n                 :uv {:include true, :stroke \"#8884d8\", :fill \"#8884d8\"},\n                 :tooltip {:include true},\n                 :isAnimationActive true}))\n\n  (ui-utils/init-container-locals id config)\n  (ui-utils/dispatch-local id [:container] container-id)\n\n  @(ui-utils/subscribe-local id [:container])\n\n\n\n  ())\n\n(comment\n\n  (def id \"multi-chart-demo/multi-chart/line-chart\")\n  (def container-id \"multi-chart-demo/multi-chart\")\n\n  @(ui-utils/subscribe-local id [:container])\n\n  (ui-utils/dispatch-local id [:container] container-id)\n\n\n  ())"]}