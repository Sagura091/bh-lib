{"version":3,"sources":["rccst_ui_component/technologies/systems_services.cljs"],"mappings":";AAUA,wDAAA,xDAAMA;AAAN,AAAA,oHAAA,2CAAA,uEAAA,qEAAA,mFAAA,6EAAA,4BAAA,sHAAA,8RAAA,mGAAA,qDAAA,cAAA,6GAAA,2CAAA,uEAAA,qEAAA,oKAAA,6GAAA,2CAAA,uEAAA,qEAAA,oKAAA,6GAAA,2CAAA,uEAAA,qEAAA,2JAAA,6GAAA,2CAAA,uEAAA,qEAAA,6JAAA,6GAAA,2CAAA,uEAAA,qEAAA,1/FAEGC,+dAECC,oZAKAC,sKAEAC,oSACCC,oKAEDD,oSACCE,oKAEDF,oSACCG,2JAEDH,oSACCI,6JAEDJ,oSACCK","names":["rccst-ui-component.technologies.systems-services/page","woolybear.ad.layout/page","woolybear.ad.layout/markdown-block","re-com.core/gap","woolybear.ad.layout/frame","rccst-ui-component.technologies.overview.event-modeling/overview","rccst-ui-component.technologies.overview.micro-services/overview","rccst-ui-component.technologies.overview.kafka/overview","rccst-ui-component.technologies.overview.swagger/overview","rccst-ui-component.technologies.overview.re-frame-10x/overview"],"sourcesContent":["(ns rccst-ui-component.technologies.systems-services\n  (:require [rccst-ui-component.technologies.overview.event-modeling :as event-modeling]\n            [rccst-ui-component.technologies.overview.kafka :as kafka]\n            [rccst-ui-component.technologies.overview.micro-services :as micro-services]\n            [rccst-ui-component.technologies.overview.re-frame-10x :as re-frame-10x]\n            [rccst-ui-component.technologies.overview.swagger :as swagger]\n            [re-com.core :as rc]\n            [woolybear.ad.layout :as layout]))\n\n\n(defn page []\n\n  [layout/page {:extra-classes :is-fluid}\n   [:h2.has-text-info \"System / Services\"]\n   [layout/markdown-block\n    \"We use a number of techniques, technologies, and tools to provide critical system-level functionality:\n\n> For a short video summary of event-driven design as the backbone of a microservice architecture in Clojure, [click here](https://www.youtube.com/watch?v=ZEcjEHYs0zo)\n\"]\n   [rc/gap :size \"8px\"]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [event-modeling/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [micro-services/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [kafka/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [swagger/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [re-frame-10x/overview]]])\n"]}