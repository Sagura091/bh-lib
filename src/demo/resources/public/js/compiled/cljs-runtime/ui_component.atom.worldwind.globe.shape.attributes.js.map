{"version":3,"sources":["ui_component/atom/worldwind/globe/shape/attributes.cljs"],"mappings":";AAMA,AAAAA,0DAAAC,mCAAA,qDAAA,qDAAA,KAAA,EAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,WAAA;AAGA,sEAAA,8EAAAC,pJAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;iBAAA,AAAAE,4CAAAF,eAAA,xEAAgCI;oBAAhC,AAAAF,4CAAAF,eAAA,3EAA2CK;YAA3C,AAAAH,4CAAAF,eAAA,nEAAyDM;AAAzD,AAIE,IAAMC,aAAW,KAAAC;AAAjB,AACE,CAAM,AAAiBD,2BAAY,AAACE,4EAAY,iBAAAC,mBAAIN;AAAJ,AAAA,oBAAAM;AAAAA;;AAAeC;;;;AAC/D,CAAM,AAAgBJ,0BAAY,AAACE,4EAAY,iBAAAC,mBAAIL;AAAJ,AAAA,oBAAAK;AAAAA;;AAAkBE;;;;AACjE,CAAM,AAAgBL,0BAAY,iBAAAG,mBAAIJ;AAAJ,AAAA,oBAAAI;AAAAA;;AAAUG;;;;AAE5CN;;AAGJ,qEAAA,6EAAAO,lJAAME;AAAN,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAAd,4BAAAc;iBAAA,AAAAb,4CAAAa,eAAA,xEAA+BX;oBAA/B,AAAAF,4CAAAa,eAAA,3EAA0CV;YAA1C,AAAAH,4CAAAa,eAAA,nEAAwDT;AAAxD,AAIE,IAAMC,aAAW,KAAAU;AAAjB,AACE,CAAM,AAASV,mBAAY,AAACE,4EAAY,iBAAAC,mBAAIN;AAAJ,AAAA,oBAAAM;AAAAA;;AAAeC;;;;AACvD,CAAM,AAAgBJ,0BAAY,AAACE,4EAAY,iBAAAC,mBAAIL;AAAJ,AAAA,oBAAAK;AAAAA;;AAAkBE;;;;AACjE,CAAM,AAAgBL,0BAAY,iBAAAG,mBAAIJ;AAAJ,AAAA,oBAAAI;AAAAA;;AAAUG;;;;AAC5C,wBAAA,vBAAM,AAAaN;;AAEnBA","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","p__59536","map__59537","cljs.core/--destructure-map","cljs.core.get","ui-component.atom.worldwind.globe.shape.attributes/shape-attributes","fill-color","outline-color","width","attributes","js/shadow.js.shim.module$worldwindjs.ShapeAttributes","ui_component.atom.worldwind.globe.color.color","or__4253__auto__","ui-component.atom.worldwind.globe.color/default-fill-color","ui-component.atom.worldwind.globe.color/default-outline-color","ui-component.atom.worldwind.globe.color/default-width","p__59538","map__59539","ui-component.atom.worldwind.globe.shape.attributes/text-attributes","js/shadow.js.shim.module$worldwindjs.TextAttributes"],"sourcesContent":["(ns ui-component.atom.worldwind.globe.shape.attributes\n  (:require [\"worldwindjs\" :as WorldWind]\n            [ui-component.atom.worldwind.globe.color :as color]\n            [taoensso.timbre :as log]))\n\n\n(log/info \"ui-component.atom.worldwind.globe.shape.attributes\")\n\n\n(defn shape-attributes [{:keys [fill-color outline-color width]}]\n\n  ;(log/info \"attributes\" fill-color \"//\" outline-color \"//\" width)\n\n  (let [attributes (WorldWind/ShapeAttributes.)]\n    (set! (.-interiorColor attributes) (color/color (or fill-color color/default-fill-color)))\n    (set! (.-outlineColor attributes) (color/color (or outline-color color/default-outline-color)))\n    (set! (.-outlineWidth attributes) (or width color/default-width))\n\n    attributes))\n\n\n(defn text-attributes [{:keys [fill-color outline-color width]}]\n\n  ;(log/info \"attributes\" fill-color \"//\" outline-color \"//\" width)\n\n  (let [attributes (WorldWind/TextAttributes.)]\n    (set! (.-color attributes) (color/color (or fill-color color/default-fill-color)))\n    (set! (.-outlineColor attributes) (color/color (or outline-color color/default-outline-color)))\n    (set! (.-outlineWidth attributes) (or width color/default-width))\n    (set! (.-depthTest attributes) false)\n\n    attributes))\n\n\n"]}