{"version":3,"sources":["ui_component/atom/re_com/configure_toggle.cljs"],"mappings":";AAKA,AAAA;;;;;;;;;;6DAAA,qEAAAA,lIAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,yFAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,yFAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,2FAAA,3FAAMD,sGASFE,YAAMC;AATV,AAUG,0BAAA,2CAAA,oEAAA,gBAAA,4DAAA,jNAAMC;0BAAN,2CAAA,oEAAA,cAAA,4DAAA,/MAEMC;AAFN,AAKE,qEAAA,9DAACC,+CAAOC,kGAAMC,mCACZ,AAACC,kBACC,AAACC,cACC,uGAAA,2CAAA,wDAAA,SAAA,6DAAA,hRAACC;AAAD,AACmB,AACE,AAACC,mDAAMV,YAAMW;;AACb,oBAAMV;AAAN,AAAkB,QAACA,4CAAAA,8CAAAA;;AAAnB;;WACnB,kBAAA,AAAAW,gBAAKZ,cACHG,oBAAoBD;;;AAvBnC,CAAA,2FAAA,3FAAMJ,sGAyBFE;AAzBJ,AA0BG,4GAAA,rGAACa,yFAAiBb;;;AA1BrB,CAAA,qFAAA,rFAAMF;;AAAN","names":["var_args","G__51101","ui-component.atom.re-com.configure-toggle/configure-toggle","js/Error","show?","fn-to-apply","make-editable-style","save-editable-style","cljs.core.reduce","cljs.core/conj","re-com.core/md-icon-button","cljs.core/flatten","cljs.core/seq","cljs.core.merge","cljs.core.swap_BANG_","cljs.core/not","cljs.core/deref","ui_component.atom.re_com.configure_toggle.configure_toggle"],"sourcesContent":["(ns ui-component.atom.re-com.configure-toggle\n  (:require [re-com.core :as rc]))\n\n\n\n(defn configure-toggle\n  \"display a button that shows the 'settings' icon whn the user can clck\n  to start editing/configuring things, and the 'floppy' icon when the user can save those changes\n\n  ---\n\n  - show? : (atom) should the button show the 'save' icon (true) or the 'settings' icon (false)\n  - fn-to-apply : (fn) any function to call in addition to flipping the 'show?' atom back and forth\n  \"\n  ([show? fn-to-apply]\n   (let [make-editable-style {:md-icon-name \"zmdi-settings\"\n                              :tooltip      \"Configure this chart\"}\n         save-editable-style {:md-icon-name \"zmdi-floppy\"\n                              :tooltip      \"Save the configuration\"}]\n     ; TODO: can this be converted to (apply concat...)? (see https://clojuredesign.club/episode/080-apply-as-needed/)\n     (reduce conj [rc/md-icon-button]\n       (flatten\n         (seq\n           (merge {:class    \"button\"\n                   :on-click #(do\n                                (swap! show? not)\n                                (when fn-to-apply (fn-to-apply)))}\n             (if @show?\n               save-editable-style make-editable-style)))))))\n\n  ([show?]\n   (configure-toggle show? nil)))\n"]}