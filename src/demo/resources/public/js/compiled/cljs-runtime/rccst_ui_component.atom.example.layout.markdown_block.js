goog.provide('rccst_ui_component.atom.example.layout.markdown_block');
rccst_ui_component.atom.example.layout.markdown_block.example = (function rccst_ui_component$atom$example$layout$markdown_block$example(){
return (function (){
return woolybear.ad.demo.src.catalog.utils.demo.cljs$core$IFn$_invoke$arity$variadic("Markdown-Block",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Use Markdown blocks for [Markdown](https://en.wikipedia.org/wiki/Markdown) content.",new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [woolybear.ad.layout.frame,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [woolybear.ad.layout.markdown_block,"## You can make titles\n\n  > or notes/quotes\n\n  - even\n  - bulleted\n  - lists\n\n  1. or\n  2. numbered\n  3. lists\n\n  what about checkboxes:\n  - [ ]  one\n  - [ ]  two\n  - [X]  three (which is checked)\n\n  and a hyperlinks: [ring](https://github.com/ring-clojure/ring)\n\n\n  tables?\n\n  | thing     | description (right-justified)     |\n  |:----------|----------------------------------:|\n  | `thing-1` | a description for thing-1         |\n  | `thing-2` | and for thing-2                   |\n\n  even code-blocks:\n\n  ``` clojure\n  (defn func [a b]\n     (+ a b))\n  ```"], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("layout","frame","layout/frame",-1181711163,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("layout","markdown-block","layout/markdown-block",687473164,null),"## You can make titles\n\n  > or notes/quotes\n\n  - even\n  - bulleted\n  - lists\n\n  1. or\n  2. numbered\n  3. lists\n\n  what about checkboxes:\n  - [ ]  one\n  - [ ]  two\n  - [X]  three (which is checked)\n\n  and a hyperlinks: [ring](https://github.com/ring-clojure/ring)\n\n  tables?\n\n  | thing     | description (right-justified)     |\n  |:----------|----------------------------------:|\n  | `thing-1` | a description for thing-1         |\n  | `thing-2` | and for thing-2                   |\n\n  even code-blocks:\n\n  ``` clojure\n  (defn func [a b]\n     (+ a b))\n  ```"], null)], null)], 0));
});
});

//# sourceMappingURL=rccst_ui_component.atom.example.layout.markdown_block.js.map
