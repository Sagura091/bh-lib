{"version":3,"sources":["rccst_ui_component/atom/example/button/icon_button.cljs"],"mappings":";AAQA;;;4DAAA,5DAAOA,gIAEAC;AAFP,AAGM,kBAAKC;AAAL,AACI,mBAAA,ZAACC,4BAA+BF;;;AAE1C,6DAAA,7DAAMG;AAAN,AACM,4EAAA,uEAAA,mNAAA,8GAAA,2CAAA,uEAAA,+DAAA,+GAAA,2CAAA,qXAAA,2GAAA,2CAAA,qDAAA,uBAAA,eAAA,+GAAA,2CAAA,qXAAA,2GAAA,2CAAA,qDAAA,wBAAA,gBAAA,+GAAA,2CAAA,0XAAA,2GAAA,2CAAA,qDAAA,UAAA,0DAAA,KAAA,uEAAA,uFAAA,wBAAA,AAAA,9lGAACC,kbAIUC,+RACCC,oIAA0B,0DAAA,mFAAA,4EAAA,zNAACP,2YAC1BQ,iPACDD,oIAA0B,0DAAA,mFAAA,4EAAA,zNAACP,2YAC1BQ,mPACDD,oIAA0B,0DAAA,mFAAA,4EAAA,zNAACP,gZAC1BQ","names":["rccst-ui-component.atom.example.button.icon-button/tattle","evt","_","js/console.log","rccst-ui-component.atom.example.button.icon-button/example","woolybear.ad.demo.src.catalog.utils.demo","woolybear.ad.layout/padded","woolybear.ad.buttons/button","woolybear.ad.icons/icon"],"sourcesContent":["(ns rccst-ui-component.atom.example.button.icon-button\n  (:require [woolybear.ad.demo.src.catalog.utils :as acu]\n            [woolybear.ad.layout :as layout]\n            [woolybear.ad.icons :as icons]\n            [woolybear.ad.buttons :as buttons]))\n\n; TODO: should this be mode to woolybear/utils?\n;\n(defn- tattle\n      \"Utility for making a fake dispatcher that just reports to the js/console\"\n      [evt]\n      (fn [_]\n          (js/console.log \"Dispatched %o\" evt)))\n\n(defn example []\n      (acu/demo \"Buttons with icons\"\n                \"By default, buttons take simple strings as child elements, which are rendered\n                as the button label. But you're not limited to strings--button labels can include\n                icons as well.\"\n                [layout/padded {:extra-classes :level}\n                 [buttons/button {:on-click (tattle [:button-demo/click :icon-edit-button])}\n                  [icons/icon {:icon \"edit\"}] \"Edit\"]\n                 [buttons/button {:on-click (tattle [:button-demo/click :icon-share-button])}\n                  [icons/icon {:icon \"share\"}] \"Share\"]\n                 [buttons/button {:on-click (tattle [:button-demo/click :icon-twitter-button])}\n                  [icons/icon {:icon \"twitter\" :brand? true :extra-classes :has-text-info}] \"Tweet\"]]\n                '[layout/padded {:extra-classes :level}\n                  [buttons/button {:on-click (tattle [:button-demo/click :icon-edit-button])}\n                   [icons/icon {:icon \"edit\"}] \"Edit\"]\n                  [buttons/button {:on-click (tattle [:button-demo/click :icon-share-button])}\n                   [icons/icon {:icon \"share\"}] \"Share\"]\n                  [buttons/button {:on-click (tattle [:button-demo/click :icon-twitter-button])}\n                   [icons/icon {:icon \"twitter\" :brand? true :extra-classes :has-text-info}] \"Tweet\"]]))\n"]}