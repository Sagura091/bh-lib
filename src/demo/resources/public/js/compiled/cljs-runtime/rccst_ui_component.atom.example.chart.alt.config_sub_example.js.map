{"version":3,"sources":["rccst_ui_component/atom/example/chart/alt/config_sub_example.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","rccst-ui-component.atom.example.chart.alt.config-sub-example/config","config-data","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","rccst-ui-component.atom.example.chart.alt.config-sub-example/config-update-example","p__58733","map__58734","cljs.core/--destructure-map","cljs.core.get","seq58732","self__4852__auto__","cljs.core/seq","component","config-tools","default-config-data","params","re-com.core/v-box","js/goog.DEBUG","cljs.core.reduce","cljs.core/into","rccst-ui-component.atom.example.chart.alt.show-data/show-data","rccst-ui-component.atom.example.chart.alt.config-sub-example/dummy-container","p__58738","map__58739","seq58735","G__58736","cljs.core/first","cljs.core/next","G__58737","self__4851__auto__","component-id","container-id","id","reagent.core.atom","input-params","cljs.core.assoc","ui_component.utils.helpers.path__GT_keyword","cljs.core/deref","cljs.core/reset!","ui-component.utils/init-container-locals","ui-component.utils/dispatch-local","rccst-ui-component.atom.example.chart.alt.config-sub-example/example","p__58742","map__58744","seq58740","sample-data","cljs.core.partial","rccst-ui-component.atom.utils/component-example"],"sourcesContent":["(ns rccst-ui-component.atom.example.chart.alt.config-sub-example\n  (:require [rccst-ui-component.atom.utils :as e]\n            [ui-component.utils :as ui-utils]\n            [ui-component.utils.helpers :as h]\n            [rccst-ui-component.atom.example.chart.alt.show-data :as sd]\n            [re-com.core :as rc]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]))\n\n(log/info \"rccst-ui-component.atom.example.chart.bar-chart.data-sub-example\")\n\n\n(defn- config [config-data]\n  {:blackboard {:config-data config-data}\n   :container  \"\"})\n\n\n(defn- config-update-example [& {:keys [component config-data config-tools default-config-data] :as params}]\n  ;(log/info \"config-update-example (params)\" params)\n\n  [rc/v-box :src (rc/at)\n   :gap \"10px\"\n   :width \"100%\"\n   :height \"100%\"\n   :children [[:div.chart-part {:style {:width \"100%\" :height \"70%\"}}\n               (reduce into [component] (seq params))]\n\n              [rc/v-box\n               :gap \"5px\"\n               :style {:width \"100%\" :height \"30%\"}\n               :children [[sd/show-data config-data]\n                          [config-tools config-data default-config-data]]]]])\n\n\n(defn- dummy-container [component default-config-data\n                        & {:keys [component-id container-id] :as params}]\n\n  ;(log/info \"component\" default-config-data \"//\" params)\n\n  (let [id (r/atom nil)\n        input-params (assoc params :component-id (h/path->keyword component-id \"chart\"))]\n\n    (fn []\n      (when (nil? @id)\n        (reset! id component-id)\n        (ui-utils/init-container-locals @id (config default-config-data))\n        (ui-utils/dispatch-local @id [:container] container-id))\n\n      (reduce into [config-update-example :component component] (seq input-params)))))\n\n\n(defn example [& {:keys [container-id\n                         sample-data default-config-data\n                         component] :as params}]\n\n  ;(log/info \"example\" params)\n\n  (let [input-params (assoc params :data (r/atom sample-data)\n                                   :component (partial dummy-container component default-config-data)\n                                   :container-id \"\"\n                                   :component-id container-id)]\n    (reduce into [e/component-example] (seq input-params))))\n\n\n"]}