{"version":3,"sources":["rccst_ui_component/technologies/clojure.cljs"],"mappings":";AAYA,+CAAA,/CAAMA;AAAN,AAAA,oHAAA,2CAAA,uEAAA,qEAAA,mFAAA,6EAAA,kBAAA,sHAAA,gzCAAA,mGAAA,qDAAA,cAAA,6GAAA,2CAAA,uEAAA,qEAAA,0JAAA,6GAAA,2CAAA,uEAAA,qEAAA,+JAAA,6GAAA,2CAAA,uEAAA,qEAAA,+JAAA,6GAAA,2CAAA,uEAAA,qEAAA,2JAAA,6GAAA,2CAAA,uEAAA,qEAAA,6JAAA,6GAAA,2CAAA,uEAAA,qEAAA,+JAAA,6GAAA,2CAAA,uEAAA,qEAAA,z3JAEGC,qdAECC,s6CAkBAC,sKAEAC,oSACCC,0JAEDD,oSACCE,+JAEDF,oSACCG,+JAEDH,oSACCI,2JAEDJ,oSACCK,6JAEDL,oSACCM,+JAEDN,oSACCO","names":["rccst-ui-component.technologies.clojure/page","woolybear.ad.layout/page","woolybear.ad.layout/markdown-block","re-com.core/gap","woolybear.ad.layout/frame","rccst-ui-component.technologies.overview.ring/overview","rccst-ui-component.technologies.overview.compojure/overview","rccst-ui-component.technologies.overview.component/overview","rccst-ui-component.technologies.overview.sente/overview","rccst-ui-component.technologies.overview.transit/overview","rccst-ui-component.technologies.overview.next-jdbc/overview","rccst-ui-component.technologies.overview.jackdaw/overview"],"sourcesContent":["(ns rccst-ui-component.technologies.clojure\n  (:require [rccst-ui-component.technologies.overview.compojure :as compojure-overview]\n            [rccst-ui-component.technologies.overview.component :as component-overview]\n            [rccst-ui-component.technologies.overview.jackdaw :as jackdaw-overview]\n\n            [rccst-ui-component.technologies.overview.next-jdbc :as next-jdbc-overview]\n            [rccst-ui-component.technologies.overview.ring :as ring-overview]\n            [rccst-ui-component.technologies.overview.sente :as sente-overview]\n            [rccst-ui-component.technologies.overview.transit :as transit-overview]\n            [re-com.core :as rc]\n            [woolybear.ad.layout :as layout]))\n\n(defn page []\n\n  [layout/page {:extra-classes :is-fluid}\n   [:h2.has-text-info \"Clojure\"]\n   [layout/markdown-block\n    \"[Clojure](https://clojure.org) is a dynamic, general-purpose programming language, combining the approachability and\n    interactive development of a scripting language with an efficient and robust infrastructure for multithreaded programming.\n    [Clojure](https://clojure.org) is a compiled language, yet remains completely dynamic \u2013 every feature supported by\n    [Clojure](https://clojure.org) is supported at runtime. [Clojure](https://clojure.org) provides easy access to the Java\n    frameworks, with optional type hints and type inference, to ensure that calls to Java can avoid reflection.\n\n[Clojure](https://clojure.org) is a dialect of [Lisp](https://en.wikipedia.org/wiki/Lisp_(programming_language)), and shares with\nLisp the code-as-data philosophy and a powerful macro system.\n[Clojure](https://clojure.org) is predominantly a functional programming language, and features a rich set of immutable,\npersistent data structures. When mutable state is needed, Clojure offers a software transactional memory system and reactive\nAgent system that ensure clean, correct, multithreaded designs.\n\n> See also:\n>\n>[Clojure](https://clojure.org)\n>[Lisp](https://en.wikipedia.org/wiki/Lisp_(programming_language))\n>[Functional Programming ](https://en.wikipedia.org/wiki/Functional_programming)\"]\n   [rc/gap :size \"8px\"]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [ring-overview/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [compojure-overview/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [component-overview/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [sente-overview/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [transit-overview/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [next-jdbc-overview/overview]]\n\n   [layout/frame {:extra-classes :is-fluid}\n    [jackdaw-overview/overview]]])\n"]}