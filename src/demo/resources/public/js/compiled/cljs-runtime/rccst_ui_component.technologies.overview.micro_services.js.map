{"version":3,"sources":["rccst_ui_component/technologies/overview/micro_services.cljs"],"mappings":";AAIA,mEAAA,nEAAMA;AAAN,AACE,kEAAA,gBAAA,3EAACC","names":["rccst-ui-component.technologies.overview.micro-services/overview","rccst-ui-component.technologies.overview.overview/overview"],"sourcesContent":["(ns rccst-ui-component.technologies.overview.micro-services\n  (:require [rccst-ui-component.technologies.overview.overview :as o]))\n\n\n(defn overview []\n  (o/overview \"Microservices\"\n    \"### _Modular Software Architecture_\n\nMicroservices - aka the microservice architecture - is an architecture style that structures a system as a collection of\nservices that are: highly maintainable and testable, loosely coupled, independently deployable, organized around business\ncapabilities, and owned by a small team.  Microservices enable the rapid, frequent, and reliable delivery of large,\ncomplex applications.  It also allows for technological innovation and trying out new ideas on a much smaller and easier\nto work with scale.  Breaking a stovepipe system up into easily manageable microservices allows for the system to have\ngreater overall flexibility, while making development and maintenance easier and faster.\n\n> For more information on Event Modeling, please see:\n>\n> [Event Sourcing Microservices with Kafka](https://medium.com/kontenainc/event-sourcing-microservices-with-kafka-2568801527d8)\n>\n> [Event-Driven Microservices - not (just) about Events!](https://www.youtube.com/watch?v=DzGuDNHsOQ0)\n>\n> [Distributed Systems, Microservices and Interstellar Travel](https://www.youtube.com/watch?v=IRrh4VUHhNY)\n>\n> [Microservices Architecture](https://microservices.io)\n    \"))\n"]}