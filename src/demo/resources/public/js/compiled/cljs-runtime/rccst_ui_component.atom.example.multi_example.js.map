{"version":3,"sources":["rccst_ui_component/atom/example/multi_example.cljs"],"mappings":";AAMA,yDAAA,zDAAMA,0HAAUC;AAAhB,AACE,IAAMC,wFACU,AAACC,4CAAI,WAAAC,rIAEL,6CAAA,7CAACK;AAFI,AAAA,IAAAJ,aAAAD;YAAA,AAAAE,4CAAAD,WAAA,IAAA,nEAAME;QAAN,AAAAD,4CAAAD,WAAA,IAAA,/DAAYG;AAAZ,AAAA,kDAAA,wDAAA,kEAAA,xEACOD,kEAAeA,6DAAaA;GAFrCN;IAIbS,kBAAU,AAACC,gDAAO,gBAAA,eAAIV,fAAaW,hBAAKC;AAJ9C,AAME;AAAA,AAAA,0FAAA,2DAAA,2CAAA,uDAAA,2CAAA,uDAAA,OAAA,yDAAA,OAAA,iEAAA,0BAAA,sGAAA,kSAAA,2DAAA,mDAAA,uDAAA,OAAA,yDAAA,OAAA,iDAAA,MAAA,6DAAA,mFAAA,qGAAA,kSAAA,2DAAA,mDAAA,6DAAA,mFAAA,mHAAA,sEAAA,6DAAA,+DAAA,WAAAC,5qDAEIC,sEAAc,EAAA,GAAAC,cAAA,KAAA,2CAAA,sDAAA,qDAAA,oDAAA,khBAKFC,sEAAc,EAAA,GAAAD,cAAA,KAAA,2CAAA,sDAAA,qDAAA,oDAAA,6VAEFE,sFACOR,qEACDR;AAXlC,AAYwC,6CAAAY,tCAACK,sBAAOT;2BACjC,yDAAA,AAAAU,zDAACC,4CAAIpB,6BAAcS;;;AAItC","names":["rccst-ui-component.atom.example.multi-example/examples","the-examples","buttons","cljs.core.map","p__58743","vec__58745","cljs.core.nth","label","_","cljs.core.into","selected?","reagent.core.atom","cljs.core/keys","cljs.core/first","p1__58741#","re-com.core/v-box","js/goog.DEBUG","re-com.core/h-box","re-com.core/horizontal-bar-tabs","cljs.core/reset!","cljs.core/deref","cljs.core.get"],"sourcesContent":["(ns rccst-ui-component.atom.example.multi-example\n  (:require [reagent.core :as r]\n            [re-com.core :as rc]))\n\n\n\n(defn examples [the-examples]\n  (let [buttons (->> the-examples\n                  (map (fn [[label _]]\n                         {:id label :tooltip label :label label}))\n                  (into []))\n        selected? (r/atom (-> the-examples keys first))]\n\n    (fn []\n      [:div.box {:style {:width \"100%\" :height \"100%\" :background \"#faeee8\"}}\n       [rc/v-box :src (rc/at)\n        :justify :end\n        :width \"100%\"\n        :height \"100%\"\n        :gap \"5px\"\n        :children [[rc/h-box :src (rc/at)\n                    :justify :end\n                    :children [[rc/horizontal-bar-tabs\n                                :model selected?\n                                :tabs buttons\n                                :on-change #(reset! selected? %)]]]\n                   (get the-examples @selected?)]]])))\n\n\n\n(comment\n  (def the-examples {\"data-ratom\" [:div \"one\"]\n                     \"data-struct\" [:div \"two\"]\n                     \"data-sub\" [:div \"three\"]\n                     \"config-ratom\" [:div \"four\"]\n                     \"config-struct\" [:div \"five\"]\n                     \"config-sub\" [:div \"six\"]\n                     \"dummy-ratom\" [:div \"seven\"]})\n\n  (->> the-examples\n    (map (fn [[label component]]\n           {:id label :tooltip label :label label}))\n    (into []))\n\n  (def selected? (r/atom (-> the-examples keys first)))\n\n  (get the-examples @selected?)\n\n\n  ())\n\n"]}