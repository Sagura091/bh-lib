{"version":3,"sources":["ui_component/atom/chart/funnel_chart.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","ui-component.atom.chart.funnel-chart/sample-data","ui-component.utils.example-data/meta-tabular-data","ui-component.atom.chart.funnel-chart/sample-config-data","ui-component.utils.example-data/tabular-row-config-data","ui-component.atom.chart.funnel-chart/random-data","ui-component.utils.example-data/random-meta-positive-tabular-data","ui-component.atom.chart.funnel-chart/local-config","data","d","cljs.core/deref","cljs.core.get","fields","cljs.core.get_in","cljs.core.merge","cljs.core.filter","p__58800","vec__58801","cljs.core.nth","k","v","cljs.core._EQ_","cljs.core/keys","m","cljs.core/first","cljs.core.map_indexed","idx","entry","ui_component.utils.path__GT_keyword","cljs.core/cycle","ui-component.utils.color/default-stroke-fill-colors","cljs.core.into","p__58806","vec__58807","ui-component.atom.chart.funnel-chart/config","component-id","ui-component.utils/default-pub-sub","ui-component.atom.chart.utils/default-config","ui-component.utils/config-tab-panel","ui-component.atom.chart.funnel-chart/color-anchors","cljs.core.doall","cljs.core.map","p__58813","vec__58814","id","color-data","text","ui-component.atom.chart.utils/color-config-text","ui-component.utils/subscribe-local","ui-component.atom.chart.funnel-chart/cell-config","label","path","position","p","re-com.core/h-box","ui-component.atom.chart.utils/boolean-config","cljs.core.conj","ui-component.atom.chart.funnel-chart/make-cell-config","p__58817","map__58818","cljs.core/--destructure-map","name","item","ui-component.atom.chart.funnel-chart/config-panel","re-com.core/v-box","js/goog.DEBUG","ui-component.atom.chart.utils/non-gridded-chart-config","re-com.core/line","ui-component.atom.chart.utils/option","ui-component.atom.chart.utils/column-picker","re-com.core/label","ui-component.atom.chart.funnel-chart/make-cells","subscriptions","ret","p__58819","map__58820","ui-component.utils/resolve-sub","js/shadow.js.shim.module$recharts.Cell","or__4253__auto__","ui-component.utils.color/get-color","cljs.core.remove","cljs.core/empty?","ui-component.atom.chart.funnel-chart/included-cells","p__58821","map__58822","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","ui-component.atom.chart.funnel-chart/component*","p__58830","map__58831","seq58829","self__4852__auto__","cljs.core/seq","container-id","isAnimationActive?","params","included","js/shadow.js.shim.module$recharts.ResponsiveContainer","js/shadow.js.shim.module$recharts.FunnelChart","js/shadow.js.shim.module$recharts.Funnel","js/shadow.js.shim.module$recharts.LabelList","cljs.core/vec","cljs.core.sequence","cljs.core.concat","cljs.core/List","cljs.core.apply","cljs.core/array-map","ui-component.atom.chart.funnel-chart/source-code","ui-component.atom.chart.funnel-chart/component","p__58833","map__58834","seq58832","input-params","cljs.core.assoc","ui-component.atom.chart.wrapper-2/component-panel","cljs.core.reduce","cljs.core/into","ui-component.atom.chart.wrapper-2/base-chart","ui-component.atom.chart.funnel-chart/meta-data","re-frame.core/dispatch-sync"],"sourcesContent":["(ns ui-component.atom.chart.funnel-chart\n  (:require [ui-component.atom.chart.utils :as utils]\n            [ui-component.atom.chart.wrapper-2 :as wrapper]\n            [ui-component.utils :as ui-utils]\n            [ui-component.utils.color :as color]\n            [ui-component.utils.example-data :as example-data]\n            [re-com.core :as rc]\n            [re-frame.core :as rf]\n            [taoensso.timbre :as log]\n            [\"recharts\" :refer [ResponsiveContainer FunnelChart Funnel Cell LabelList\n                                XAxis YAxis CartesianGrid Tooltip Brush]]))\n\n\n(log/info \"ui-component.atom.chart.funnel-chart\")\n\n\n(def sample-data example-data/meta-tabular-data)\n(def sample-config-data example-data/tabular-row-config-data)\n(def random-data example-data/random-meta-positive-tabular-data)\n\n\n(defn local-config [data]\n  ;(log/info \"local-config\" data)\n  (let [d      (get @data :data)\n        fields (get-in @data [:metadata :fields])]\n    ;(log/info \"configgg : \" @data)\n    (merge\n      ; process options for :name\n      (->> fields\n        (filter (fn [[k v]] (= :string v)))\n        keys\n        ((fn [m]\n           {:name {:keys m :chosen (first m)}})))\n\n      ; process :name to map up the :colors\n      (->> d\n        (map-indexed (fn [idx entry]\n                       {(ui-utils/path->keyword (:name entry))\n                        {:name    (:name entry)\n                         :include true\n                         :color   (nth (cycle color/default-stroke-fill-colors) idx)}}))\n        (into {}))\n\n      ; process options for :value\n      (->> fields\n        (filter (fn [[k v]] (= :number v)))\n        keys\n        ((fn [m]\n           {:value {:keys m :chosen (first m)}}))))))\n\n\n(defn config [component-id data]\n  ;(log/info \"config\" @data)\n  (merge\n    ui-utils/default-pub-sub\n    utils/default-config\n    (ui-utils/config-tab-panel component-id)\n    (local-config data)))\n\n\n(defn- color-anchors [component-id]\n  [:<>\n   (doall\n     (map (fn [[id color-data]]\n            (let [text (:name color-data)]\n              ^{:key id} [utils/color-config-text component-id text [id :color] :right-above]))\n       @(ui-utils/subscribe-local component-id [:colors])))])\n\n\n(defn- cell-config [component-id label path position]\n  (let [p (ui-utils/path->keyword path)]\n    ;(log/info \"cell-config\" component-id \"//\" label \"//\" p)\n    [rc/h-box\n     :gap \"5px\"\n     :children [[utils/boolean-config component-id \"\" (conj [p] :include)]\n                [utils/color-config-text component-id label (conj [p] :color) :right-above]]]))\n\n\n(defn- make-cell-config [component-id data]\n  (->> (:data @data)\n    (map-indexed (fn [idx {:keys [name] :as item}]\n                   [cell-config component-id name [name] :above-right]))\n    (into [:<>])))\n\n\n(defn config-panel [data component-id]\n  ;(log/info \"config-panel\")\n  [rc/v-box :src (rc/at)\n   :gap \"10px\"\n   :width \"100%\"\n   :style {:padding          \"15px\"\n           :border-top       \"1px solid #DDD\"\n           :background-color \"#f7f7f7\"}\n   :children [[utils/non-gridded-chart-config component-id]\n              [rc/line :src (rc/at) :size \"2px\"]\n              [utils/option component-id \":name\" [:name]]\n              [rc/line :src (rc/at) :size \"2px\"]\n              [utils/column-picker data component-id \":value\" [:value :chosen]]\n              [rc/v-box :src (rc/at)\n               :gap \"5px\"\n               :children [[rc/label :src (rc/at) :label \"Funnel Colors\"]\n                          (make-cell-config component-id data)]]]])\n\n\n(defn make-cells [data subscriptions]\n  (let [ret (->> data\n              (map-indexed\n                (fn [idx {name :name}]\n                  (if (ui-utils/resolve-sub subscriptions [name :include])\n                    ^{:key (str idx name)}\n                    [:> Cell {:key  (str \"cell-\" idx)\n                              :fill (or (ui-utils/resolve-sub subscriptions [name :color])\n                                      (color/get-color 0))}]\n                    [])))\n              (remove empty?)\n              (into [:<>]))]\n    ret))\n\n\n(defn- included-cells [data subscriptions]\n  (->> data\n    (filter (fn [{:keys [name]}] (ui-utils/resolve-sub subscriptions [name :include])))\n    (into [])))\n\n\n(defn- component* [& {:keys [data component-id container-id\n                             subscriptions isAnimationActive?]\n                      :as   params}]\n\n  ;(log/info \"funnel component*\" params)\n  (let [d        (if (empty? data) [] (get data :data))\n        included (included-cells d subscriptions)]\n\n    [:> ResponsiveContainer\n     [:> FunnelChart {:label true}\n      ;(utils/override true {} :label)\n\n      ;(utils/non-gridded-chart-components component-id {})\n\n      [:> Funnel {:dataKey           (ui-utils/resolve-sub subscriptions [:value :chosen])\n                  :nameKey           (ui-utils/resolve-sub subscriptions [:name :chosen])\n                  :label             true\n                  :data              included\n                  :isAnimationActive @isAnimationActive?}\n       (make-cells d subscriptions)\n       [:> LabelList {:position :right :fill \"#000000\" :stroke \"none\" :dataKey (ui-utils/resolve-sub subscriptions [:value :chosen])}]]]]))\n\n\n(def source-code `[:> FunnelChart {:height 400 :width 500}\n                   [:> Funnel {:dataKey           :value\n                               :nameKey           \"name\"\n                               :label             true\n                               :data              @data\n                               :isAnimationActive @isAnimationActive?}]])\n\n\n(defn component [& {:keys [component-id] :as params}]\n\n  ;(log/info \"component-2 funnel\" params)\n\n  (let [input-params (assoc params :component* component*\n                                   :component-panel wrapper/component-panel\n                                   :config config\n                                   :local-config local-config)]\n\n    (reduce into [wrapper/base-chart] (seq input-params))))\n\n\n(def meta-data {:rechart/funnel {:component component\n                                 ;:configurable-component configurable-component\n                                 :ports     {:data   :port/sink\n                                             :config :port/sink}}})\n\n\n(rf/dispatch-sync [:register-meta meta-data])\n\n\n(comment\n\n  ())\n\n\n\n\n\n\n\n\n\n\n"]}