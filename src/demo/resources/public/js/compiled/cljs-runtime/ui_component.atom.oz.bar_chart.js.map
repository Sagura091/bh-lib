{"version":3,"sources":["ui_component/atom/oz/bar_chart.cljs"],"mappings":"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","names":["ui-component.atom.oz.bar-chart/source-code","ui-component.atom.oz.bar-chart/config","component-id","data","ui-component.utils/default-pub-sub","cljs.core.merge","ui-component.atom.chart.utils/default-config","ui-component.utils/config-tab-panel","ui-component.atom.oz.bar-chart/config-panel","ui-component.atom.oz.bar-chart/sample-data","reagent.core.atom","cljs.core/deref","ui-component.atom.oz.bar-chart/component-panel","oz/vega-lite","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","ui-component.atom.oz.bar-chart/component","p__51676","map__51677","cljs.core/--destructure-map","cljs.core.get","seq51674","self__4852__auto__","cljs.core/seq","container-id","id","cljs.core/reset!","ui-component.utils/init-container-locals","ui-component.utils/dispatch-local","or__4253__auto__","ui-component.atom.chart.wrapper/configurable-chart","ui-component.atom.chart.utils/dummy-data-panel"],"sourcesContent":["(ns ui-component.atom.oz.bar-chart\n  (:require [ui-component.atom.chart.utils :as utils]\n            [ui-component.atom.chart.wrapper :as c]\n            [ui-component.utils :as ui-utils]\n\n\n            [re-com.core :as rc]\n\n            [reagent.core :as r]\n            [taoensso.timbre :as log]))\n\n\n(def source-code '[oz.core/vega-lite\n                   {:data     {:values (get @data :data)}\n                    :mark     \"bar\"\n                    :encoding {:x     {:field \"time\"\n                                       :type  \"ordinal\"}\n                               :y     {:aggregate \"sum\"\n                                       :field     \"quantity\"\n                                       :type      \"quantitative\"}\n                               :color {:field \"item\"\n                                       :type  \"nominal\"}}}])\n\n\n(defn- config [component-id data]\n  (-> ui-utils/default-pub-sub\n    (merge\n      utils/default-config\n      {:type \"oz-line-chart\"}\n      (ui-utils/config-tab-panel component-id))))\n\n\n(defn- config-panel\n  [data component-id]\n\n  [:div \"config panel here\"])\n\n\n(def sample-data\n  (r/atom {:$schema \"https://vega.github.io/schema/vega/v5.json\"\n           :width   400\n           :height  400\n           :padding 5\n\n           :data    [{:name   \"table\"\n                      :values [{:category \"A\" :amount 28}\n                               {:category \"B\" :amount 55}\n                               {:category \"C\" :amount 43}\n                               {:category \"D\" :amount 91}\n                               {:category \"E\" :amount 81}\n                               {:category \"F\" :amount 53}\n                               {:category \"G\" :amount 19}\n                               {:category \"H\" :amount 87}]}]\n\n           :signals [{:name  :tooltip\n                      :value {}\n                      :on    [{:events \"rect:mouseover\" :update \"datum\"}\n                              {:events \"rect:mouseout\" :update \"{}\"}]}]\n\n           :scales  [{:name    :x-axis\n                      :type    :band\n                      :domain  {:data \"table\" :field :category}\n                      :range   :width\n                      :padding 0.05\n                      :round   true}\n                     {:name   :y-axis\n                      :domain {:data \"table\" :field :amount}\n                      :nice   true\n                      :range  :height}]\n\n           :axes    [{:orient :bottom :scale :x-axis}\n                     {:orient :left :scale :y-axis}]\n\n           :marks   [{:type   \"rect\"\n                      :from   {:data \"table\"}\n                      :encode {:enter  {:x     {:scale :x-axis :field :category}\n                                        :width {:scale :x-axis :band 1}\n                                        :y     {:scale :y-axis :field :amount}\n                                        :y2    {:scale :y-axis :value 0}}\n                               :update {:fill {:value \"steelblue\"}}\n                               :hover  {:fill {:value \"red\"}}}}\n\n                     {:type   \"text\"\n                      :encode {:enter  {:align {:value    :center\n                                                :baseline {:value :bottom}\n                                                :fill     {:value \"#333\"}}}\n                               :update {:x           {:scale :x-axis :signal \"tooltip.category\" :band 0.5}\n                                        :y           {:scale :y-axis :signal \"tooltip.amount\" :offset -2}\n                                        :text        {:signal \"tooltip.amount\"}\n                                        :fillOpacity [{:test \"isNaN(tooltip.amount)\" :value 0}\n                                                      {:value 1}]}}}]}))\n\n\n(defn- component-panel\n  [data component-id]\n\n  [:div {:style {:width \"400px\" :height \"500px\"}}\n   [oz/vega-lite @data]])\n\n\n(defn component\n  ([& {:keys [data component-id container-id]}]\n\n   ;(log/info \"bar-chart\" @data)\n\n   ;(if (not= :tabular (get-in @data [:metadata :type]))\n   ;  [rc/alert-box :src (rc/at)\n   ;   :id (str container-id \"/\" component-id \".ERROR\")\n   ;   :alert-type :danger\n   ;   :closeable? false\n   ;   :body [:div \"The data passed is NOT of type :tabular!\"]]\n\n   (let [id (r/atom nil)]\n\n     (fn []\n       (when (nil? @id)\n         (reset! id component-id)\n         (ui-utils/init-container-locals @id (config @id data))\n         (ui-utils/dispatch-local @id [:container] (or container-id \"\")))\n\n       ;(log/info \"component\" @id)\n\n       [c/configurable-chart\n        :data data\n        :id @id\n        :data-panel utils/dummy-data-panel\n        :config-panel config-panel\n        :component component-panel]))))\n\n\n(comment\n  [:div\n   [oz.core/vega {}]\n   [oz.core/vega-lite {}]]\n\n\n  ())\n\n"]}