{"version":3,"sources":["ui_component/atom/card/flippable_card.cljs"],"mappings":";AAGA,oDAAA,AAAA,pDAAKA;AAML,2DAAA,3DAAKC;AACL,sDAAA,tDAAKC;AACL,sDAAA,wCAAA,mEAAA,uDAAA,6DAAA,uDAAA,iEAAA,0EAAA,4EAAA,0DAAA,wEAAA,2DAAA,6GAAA,SAAA,gEAAA,UAAA,yDAAA,sDAAA,yDAAA,xkCAAKC,61BAEgCF,pEACAC;AAMrC,qDAAA,2CAAA,uDAAA,OAAA,yDAAA,vNAAKE;AAEL,AAAA;;;;;;;;;;;;;;;;;;;;;;;6CAAA,qDAAAC,lGAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,gFAAAF;;;AAAA,AAAA,CAAA,kFAAA,WAAAG,7FAAMD;AAAN,AAAA,IAAAE,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAA,AAAAE,4CAAAF,eAAA,nEAsBaM;WAtBb,AAAAJ,4CAAAF,eAAA,lEAsBmBO;YAtBnB,AAAAL,4CAAAF,eAAA,nEAsBwBQ;AAtBxB,AAAA,0FAAA,wEAAA,2CAAA,uDAwB0B,iBAAAC,mBAAID;AAAJ,AAAA,oBAAAC;AAAAA;;AAAUnB;;aAxBpC,mFAAA,oFAAA,mFAAA,iGAAA,mFAAA,jGA0B0BgB,kLACDC;;;AA3BzB,CAAA,qEAAA,rEAAMT;;AAAN;AAAA,CAAA,+DAAA,WAAAK,1EAAML;AAAN,AAAA,IAAAM,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA","names":["ui-component.atom.card.flippable-card/source-code","ui-component.atom.card.flippable-card/default-background","ui-component.atom.card.flippable-card/default-color","ui-component.atom.card.flippable-card/default-style","ui-component.atom.card.flippable-card/default-size","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","ui-component.atom.card.flippable-card/card","p__50918","map__50919","cljs.core/--destructure-map","cljs.core.get","seq50917","self__4852__auto__","cljs.core/seq","front","back","style","or__4253__auto__"],"sourcesContent":["(ns ui-component.atom.card.flippable-card)\n\n\n(def source-code '[:div.flip-card {:style (or style default-style)}\n                   [:div.flip-card-inner\n                    [:div.flip-card-front front]\n                    [:div.flip-card-back back]]])\n\n\n(def default-background \"#9CA8B3\")\n(def default-color \"#FF\")\n(def default-style {:width           \"100%\" :height \"100%\"\n                    :overflow        \"hidden\"\n                    :background      default-background\n                    :color           default-color\n                    :display         :flex\n                    :backgroundSize  \"contain\"\n                    :flex-direction  :column\n                    :justify-content :center\n                    :align-items     :center})\n(def default-size {:width \"100%\" :height 400})\n\n(defn card\n  \"returns a 'flippable card' react component (via [react-ui-cards](https://github.com/nukeop/react-ui-cards)).\n\n  Works similar to [re-com](https://github.com/Day8/re-com) where the arguments are 'named` by keyword, but ***not***\n  required to be inside a hash-map.\n  We very cleverly combine Clojure's [variadics](https://clojure.org/guides/learn/functions#_variadic_functions) with\n  [destructuring](https://clojure.org/guides/destructuring) to treat the 'exploded' key/value pairs\n  as if they _had_ come from a hash-map...\n\n  ---\n\n  | key       | type     | description                                               |\n  |:----------|:---------|-----------------------------------------------------------|\n  | `:front`  | hiccup   | a reagent/react component, typically in [hiccup]() format for the front (unflipped) side of the card |\n  | `:back`   | hiccup   | a reagent/react component, typically in [hiccup]() format for the back (flipped) side of the card |\n  | `:style`  | hash-map | hash-map of any html/css style properties (minus the `:style` part itself, i.e., just the content part), typically used to specify the `:width` and `:height` of the card |\n\n> Note: this library does NOT work properly on Webkit/Safari due to problems with the CSS. It\n> should be possible to replace this library with just some `divs` and the proper CSS.\n>\n> See [here](https://line25.com/articles/super-cool-css-flip-effect-with-webkit-animation/) for an approach.\n  \"\n  [& {:keys [front back style]}]\n\n  [:div.flip-card {:style (or style default-style)}\n   [:div.flip-card-inner\n    [:div.flip-card-front front]\n    [:div.flip-card-back back]]])\n"]}