{"version":3,"sources":["rccst_ui_component/atom/example/re_com/text_input_re_com.cljs"],"mappings":"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","names":["p__59781","map__59782","cljs.core/--destructure-map","cljs.core.get","cljs.core/deref","p1__59778#","p1__59779#","p1__59780#","rccst-ui-component.atom.example.re-com.text-input-re-com/demos","disabled?","change-on-blur?","on-alter?","regex","text-val","status-tooltip","status-icon?","status","slider-val","context","re-com.core/v-box","re-com.core/label","js/goog.DEBUG","re-com.core/gap","re-com.core/input-text","cljs.core/reset!","clojure.string/upper-case","cljs.core/identity","re-com.core/input-password","re-com.core/input-textarea","p__59787","map__59788","p1__59783#","p1__59784#","p1__59785#","p1__59786#","rccst-ui-component.atom.example.re-com.text-input-re-com/controls","re-com.core/title","re-com.core/box","re-com.core/radio-button","re-com.core/h-box","re-com.core/checkbox","val","re-com.core/slider","rccst-ui-component.atom.example.re-com.text-input-re-com/example","reagent.ratom.atom","woolybear.ad.demo.src.catalog.utils.demo","woolybear.ad.layout/centered"],"sourcesContent":["(ns rccst-ui-component.atom.example.re-com.text-input-re-com\n  (:require [clojure.string :as string]\n            [re-com.core :as rc]\n            [reagent.ratom :as ratom]\n            [woolybear.ad.demo.src.catalog.utils :as acu]\n            [woolybear.ad.layout :as layout]))\n\n\n(defn- demos [{:keys [disabled? change-on-blur? on-alter?\n                      regex text-val status-tooltip\n                      status-icon? status slider-val] :as context}]\n  [rc/v-box\n   :children [[rc/label :src (rc/at) :label \"[input-text ... ]\"]\n              [rc/gap :src (rc/at) :size \"5px\"]\n              [rc/input-text :src (rc/at)\n               :model text-val\n               :status @status\n               :status-icon? @status-icon?\n               :status-tooltip @status-tooltip\n               :width \"300px\"\n               :placeholder (if @regex \"enter number (99.9)\" \"placeholder message\")\n               :on-change #(reset! text-val %)\n               :validation-regex @regex\n               :on-alter (if @on-alter? string/upper-case identity)\n               :disabled? disabled?]\n              [rc/gap :src (rc/at) :size \"20px\"]\n\n              [rc/label :src (rc/at) :label \"[input-password ... ]\"]\n              [rc/gap :src (rc/at) :size \"5px\"]\n              [rc/input-password :src (rc/at)\n               :model text-val\n               :status @status\n               :status-icon? @status-icon?\n               :status-tooltip @status-tooltip\n               :width \"300px\"\n               :placeholder (if @regex \"enter number (99.9)\" \"placeholder message\")\n               :on-change #(reset! text-val %)\n               :validation-regex @regex\n               :on-alter (if @on-alter? string/upper-case identity)\n               :disabled? disabled?]\n              [rc/gap :src (rc/at) :size \"20px\"]\n\n              [rc/label :src (rc/at) :label \"[input-textarea ... ]\"]\n              [rc/gap :src (rc/at) :size \"5px\"]\n              [rc/input-textarea :src (rc/at)\n               :model text-val\n               :status @status\n               :status-icon? @status-icon?\n               :status-tooltip @status-tooltip\n               :width \"300px\"\n               :rows @slider-val\n               :placeholder (if @regex \"enter number (99.9)\" \"placeholder message\")\n               :on-change #(reset! text-val %)\n               :validation-regex @regex\n               :on-alter (if @on-alter? string/upper-case identity)\n               :disabled? disabled?]]])\n\n\n(defn- controls [{:keys [disabled? change-on-blur? on-alter?\n                         regex text-val status-tooltip\n                         status-icon? status slider-val] :as context}]\n  [rc/v-box :src (rc/at)\n   :gap \"15px\"\n   :style {:min-width        \"150px\"\n           :padding          \"15px\"\n           :border-top       \"1px solid #DDD\"\n           :background-color \"#f7f7f7\"}\n   :children [\n              [rc/title :src (rc/at) :level :level3 :label \"Interactive Parameters\" :style {:margin-top \"0\"}]\n              [rc/v-box :src (rc/at)\n               :children [[rc/box :src (rc/at) :align :start :child [:code \":status\"]]\n                          [rc/radio-button :src (rc/at)\n                           :label \"nil/omitted - normal input state\"\n                           :value nil\n                           :model @status\n                           :on-change #(do\n                                         (reset! status %)\n                                         (reset! status-tooltip \"\"))\n                           :style {:margin-left \"20px\"}]\n                          [rc/radio-button :src (rc/at)\n                           :label \":success - border color becomes green\"\n                           :value :success\n                           :model @status\n                           :on-change #(do\n                                         (reset! status %)\n                                         (reset! status-tooltip \"Success tooltip - this (optionally) appears when an input-text components has validated successfully.\"))\n                           :style {:margin-left \"20px\"}]\n                          [rc/radio-button :src (rc/at)\n                           :label \":warning - border color becomes orange\"\n                           :value :warning\n                           :model @status\n                           :on-change #(do\n                                         (reset! status %)\n                                         (reset! status-tooltip \"Warning tooltip - this (optionally) appears when there are warnings on input-text components.\"))\n                           :style {:margin-left \"20px\"}]]]\n              [rc/h-box :src (rc/at)\n               :align :start\n               :gap \"5px\"\n               :children [[rc/checkbox :src (rc/at)\n                           :label [:code \":status-icon?\"]\n                           :model status-icon?\n                           :on-change (fn [val]\n                                        (reset! status-icon? val))]\n                          [:span \" (notice the tooltips on the icons)\"]]]\n\n              [rc/h-box :src (rc/at)\n               :align :start\n               :gap \"5px\"\n               :children [[rc/checkbox :src (rc/at)\n                           :label [:code \":on-alter\"]\n                           :model on-alter?\n                           :on-change (fn [val]\n                                        (reset! on-alter? val))]\n                          [:span \" (set to \" [:code \"string/upper-case\"] \")\"]]]\n              [rc/checkbox :src (rc/at)\n               :label [rc/box :src (rc/at) :align :start :child [:code \":disabled?\"]]\n               :model disabled?\n               :on-change (fn [val]\n                            (reset! disabled? val))]\n              [rc/h-box :src (rc/at)\n               :gap \"10px\"\n               :children [[rc/h-box :src (rc/at)\n                           :align :start\n                           :children [[:code \":rows\"]\n                                      \"(textarea)\"]]\n                          [rc/slider :src (rc/at)\n                           :model slider-val\n                           :min 1\n                           :max 10\n                           :width \"200px\"\n                           :on-change #(reset! slider-val %)]\n                          [rc/label :src (rc/at) :label @slider-val]]]]])\n\n\n(defn example []\n  (let [context {:disabled?       (ratom/atom false)\n                 :change-on-blur? (ratom/atom true)\n                 :on-alter?       (ratom/atom false)\n                 :regex           (ratom/atom nil)\n                 :text-val        (ratom/atom nil)\n                 :status-tooltip  (ratom/atom \"\")\n                 :status-icon?    (ratom/atom false)\n                 :status          (ratom/atom nil)\n                 :slider-val      (ratom/atom 4)}]\n    (fn []\n      (acu/demo \"Input Text\"\n        [rc/h-box :src (rc/at)\n         :gap \"10px\"\n         :children [[layout/centered {:extra-classes :width-50}\n                     [controls context]]\n                    [layout/centered {:extra-classes :width-50}\n                     [demos context]]]]))))\n"]}