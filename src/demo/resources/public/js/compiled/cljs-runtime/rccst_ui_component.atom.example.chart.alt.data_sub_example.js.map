{"version":3,"sources":["rccst_ui_component/atom/example/chart/alt/data_sub_example.cljs"],"mappings":";AAWA,AAAAA,0DAAAC,mCAAA,qDAAA,6DAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,UAAA;AAMA,oEAAA,pEAAOC,gJAAQC;AAAf,AAAA,kDAAA,kEAAA,2CAAA,2FAAA,gEAAA,7EAGmCA;;AAInC,AAAA,iFAAA,yFAAAC,1KAAOM;AAAP,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,oHAAAF;;;AAAA,AAAA,CAAA,sHAAA,WAAAG,jIAAOD;AAAP,AAAA,IAAAE,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAAA,TAA8FU;WAA9F,AAAAR,4CAAAF,eAAA,lEAAsCT;mBAAtC,AAAAW,4CAAAF,eAAA,1EAA2CM;kBAA3C,AAAAJ,4CAAAF,eAAA,zEAAwDO;gBAAxD,AAAAL,4CAAAF,eAAA,vEAAoEQ;iBAApE,AAAAN,4CAAAF,eAAA,xEAA8ES;AAA9E,AAAA,6GAAA,+SAAA,iDAAA,OAAA,uDAAA,OAAA,yDAAA,OAAA,6DAAA,mFAAA,mFAAA,yEAAA,2CAAA,uDAAA,2CAAA,uDAAA,OAAA,yDAAA,wNAAA,qGAAA,iDAAA,MAAA,uDAAA,2CAAA,uDAAA,OAAA,yDAAA,cAAA,6DAAA,mFAAA,8JAAA,h7DAIGE,sEAAc,EAAA,GAAAC,cAAA,KAAA,2CAAA,sDAAA,kEAAA,oDAAA,wwBAKF,8DAAA,9DAACC,+CAAOC,kGAAMN,kBAAW,AAACH,cAAIK,oGAE9BC,mhBAGYI,8DAAaxB,gGACbkB,WAAWlB,KAAKe,aAAaC;;;AAfxD,CAAA,yGAAA,zGAAOT;;AAAP;AAAA,CAAA,mGAAA,WAAAK,9GAAOL;AAAP,AAAA,IAAAM,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAkBA,AAAA,6EAAA,qFAAAX,lKAAOwB;AAAP,AAAA,IAAAvB,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAuB,gHAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAApB;;;AAAA,AAAA,CAAA,kHAAA,8CAAAqB,hKAAOD,6HAAiBR,UAAUF,aAAaC;AAA/C,AAAA,IAAAW,aAAAD;IAAAC,iBAAA,AAAAjB,4BAAAiB;aAAAA,TACiER;mBADjE,AAAAR,4CAAAgB,eAAA,1EACkCQ;mBADlC,AAAAxB,4CAAAgB,eAAA,1EAC+CS;AAD/C,AAEE,IAAMC,KAAa,gDAAA,hDAACC;IACdC,eAAa,4DAAA,qRAAA,jVAACC,qDAAMrB,4EAAqB,gJAAA,hJAACsB,mIAAgBN,kJACjBA;AAF/C,AAME;AAAA,AACE,GAAM,CAAA,AAAAO,uBAAA,PAAOL;AAAb,AACE,AAACM,sBAAON,GAAGF;;AACX,yCAAA,AAAAO,zCAACE,yDAAgCP,IAAG,AAACtC,kEAAOgB;;AAC5C,kCAAA,AAAA2B,oBAAA,mFAAA,zIAACG,kDAAyBR,+JAAgBD;;AAH5C;;AAKA,qEAAA,kKAAA,hOAACd,+CAAOC,kGAAMhB,8IAA+BU,kBAAW,AAACH,cAAIyB;;;;AAdnE,CAAA,qGAAA,rGAAOd;;AAAP;AAAA,CAAA,+FAAA,WAAAG,1GAAOH;AAAP,AAAA,IAAAI,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;IAAAI,WAAA,AAAAF,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;IAAAK,WAAA,AAAAH,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAM,qBAAA;AAAA,AAAA,OAAAA,wDAAAL,SAAAG,SAAAC,SAAAL;;;AAAA,AAiBA,AAAA,qEAAA,6EAAA3B,lJAAM6C;AAAN,AAAA,IAAA5C,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAA4C,wGAAAzC;;;AAAA,AAAA,CAAA,0GAAA,WAAA0C,rHAAMD;AAAN,AAAA,IAAAE,aAAAD;IAAAC,iBAAA,AAAAtC,4BAAAsC;aAAAA,TAEwC7B;mBAFxC,AAAAR,4CAAAqC,eAAA,1EAAyBZ;kBAAzB,AAAAzB,4CAAAqC,eAAA,zEACyBE;mBADzB,AAAAvC,4CAAAqC,eAAA,1EACqCjC;kBADrC,AAAAJ,4CAAAqC,eAAA,zEACkDhC;gBADlD,AAAAL,4CAAAqC,eAAA,vEAEyB/B;AAFzB,AAME,IAAMsB,eAAa,4DAAA,mHAAA,kFAAA,qEAAA,GAAA,zUAACC,qDAAMrB,4DAAa+B,mIACQd,oJAEH,AAACe,gDAAQ1B,2EAAgBR,UAAUF,aAAaC;AAH5F,AAME,qEAAA,9DAACM,+CAAOC,kGAAM6B,wDAAqB,AAACtC,cAAIyB;;;AAZ5C,CAAA,6FAAA,7FAAMO;;AAAN;AAAA,CAAA,uFAAA,WAAAG,lGAAMH;AAAN,AAAA,IAAAjC,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAmC;;;AAAA,AAiBA,AAoBA","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","rccst-ui-component.atom.example.chart.alt.data-sub-example/config","data","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","rccst-ui-component.atom.example.chart.alt.data-sub-example/data-update-example","p__58685","map__58686","cljs.core/--destructure-map","cljs.core.get","seq58684","self__4852__auto__","cljs.core/seq","default-data","random-data","component","data-tools","params","re-com.core/v-box","js/goog.DEBUG","cljs.core.reduce","cljs.core/into","rccst-ui-component.atom.example.chart.alt.show-data/show-data","rccst-ui-component.atom.example.chart.alt.data-sub-example/dummy-container","p__58691","map__58692","seq58687","G__58688","cljs.core/first","cljs.core/next","G__58689","G__58690","self__4851__auto__","component-id","container-id","id","reagent.core.atom","input-params","cljs.core.assoc","ui_component.utils.helpers.path__GT_keyword","cljs.core/deref","cljs.core/reset!","ui-component.utils/init-container-locals","ui-component.utils/dispatch-local","rccst-ui-component.atom.example.chart.alt.data-sub-example/example","p__58694","map__58695","seq58693","sample-data","cljs.core.partial","rccst-ui-component.atom.utils/component-example"],"sourcesContent":["(ns rccst-ui-component.atom.example.chart.alt.data-sub-example\n  (:require [rccst-ui-component.atom.utils :as e]\n            [ui-component.utils :as ui-utils]\n            [ui-component.utils.helpers :as h]\n            [rccst-ui-component.atom.example.chart.alt.show-data :as sd]\n            [re-com.core :as rc]\n            [re-frame.core :as re-frame]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]))\n\n\n(log/info \"rccst-ui-component.atom.example.chart.alt.data-sub-example\")\n\n\n;(def default-data chart/sample-data)\n\n\n(defn- config [data]\n  ; notice how we need to use '.' instead of '/' for this :topic?\n  ; which causes an issue with subscriptions and resolve-value\n  {:blackboard {:topic.sample-data data}\n   :container  \"\"})\n\n\n(defn- data-update-example [& {:keys [data default-data random-data component data-tools] :as params}]\n  ;(log/info \"data-update-example (params)\" params)\n  ;(log/info \"data-update-example (component)\" component \"//\" data-panel \"//\" config-panel \"//\" default-data)\n\n  [rc/v-box :src (rc/at)\n   :gap \"10px\"\n   :width \"100%\"\n   :height \"100%\"\n   :children [[:div.chart-part {:style {:width \"100%\" :height \"90%\"}}\n               (reduce into [component] (seq params))]\n\n              [rc/v-box\n               :gap \"5px\"\n               :style {:width \"100%\" :height \"30%\"}\n               :children [[sd/show-data data]\n                          [data-tools data default-data random-data]]]]])\n\n\n(defn- dummy-container [component default-data random-data\n                        & {:keys [component-id container-id] :as params}]\n  (let [id           (r/atom nil)\n        input-params (assoc params :component-id (h/path->keyword component-id \"chart\")\n                                   :container-id component-id)]\n\n    ;(log/info \"dummy-container\" component \"//\" params)\n\n    (fn []\n      (when (nil? @id)\n        (reset! id component-id)\n        (ui-utils/init-container-locals @id (config default-data))\n        (ui-utils/dispatch-local @id [:container] container-id))\n\n      (reduce into [data-update-example :component component] (seq input-params)))))\n\n\n(defn example [& {:keys [container-id\n                         sample-data default-data random-data\n                         component] :as params}]\n\n  ;(log/info \"example\" container-id params)\n\n  (let [input-params (assoc params :data sample-data\n                                   :component-id container-id\n                                   :container-id \"\"\n                                   :component (partial dummy-container component default-data random-data))]\n                                   ;:default-data default-data)]\n\n    (reduce into [e/component-example] (seq input-params))))\n\n\n\n; mess with the subscription chain\n(comment\n  (re-frame/subscribe [:bar-chart-2-data-sub-demo])\n  (re-frame/subscribe [:bar-chart-2-data-sub-demo.blackboard])\n  (re-frame/subscribe [:bar-chart-2-data-sub-demo.blackboard.topic.sample-data])\n  (re-frame/subscribe [:bar-chart-2-data-sub-demo.blackboard.topic.sample-data.metadata])\n  (re-frame/subscribe [:bar-chart-2-data-sub-demo.blackboard.topic.sample-data.data])\n\n\n\n  (re-frame/subscribe [:bar-chart-2-data-sub-demo :blackboard.topic.sample-data])\n\n\n  (= @(re-frame/subscribe [:bar-chart-2-data-sub-demo])\n    @(re-frame/subscribe [:bar-chart-2-data-sub-demo :blackboard :topic.sample-data]))\n\n\n  ())\n\n\n; mess with the data at the subscribed location\n(comment\n  (def data [:area-chart-2-data-sub-demo :blackboard :topic.sample-data])\n  (def old-data (ui-utils/subscribe-local data [:data]))\n\n\n  (h/handle-change-path data [:data]\n    (assoc-in @(ui-utils/subscribe-local data [:data]) [0 :uv] 10000))\n\n\n  ())\n"]}