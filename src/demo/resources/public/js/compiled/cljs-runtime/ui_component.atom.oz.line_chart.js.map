{"version":3,"sources":["ui_component/atom/oz/line_chart.cljs"],"mappings":"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","names":["ui-component.atom.oz.line-chart/source-code","ui-component.atom.oz.line-chart/config","component-id","data","ui-component.utils/default-pub-sub","cljs.core.merge","ui-component.atom.chart.utils/default-config","ui-component.utils/config-tab-panel","ui-component.atom.oz.line-chart/config-panel","ui-component.atom.oz.line-chart/sample-data","reagent.core.atom","cljs.core/deref","ui-component.atom.oz.line-chart/component-panel","oz/vega-lite","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","ui-component.atom.oz.line-chart/component","p__51675","map__51678","cljs.core/--destructure-map","cljs.core.get","seq51673","self__4852__auto__","cljs.core/seq","container-id","id","cljs.core/reset!","ui-component.utils/init-container-locals","ui-component.utils/dispatch-local","or__4253__auto__","ui-component.atom.chart.wrapper/configurable-chart","ui-component.atom.chart.utils/dummy-data-panel"],"sourcesContent":["(ns ui-component.atom.oz.line-chart\n  (:require [ui-component.atom.chart.utils :as utils]\n            [ui-component.atom.chart.wrapper :as c]\n            [ui-component.utils :as ui-utils]\n\n\n            [re-com.core :as rc]\n\n            [reagent.core :as r]\n            [taoensso.timbre :as log]))\n\n\n\n(def source-code '[oz.core/vega-lite\n                   {:data     {:values (get @data :data)}\n                    :mark     \"bar\"\n                    :encoding {:x     {:field \"time\"\n                                       :type  \"ordinal\"}\n                               :y     {:aggregate \"sum\"\n                                       :field     \"quantity\"\n                                       :type      \"quantitative\"}\n                               :color {:field \"item\"\n                                       :type  \"nominal\"}}}])\n\n\n(defn- config [component-id data]\n  (-> ui-utils/default-pub-sub\n    (merge\n      utils/default-config\n      {:type \"oz-line-chart\"}\n      (ui-utils/config-tab-panel component-id))))\n\n\n(defn- config-panel\n  [data component-id]\n\n  [:div \"config panel here\"])\n\n\n(def sample-data\n  (r/atom {:$schema \"https://vega.github.io/schema/vega/v5.json\"\n           :width   400\n           :height  400\n           :padding 5\n\n           :signals [{:name  \"interpolate\"\n                      :value \"linear\"\n                      :bind  {:input   \"select\"\n                              :options [\"basis\"\n                                        \"cardinal\"\n                                        \"catmull-rom\"\n                                        \"linear\"\n                                        \"monotone\"\n                                        \"natural\"\n                                        \"step\"\n                                        \"step-after\"\n                                        \"step-before\"]}}]\n\n           :data    [{:name   \"table\"\n                      :values [{:x 0 :y 28 :c 0} {:x 0 :y 20 :c 1}\n                               {:x 1 :y 43 :c 0} {:x 1 :y 35 :c 1}\n                               {:x 2 :y 81 :c 0} {:x 2 :y 10 :c 1}\n                               {:x 3 :y 19 :c 0} {:x 3 :y 15 :c 1}\n                               {:x 4 :y 52 :c 0} {:x 4 :y 48 :c 1}\n                               {:x 5 :y 24 :c 0} {:x 5 :y 28 :c 1}\n                               {:x 6 :y 87 :c 0} {:x 6 :y 66 :c 1}\n                               {:x 7 :y 17 :c 0} {:x 7 :y 27 :c 1}\n                               {:x 8 :y 68 :c 0} {:x 8 :y 16 :c 1}\n                               {:x 9 :y 49 :c 0} {:x 9 :y 25 :c 1}]}]\n\n           :scales  [{:name   :x-axis\n                      :type   :point\n                      :domain {:data \"table\" :field :x}\n                      :range  :width\n                      :round  true}\n                     {:name   :y-axis\n                      :type   :linear\n                      :domain {:data \"table\" :field :y}\n                      :nice   true\n                      :zero   true\n                      :range  :height}\n                     {:name   :color\n                      :type   :ordinal\n                      :domain {:data \"table\" :field :c}\n                      :range  :category}]\n\n           :axes    [{:orient :bottom :scale :x-axis}\n                     {:orient :left :scale :y-axis}]\n\n           :marks   [{:type \"group\"\n                      :from {:facet {:name    \"series\"\n                                     :data    \"table\"\n                                     :groupby :c}}\n                      :marks [{:type   \"line\"\n                               :from   {:data \"series\"}\n                               :encode {:enter  {:x           {:scale :x-axis :field :x}\n                                                 :y           {:scale :y-axis :field :y}\n                                                 :stroke      {:scale :color :field :c}\n                                                 :strokeWidth {:value 2}}\n                                        :update {:interpolate   {:signal \"interpolate\"}\n                                                 :strokeOpacity {:value 1}}\n                                        :hover  {:strokeOpacity {:value 0.5}}}}]}]}))\n\n\n(defn- component-panel\n  [data component-id]\n\n  [:div {:style {:width \"400px\" :height \"500px\"}}\n   [oz/vega-lite @data]])\n\n\n\n(defn component\n  ([& {:keys [data component-id container-id]}]\n\n   ;(log/info \"line-chart\" @data)\n\n   ;(if (not= :tabular (get-in @data [:metadata :type]))\n   ;  [rc/alert-box :src (rc/at)\n   ;   :id (str container-id \"/\" component-id \".ERROR\")\n   ;   :alert-type :danger\n   ;   :closeable? false\n   ;   :body [:div \"The data passed is NOT of type :tabular!\"]]\n\n   (let [id (r/atom nil)]\n\n     (fn []\n       (when (nil? @id)\n         (reset! id component-id)\n         (ui-utils/init-container-locals @id (config @id data))\n         (ui-utils/dispatch-local @id [:container] (or container-id \"\")))\n\n       ;(log/info \"component\" @id)\n\n       [c/configurable-chart\n        :data data\n        :id @id\n        :data-panel utils/dummy-data-panel\n        :config-panel config-panel\n        :component component-panel]))))\n\n\n"]}