{"version":3,"sources":["rccst_ui_component/atom/example/misc/bh/meta_coc_bh_table.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","js/rccst-ui-component","js/rccst-ui-component.atom","js/rccst-ui-component.atom.example","js/rccst-ui-component.atom.example.misc","js/rccst-ui-component.atom.example.misc.bh","js/rccst-ui-component.atom.example.misc.bh.meta-coc-bh-table","js/rccst-ui-component.atom.example.misc.bh.meta-coc-bh-table.data","rccst-ui-component.atom.example.misc.bh.meta-coc-bh-table/data","reagent.core.atom","ui-component.atom.bhui.table/sample-meta-coc-data","rccst-ui-component.atom.example.misc.bh.meta-coc-bh-table/data-tools","re-com.core/h-box","js/goog.DEBUG","re-com.core/button","cljs.core/reset!","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core/assoc","cljs.core.conj","cljs.core/deref","cljs.core.into","cljs.core.drop_last","cljs.core.map","x","cljs.core.assoc","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","rccst-ui-component.atom.example.misc.bh.meta-coc-bh-table/data-update-example","p__59510","map__59511","cljs.core/--destructure-map","cljs.core.get","seq59509","self__4852__auto__","cljs.core/seq","data","container-id","component-id","params","d","ui-component.utils.helpers/resolve-value","re-com.core/v-box","ui-component.atom.bhui.table/table","rccst-ui-component.atom.example.misc.bh.meta-coc-bh-table/example","woolybear.ad.demo.src.catalog.utils.demo","woolybear.ad.layout/centered"],"sourcesContent":["(ns rccst-ui-component.atom.example.misc.bh.meta-coc-bh-table\n  (:require [ui-component.atom.bhui.table :as table]\n            [ui-component.utils :as ui-utils]\n            [ui-component.utils.helpers :as h]\n            [reagent.core :as r]\n            [re-com.core :as rc]\n            [taoensso.timbre :as log]\n            [woolybear.ad.demo.src.catalog.utils :as acu]\n            [woolybear.ad.layout :as layout]))\n\n\n(log/info \"rccst-ui-component.atom.example.misc.meta-coc-bh-table\")\n\n\n(defonce data (r/atom table/sample-meta-coc-data))\n\n\n(defn- data-tools []\n  [rc/h-box :src (rc/at)\n   :gap \"10px\"\n   :style {:border     \"1px solid\" :border-radius \"3px\"\n           :box-shadow \"5px 5px 5px 2px\"\n           :margin     \"5px\" :padding \"5px\"}\n   :children [[:label.h5 \"Input Data:\"]\n              [rc/button :on-click #(reset! data []) :label \"Empty\"]\n              [rc/button :on-click #(reset! data table/sample-meta-coc-data) :label \"Default\"]\n              [rc/button :on-click #(swap! data assoc-in [:data 0 :uv] 10000) :label \"A -> 10,000\"]\n              [rc/button :on-click #(swap! data assoc :data (conj (:data @data)\n                                                              {:name \"Page Q\" :uv 1100\n                                                               :pv   1100 :tv 1100 :amt 1100}))\n               :label \"Add 'Q'\"]\n              [rc/button :on-click #(swap! data assoc :data (into [] (drop-last 2 (:data @data))))\n               :label \"Drop Last 2\"]\n              [rc/button :on-click #(swap! data assoc :data (into []\n                                                              (map (fn [x]\n                                                                     (assoc x :new-item 1750))\n                                                                (:data @data))))\n               :label \"Add :new-item\"]]])\n\n\n(defn- data-update-example [& {:keys [data container-id component-id] :as params}]\n  ;(log/info \"data-update-example (params)\" params)\n\n  (let [d (h/resolve-value data)]\n    (fn []\n      [rc/v-box :src (rc/at)\n       :class \"data-update-example\"\n       :gap \"10px\"\n       :width \"100%\"\n       :height \"100%\"\n       :children [[:div.chart-part {:style {:width \"100%\" :height \"90%\"}}\n                   [table/table :data d]]\n                  [:div.data-tools-part {:style {:width \"100%\"}}\n                   [data-tools]]]])))\n\n\n(defn example []\n  (let [component-id \"table-with-meta-and-coc-demo\"]\n    (acu/demo \"Basic Table with meta-data, showing available Chain-of-Custody data\"\n      \"Table using HTML tags\n\n> And with Chain-of-Custody!!\n\n> Feel free to use the controls at the bottom to change the data and see how the Table responds.\"\n\n      [layout/centered {:extra-classes :width-50}\n       [data-update-example :data data]]\n\n      '[table/table :data table/sample-meta-coc-data])))\n\n"]}