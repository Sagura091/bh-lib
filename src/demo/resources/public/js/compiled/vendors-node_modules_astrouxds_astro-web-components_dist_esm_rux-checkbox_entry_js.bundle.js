"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkDemo"] = self["webpackChunkDemo"] || []).push([["vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-checkbox_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"F\": () => (/* binding */ FormFieldMessage)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n\n\n/**\n * @part error-text - The error text element\n * @part help-text - The help text element\n */\nconst FormFieldMessage = (props, children) => {\n  const { helpText, errorText } = props;\n  if (errorText) {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-error-text\", part: \"error-text\" },\n      children,\n      (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"svg\", { fill: \"none\", width: \"14\", height: \"14\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 14 14\" },\n        (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"path\", { \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M11.393 12.25c.898 0 1.458-.974 1.009-1.75L8.009 2.91a1.166 1.166 0 0 0-2.018 0L1.598 10.5c-.449.776.111 1.75 1.01 1.75h8.784ZM7 8.167a.585.585 0 0 1-.583-.584V6.417c0-.321.262-.584.583-.584.32 0 .583.263.583.584v1.166c0 .321-.262.584-.583.584Zm-.583 1.166V10.5h1.166V9.333H6.417Z\", fill: \"currentColor\" })),\n      errorText));\n  }\n  if (helpText) {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-help-text\", part: \"help-text\" },\n      children,\n      helpText));\n  }\n  return null;\n};\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-checkbox.entry.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-checkbox.entry.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rux_checkbox\": () => (/* binding */ RuxCheckbox)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n/* harmony import */ var _FormFieldMessage_9a3fc22c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormFieldMessage-9a3fc22c.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js\");\n/* harmony import */ var _utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils-73490106.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js\");\n\n\n\n\nconst ruxCheckboxCss = \":host{display:inline-block;--checkbox-label-color:var(--color-text-primary);--checkbox-background-color:var(--color-background-base-default);--checkbox-border-color:var(--color-border-interactive-muted);--checkbox-checked-color:var(--color-background-interactive-default);--checkbox-hover-border-color:var(--color-background-interactive-hover);--_checkbox-checkmark-color-fill:var(--color-border-interactive-default);--_checkbox-color-border:var(--color-border-interactive-muted);--_checkbox-color-background:var(--color-background-base-default)}:host *,:host *::before,:host *::after{box-sizing:inherit}.hidden,:host([hidden]){display:none}.rux-form-field{display:flex;font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);letter-spacing:var(--font-body-1-letter-spacing);font-weight:var(--font-body-1-font-weight);color:var(--color-text-primary)}label{display:flex}.rux-checkbox{display:flex;cursor:pointer}.rux-checkbox--disabled{opacity:var(--disabled-opacity);cursor:not-allowed}.rux-checkbox__input{position:absolute;pointer-events:none;width:18px;height:18px;opacity:0;margin:0}.rux-checkbox__input--no-label{margin-right:0}.rux-checkbox:not(.rux-checkbox--disabled) .rux-checkbox__control:hover{--_checkbox-color-border:var(--color-border-interactive-hover)}.rux-checkbox__label{margin-left:0.625rem}.rux-help-text{margin-top:0.625rem;color:var(--color-text-primary);font-size:var(--font-body-2-font-size);font-family:var(--font-body-2-font-family);font-weight:var(--font-body-2-font-weight);letter-spacing:var(--font-body-2-letter-spacing)}\";\n\nlet id = 0;\nconst RuxCheckbox = class {\n  constructor(hostRef) {\n    (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    this.ruxChange = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxchange\", 7);\n    this.ruxInput = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxinput\", 7);\n    this.ruxBlur = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxblur\", 7);\n    this.checkboxId = `rux-checkbox-${++id}`;\n    this.hasLabelSlot = false;\n    /**\n     * The checkbox name\n     */\n    this.name = '';\n    /**\n     * The checkbox value\n     */\n    this.value = '';\n    /**\n     * Toggles checked state of a checkbox\n     */\n    this.checked = false;\n    /**\n     * Toggles indeterminate state of a checkbox. The indeterminate property does not exist in HTML, but can be set in JS. [HTML Checkbox & Indeterminate State](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate)\n     */\n    this.indeterminate = false;\n    /**\n     * Disables the checkbox via HTML disabled attribute. Checkbox takes on a distinct visual state. Cursor uses the not-allowed system replacement and all keyboard and mouse events are ignored.\n     */\n    this.disabled = false;\n    this._onBlur = () => {\n      this.ruxBlur.emit();\n    };\n  }\n  updateChecked() {\n    if (this._inputEl) {\n      this._inputEl.checked = this.checked;\n    }\n  }\n  updateIndeterminate() {\n    if (this._inputEl) {\n      this._inputEl.indeterminate = this.indeterminate;\n    }\n  }\n  connectedCallback() {\n    this._onClick = this._onClick.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._checkForLabelSlot = this._checkForLabelSlot.bind(this);\n  }\n  componentWillLoad() {\n    this._checkForLabelSlot();\n  }\n  componentDidLoad() {\n    if (this._inputEl && this.indeterminate) {\n      // indeterminate property does not exist in HTML but is accessible via js\n      this._inputEl.indeterminate = true;\n    }\n  }\n  get hasLabel() {\n    return this.label ? true : this.hasLabelSlot;\n  }\n  _checkForLabelSlot() {\n    this.hasLabelSlot = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__.h)(this.el);\n  }\n  _onClick(e) {\n    const target = e.target;\n    if (this.indeterminate) {\n      this.indeterminate = false;\n    }\n    this.checked = target.checked;\n    this.ruxChange.emit();\n  }\n  _onInput(e) {\n    const target = e.target;\n    this.value = target.value;\n    this.ruxInput.emit();\n  }\n  render() {\n    const { _checkForLabelSlot, _onBlur, _onClick, _onInput, checkboxId, checked, disabled, el, helpText, name, value, indeterminate, label, hasLabel, hasLabelSlot, } = this;\n    if (!this.indeterminate) {\n      (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__.r)(true, el, name, value || 'on', disabled, checked);\n    }\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-form-field\", part: \"form-field\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"label\", { class: {\n        'rux-checkbox': true,\n        'rux-checkbox--disabled': disabled,\n      }, htmlFor: checkboxId }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"input\", { type: \"checkbox\", class: {\n        'rux-checkbox__input': true,\n        'rux-checkbox__input--no-label': !hasLabel,\n      }, name: name, id: checkboxId, disabled: disabled, checked: checked,\n      //Allows storybook's indetermiante control to take effect.\n      indeterminate: indeterminate, value: value, onChange: _onClick, onInput: _onInput, onBlur: _onBlur, ref: (el) => (this._inputEl = el) }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-checkbox__control\" }, indeterminate ? ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"svg\", { width: \"18\", height: \"18\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 18 18\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rect\", { x: \".5\", y: \".5\", width: \"17\", height: \"17\", rx: \"1.5\", fill: \"var(--_checkbox-color-background)\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"path\", { fill: \"var(--_checkbox-checkmark-color-fill)\", d: \"M4 8h10v2H4z\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rect\", { x: \".5\", y: \".5\", width: \"17\", height: \"17\", rx: \"1.5\", stroke: \"var(--_checkbox-color-border)\" }))) : checked ? ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"svg\", { width: \"18\", height: \"18\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 18 18\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rect\", { x: \".5\", y: \".5\", width: \"17\", height: \"17\", rx: \"1.5\", fill: \"var(--_checkbox-color-background)\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"path\", { fill: \"var(--_checkbox-checkmark-color-fill)\", d: \"m14.899 4.806-6.883 9.83-1.639-1.147 6.883-9.83z\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"path\", { fill: \"var(--_checkbox-checkmark-color-fill)\", d: \"m9.163 12.997-1.147 1.638L3.1 11.194l1.147-1.638z\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rect\", { x: \".5\", y: \".5\", width: \"17\", height: \"17\", rx: \"1.5\", stroke: \"var(--_checkbox-color-border)\" }))) : ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"svg\", { width: \"18\", height: \"18\", xmlns: \"http://www.w3.org/2000/svg\", fill: \"none\", viewBox: \"0 0 18 18\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rect\", { x: \".5\", y: \".5\", width: \"17\", height: \"17\", rx: \"1.5\", fill: \"var(--_checkbox-color-background)\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rect\", { x: \".5\", y: \".5\", width: \"17\", height: \"17\", rx: \"1.5\", stroke: \"var(--_checkbox-color-border)\" })))), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { part: \"label\", class: {\n        'rux-checkbox__label': true,\n        hidden: !hasLabel,\n      } }, hasLabelSlot ? null : label, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { onSlotchange: _checkForLabelSlot })))), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_FormFieldMessage_9a3fc22c_js__WEBPACK_IMPORTED_MODULE_1__.F, { helpText: helpText })));\n  }\n  get el() { return (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n  static get watchers() { return {\n    \"checked\": [\"updateChecked\"],\n    \"indeterminate\": [\"updateIndeterminate\"]\n  }; }\n};\nRuxCheckbox.style = ruxCheckboxCss;\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-checkbox.entry.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"a\": () => (/* binding */ renderHiddenSelect),\n/* harmony export */   \"b\": () => (/* binding */ hasShadowDom),\n/* harmony export */   \"h\": () => (/* binding */ hasSlot),\n/* harmony export */   \"r\": () => (/* binding */ renderHiddenInput)\n/* harmony export */ });\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nfunction hasSlot(el, name) {\n  // Look for a named slot\n  if (name) {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n  // Look for a default slot\n  return [...el.childNodes].some((node) => {\n    var _a;\n    //If node is text and not an empty string return true\n    if (node.nodeType === node.TEXT_NODE &&\n      ((_a = node === null || node === void 0 ? void 0 : node.textContent) === null || _a === void 0 ? void 0 : _a.trim()) !== '') {\n      return true;\n    }\n    //If node is an element with a slot attribute return true\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node;\n      if (!el.hasAttribute('slot') &&\n        /*\n         * This condition is specifically for checkbox because\n         * the hidden input becomes slotted content\n         */\n        el.getAttribute('type') !== 'hidden') {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n/**\n* This method is used to add a hidden input to a host element that contains\n* a Shadow DOM. It does not add the input inside of the Shadow root which\n* allows it to be picked up inside of forms. It should contain the same\n* values as the host element.\n* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198\n\n*\n* @param always Add a hidden input even if the container does not use Shadow\n* @param container The element where the input will be added\n* @param name The name of the input\n* @param value The value of the input\n* @param disabled If true, the input is disabled\n* @param checked Optional. If true, the input is checked\n*/\nconst renderHiddenInput = (always, container, name, value, disabled, checked) => {\n  let input = container.querySelector('input.aux-input');\n  if (always || hasShadowDom(container)) {\n    if (checked || checked == undefined) {\n      if (!input) {\n        input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-input');\n        container.appendChild(input);\n      }\n      input.disabled = disabled;\n      input.name = name;\n      input.value = value || '';\n    }\n    else {\n      if (input) {\n        input.remove();\n      }\n    }\n  }\n};\n/**\n * Renders multiple hidden inputs from an array of values\n * Used in multiselect\n * @param always\n * @param container\n * @param name\n * @param value\n * @param disabled\n */\nconst renderHiddenSelect = (always, container, name, value, disabled) => {\n  // Clear any existing hidden options. May be more performant to edit their values instead though.\n  let inputs = container.querySelectorAll('input.aux-select');\n  if (inputs) {\n    for (const elem of inputs) {\n      elem.remove();\n    }\n  }\n  if (always || hasShadowDom(container)) {\n    if (Array.isArray(value)) {\n      for (const el in value) {\n        let input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-select');\n        input.classList.add(`aux-select-${el}`);\n        input.disabled = disabled;\n        input.name = name;\n        if (value[el]) {\n          input.value = value[el];\n        }\n        container.appendChild(input);\n      }\n    }\n    else {\n      let input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-select');\n      input.classList.add(`aux-select-0`);\n      input.disabled = disabled;\n      input.name = name;\n      if (value) {\n        input.value = value;\n      }\n      container.appendChild(input);\n    }\n  }\n};\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js?");

/***/ })

}]);