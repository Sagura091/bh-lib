"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkDemo"] = self["webpackChunkDemo"] || []).push([["node_modules_astrouxds_astro-web-components_dist_esm_rux-segmented-button_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-segmented-button.entry.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-segmented-button.entry.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rux_segmented_button\": () => (/* binding */ RuxSegmentedButton)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n\n\nconst ruxSegmentedButtonCss = \":host{display:block;box-sizing:border-box;--segmented-button-background-color:var(--color-background-base-default);--segmented-button-text-color:var(--color-background-interactive-default);--segmented-button-border-color:var(--color-border-interactive-muted);--segmented-button-hover-background-color:var(\\n      --color-background-surface-hover\\n  );--segmented-button-hover-text-color:var(--color-text-interactive-hover);--segmented-button-hover-border-color:var(\\n      --color-border-interactive-muted\\n  );--segmented-button-selected-background-color:var(\\n      --color-background-surface-selected\\n  );--segmented-button-selected-text-color:var(--color-text-primary);--segmented-button-selected-hover-background-color:var(\\n      --color-background-surface-selected\\n  );--segmented-button-selected-hover-text-color:var(--color-text-primary);--segmented-button-selected-hover-border-color:var(\\n      --color-border-interactive-muted\\n  );--segmented-button-border-radius:var(--radius-base)}:host([disabled]){opacity:var(--disabled-opacity);cursor:not-allowed;pointer-events:none}:host([disabled]) label{border-color:var(--segmented-button-border-color)}:host([hidden]){display:none}*,*::before,*::after{box-sizing:inherit}.rux-segmented-button{display:inline-flex;height:1.625rem;padding:0;margin:0;list-style:none;border-radius:var(--segmented-button-border-radius);background-color:var(--segmented-button-background-color)}.rux-segmented-button--large{height:2.875rem}.rux-segmented-button--medium{height:2.125rem}.rux-segmented-button__segment{width:auto;margin:0;padding:0}.rux-segmented-button__segment+.rux-segmented-button__segment label{border-right:none}.rux-segmented-button__segment:hover+.rux-segmented-button__segment label{border-left-color:var(--segmented-button-hover-border-color)}.rux-segmented-button__segment label{display:flex;justify-content:center;align-items:center;width:auto;height:1.5625rem;margin:0;padding:0 0.75rem;border:1px solid var(--segmented-button-border-color);color:var(--segmented-button-text-color);background-color:var(--segmented-button-background-color);font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);letter-spacing:var(--font-body-1-letter-spacing);font-weight:var(--font-body-1-font-weight);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.rux-segmented-button__segment label:hover{background-color:var(--segmented-button-hover-background-color);border-color:var(--segmented-button-hover-border-color);color:var(--segmented-button-hover-text-color);outline:none}.rux-segmented-button__segment .rux-segmented-button-label{height:1.625rem;padding:0.219rem 1rem}.rux-segmented-button__segment .rux-segmented-button-label--large{height:2.875rem;padding:0.844rem 1rem}.rux-segmented-button__segment .rux-segmented-button-label--medium{height:2.125rem;padding:0.469rem 1rem}.rux-segmented-button__segment input{display:none !important}.rux-segmented-button__segment input:checked+label{background-color:var(--segmented-button-selected-background-color);color:var(--segmented-button-selected-text-color)}.rux-segmented-button__segment input:checked:hover+label{background-color:var(--segmented-button-selected-hover-background-color);color:var(--segmented-button-selected-hover-text-color);border-color:var(--segmented-button-hover-border-color)}.rux-segmented-button__segment:first-child label{border-radius:var(--segmented-button-border-radius) 0 0 var(--segmented-button-border-radius);border-right:none}.rux-segmented-button__segment:first-child label:hover{border-color:var(--segmented-button-hover-border-color)}.rux-segmented-button__segment:last-child label{border-radius:0 var(--segmented-button-border-radius) var(--segmented-button-border-radius) 0;border-right:1px solid var(--segmented-button-border-color)}.rux-segmented-button__segment:last-child label:hover{border-right-color:var(--segmented-button-hover-border-color)}\";\n\nconst RuxSegmentedButton = class {\n  constructor(hostRef) {\n    (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    this.ruxChange = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxchange\", 7);\n    /**\n     * Items in this Array are the individual button segments.\n     */\n    this.data = [];\n    /**\n     * When passed in on load, this selects the first button segment with a matching label. When the selected segment changes, this property updates with the currently selected value, which reflects back to the component attribute. If no button segment label matches this string, then no segment is selected. This value takes priority over setting selected boolean property on the items in the data array.\n     */\n    this.selected = '';\n    /**\n     * Sets the disabled attribute.\n     */\n    this.disabled = false;\n  }\n  onDataChange(newValue) {\n    if (newValue) {\n      const initialSelection = this.data.find((segment) => segment.selected);\n      if (initialSelection) {\n        this._setSelected(initialSelection.label);\n      }\n      else {\n        if (!this.selected) {\n          this._setSelected(this.data[0].label);\n        }\n      }\n    }\n  }\n  connectedCallback() {\n    this._handleChange = this._handleChange.bind(this);\n    const initialSelection = this.data.find((segment) => segment.selected) || this.data[0];\n    if (initialSelection) {\n      this._setSelected(initialSelection.label);\n    }\n  }\n  _handleChange(e) {\n    const el = e.target;\n    this._setSelected(el.value);\n    this.ruxChange.emit(el.value);\n  }\n  _setSelected(label) {\n    this.data.map((item) => {\n      item.selected = item.label === label;\n    });\n    this.selected = label;\n  }\n  _slugify(label) {\n    label = label.replace(/^\\s+|\\s+$/g, ''); // trim\n    label = label.toLowerCase();\n    label = label\n      .replace(/[^a-z0-9 -]/g, '') // remove invalid chars\n      .replace(/\\s+/g, '-') // collapse whitespace and replace by -\n      .replace(/-+/g, '-'); // collapse dashes\n    return label;\n  }\n  _isSelected(label) {\n    if (this.selected === label) {\n      return true;\n    }\n    const selectedData = this.data.find((item) => item.label === label);\n    if (selectedData && selectedData.selected) {\n      return true;\n    }\n    return false;\n  }\n  render() {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"ul\", { class: {\n        'rux-segmented-button': true,\n        'rux-segmented-button--medium': this.size === 'medium',\n        'rux-segmented-button--large': this.size === 'large',\n      } }, this.data.map((item) => ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"li\", { class: \"rux-segmented-button__segment\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"input\", { type: \"radio\", name: \"rux-group\", id: this._slugify(item.label), value: item.label, checked: this._isSelected(item.label), \"data-label\": item.label, onChange: this._handleChange, disabled: this.disabled }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"label\", { htmlFor: this._slugify(item.label), part: \"label\", class: {\n        'rux-segmented-button-label': true,\n        'rux-segmented-button-label--medium': this.size === 'medium',\n        'rux-segmented-button-label--large': this.size === 'large',\n      } }, item.label))))));\n  }\n  get el() { return (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n  static get watchers() { return {\n    \"data\": [\"onDataChange\"]\n  }; }\n};\nRuxSegmentedButton.style = ruxSegmentedButtonCss;\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-segmented-button.entry.js?");

/***/ })

}]);