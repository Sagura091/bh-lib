{"version":3,"sources":["demo/src/catalog/atom/example/re_com/table.cljs"],"mappings":";AAQA,GAAA,QAAAA,iCAAAC,qCAAAC,6CAAAC,kDAAAC,0DAAAC,iEAAAC,uEAAAC;AAAA;AAAA,AAAA,AAASC,kDAAK,gDAAA,mFAAA,2CAAA,qDAAA,SAAA,gDAAA,OAAA,kDAAA,OAAA,+CAAA,OAAA,oDAAA,eAAA,2CAAA,qDAAA,SAAA,gDAAA,OAAA,kDAAA,OAAA,+CAAA,OAAA,oDAAA,eAAA,2CAAA,qDAAA,SAAA,gDAAA,OAAA,kDAAA,OAAA,+CAAA,OAAA,oDAAA,eAAA,2CAAA,qDAAA,SAAA,gDAAA,OAAA,kDAAA,OAAA,+CAAA,OAAA,oDAAA,eAAA,2CAAA,qDAAA,SAAA,gDAAA,OAAA,kDAAA,OAAA,+CAAA,OAAA,oDAAA,eAAA,2CAAA,qDAAA,SAAA,gDAAA,OAAA,kDAAA,OAAA,+CAAA,OAAA,oDAAA,eAAA,2CAAA,qDAAA,SAAA,gDAAA,OAAA,kDAAA,OAAA,+CAAA,OAAA,oDAAA,l7EAACC;;AAUf,6DAAA,qEAAAC,SAAAC,3IAAMK;AAAN,AAAA,IAAAJ,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;UAAAA,NAA8CQ;UAA9C,AAAAN,4CAAAF,eAAA,jEAA+BK;SAA/B,AAAAH,4CAAAF,eAAA,hEAAmCM;SAAnC,AAAAJ,4CAAAF,eAAA,hEAAsCO;IAAtCJ,aAAAJ;IAAAI,iBAAA,AAAAF,4BAAAE;aAAAA,TAAmEO;SAAnE,AAAAR,4CAAAC,eAAA,hEAA2DM;AAA3D,AAEE,GACE,6CAAA,7CAACE,+FAAMF;AADT,kDAAA,4EAEqB,iBAAA,UAAA,wCAAA,UAAA,wCAAA,UAAA,iBAAA,UAAA,xJACE,CAAA,SAAQH,iBACR,EAAA,CAAA,kBAAA,MAAA,fAAQA,UAAAA,4BACR,EAAA,CAAA,kBAAA,MAAA,fAAQA,UAAAA,4BACR,MAAA,LAAGA;;AAN1B,GAOE,6CAAA,7CAACK,4FAAMF;AAPT,kDAAA,4EAQqB,iBAAA,UAAA,wCAAA,UAAA,wCAAA,UAAA,iBAAA,UAAA,xJACE,CAAA,SAAQF,iBACR,EAAA,CAAA,kBAAA,MAAA,fAAQA,UAAAA,4BACR,EAAA,CAAA,kBAAA,MAAA,fAAQA,UAAAA,4BACR,MAAA,LAAGA;;AAZ1B,GAaE,6CAAA,7CAACI,iGAAOF;AAbV,kDAAA,4EAcqB,kBAAA,UAAA,0CAAA,UAAA,0CAAA,UAAA,kBAAA,UAAA,9JACE,CAAA,SAAQJ,kBACR,EAAA,CAAA,mBAAA,OAAA,jBAAQA,WAAAA,6BACR,EAAA,CAAA,mBAAA,OAAA,jBAAQA,WAAAA,6BACR,OAAA,NAAGA;;AAlB1B;;;;;AAqBF,qDAAA,rDAAMO;AAAN,AACE,IAAAC,WAAA;IAAAC,WAAA;IAAAC,WAAA,gHAAA,2CAAA,uEAAA,oEAAA,kHAAA,qGAAA,8DAAA,IAAA,uDAAA,MAAA,qEAAA,9mBAKGG,uSACCC,mFACMvB;AAPV,AAUmB,OAAAwB,0DAAAC,mCAAA,qDAAA,6CAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,YAAA;GAVnB,uEAWmBlB;IAXnBY,WAAA,AAAA;AAAA,AAAA,sHAAAH,SAAAC,SAAAC,SAAAC,8CAAAH,SAAAC,SAAAC,SAAAC,lNAACC,wDAAAA,6FAAAA;;AAwBH","names":["js/demo","js/demo.src","js/demo.src.catalog","js/demo.src.catalog.atom","js/demo.src.catalog.atom.example","js/demo.src.catalog.atom.example.re-com","js/demo.src.catalog.atom.example.re-com.table","js/demo.src.catalog.atom.example.re-com.table.data","demo.src.catalog.atom.example.re-com.table/data","reagent.core.atom","p__50742","p__50743","map__50744","cljs.core/--destructure-map","cljs.core.get","map__50745","demo.src.catalog.atom.example.re-com.table/cell-styling-fn","amt","uv","pv","row","id","column","cljs.core._EQ_","demo.src.catalog.atom.example.re-com.table/example","G__50752","G__50753","G__50754","G__50755","woolybear.ad.utils/demo","woolybear.ad.layout/centered","bh-ui.atom.re-com.table/table","taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay"],"sourcesContent":["(ns demo.src.catalog.atom.example.re-com.table\n  (:require [bh-ui.atom.re-com.table :as table]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]\n            [woolybear.ad.utils :as acu]\n            [woolybear.ad.layout :as layout]))\n\n\n(defonce data (r/atom\n                [{:name \"Page A\" :kp 2000 :uv 4000 :pv 2400 :amt 2400}\n                 {:name \"Page B\" :kp 2000 :uv 3000 :pv 5598 :amt 2210}\n                 {:name \"Page C\" :kp 2000 :uv 2000 :pv 9800 :amt 2290}\n                 {:name \"Page D\" :kp 2000 :uv 2780 :pv 3908 :amt 2000}\n                 {:name \"Page E\" :kp 2000 :uv 1890 :pv 4800 :amt 2181}\n                 {:name \"Page F\" :kp 2000 :uv 2390 :pv 3800 :amt 2500}\n                 {:name \"Page G\" :kp 2000 :uv 3490 :pv 4300 :amt 2100}]))\n\n\n(defn cell-styling-fn [{:keys [amt uv pv] :as row} {:keys [id] :as column}]\n  ;(log/info \"cell-styling-fn\")\n  (cond\n    (= :uv id)\n    {:background-color (cond\n                         (> 2000 uv) \"#FF4136\"\n                         (> 5000 uv 2000) \"#FFDC00\"\n                         (> 7500 uv 5000) \"#01FF70\"\n                         (> uv 7500) \"#2ECC40\")}\n    (= :pv id)\n    {:background-color (cond\n                         (> 2000 pv) \"#FF4136\"\n                         (> 5000 pv 2000) \"#FFDC00\"\n                         (> 7500 pv 5000) \"#01FF70\"\n                         (> pv 7500) \"#2ECC40\")}\n    (= :amt id)\n    {:background-color (cond\n                         (> 2000 amt) \"#FF4136\"\n                         (> 5000 amt 2000) \"#FFDC00\"\n                         (> 7500 amt 5000) \"#01FF70\"\n                         (> amt 7500) \"#2ECC40\")}))\n\n\n(defn example []\n  (acu/demo \"Table\"\n    \"We're using the `simple-v-table` from [Re-com](https://github.com/Day8/re-com)\n\n> This example does NOT include meta-data on the input.\"\n\n    [layout/centered {:extra-classes :width-50}\n     [table/table\n      :data data\n      :max-rows 5\n      :width 600\n      :on-click-row #(log/info \"on-click-row\")\n      :cell-style-fn cell-styling-fn]]\n\n    '[layout/centered {:extra-classes :width-50}\n      [table/table\n       :data data\n       :max-rows 5\n       :width 600\n       :table-row-line-color \"#0fff00\"\n       :on-click-row #(log/info \"on-click-row\")\n       :cell-style-fn cell-styling-fn]]))\n\n\n; can we change the data and have the table re-render correctly?\n(comment\n  (assoc-in @data [0 :uv] 10000)\n\n\n  (swap! data assoc-in [0 :uv] 10000)\n  (swap! data assoc-in [0 :uv] 4000)\n\n\n  ())\n"]}