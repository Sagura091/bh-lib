goog.provide('demo.src.catalog.atom.example.layout.markdown_block');
demo.src.catalog.atom.example.layout.markdown_block.example = (function demo$src$catalog$atom$example$layout$markdown_block$example(){
return (function (){
var G__50413 = "Markdown-Block";
var G__50414 = "Use Markdown blocks for [Markdown](https://en.wikipedia.org/wiki/Markdown) content.";
var G__50415 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [woolybear.ad.layout.frame,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [woolybear.ad.layout.markdown_block,"## You can make titles\n\n  > or notes/quotes\n\n  - even\n  - bulleted\n  - lists\n\n  1. or\n  2. numbered\n  3. lists\n\n  what about checkboxes:\n  - [ ]  one\n  - [ ]  two\n  - [X]  three (which is checked)\n\n  and a hyperlinks: [ring](https://github.com/ring-clojure/ring)\n\n\n  tables?\n\n  | thing     | description (right-justified)     |\n  |:----------|----------------------------------:|\n  | `thing-1` | a description for thing-1         |\n  | `thing-2` | and for thing-2                   |\n\n  even code-blocks:\n\n  ``` clojure\n  (defn func [a b]\n     (+ a b))\n  ```"], null)], null);
var G__50416 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("layout","frame","layout/frame",-1181711163,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol("layout","markdown-block","layout/markdown-block",687473164,null),"## You can make titles\n\n  > or notes/quotes\n\n  - even\n  - bulleted\n  - lists\n\n  1. or\n  2. numbered\n  3. lists\n\n  what about checkboxes:\n  - [ ]  one\n  - [ ]  two\n  - [X]  three (which is checked)\n\n  and a hyperlinks: [ring](https://github.com/ring-clojure/ring)\n\n  tables?\n\n  | thing     | description (right-justified)     |\n  |:----------|----------------------------------:|\n  | `thing-1` | a description for thing-1         |\n  | `thing-2` | and for thing-2                   |\n\n  even code-blocks:\n\n  ``` clojure\n  (defn func [a b]\n     (+ a b))\n  ```"], null)], null);
return (woolybear.ad.utils.demo.cljs$core$IFn$_invoke$arity$4 ? woolybear.ad.utils.demo.cljs$core$IFn$_invoke$arity$4(G__50413,G__50414,G__50415,G__50416) : woolybear.ad.utils.demo.call(null,G__50413,G__50414,G__50415,G__50416));
});
});

//# sourceMappingURL=demo.src.catalog.atom.example.layout.markdown_block.js.map
