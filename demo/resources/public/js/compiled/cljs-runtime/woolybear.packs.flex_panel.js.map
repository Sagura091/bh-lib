{"version":3,"sources":["woolybear/packs/flex_panel.cljs"],"mappings":"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","names":["re_frame.core.reg_sub","db","_","woolybear.packs.flex-panel/get-js-page-height","js/document","re_frame.core.reg_event_db","h","cljs.core.assoc","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","woolybear.packs.flex-panel/flex-fixed","seq48341","G__48342","cljs.core/first","cljs.core/next","self__4851__auto__","type-class","args","vec__48343","map__48346","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","extra-classes","subscribe-to-classes","on-size-change","woolybear.ad.utils/extract-args","classes-sub","woolybear.ad.utils/subscribe-to","size-change-handler","comp","G__48350","reagent.dom/dom-node","render-fn","vec__48354","cljs.core/deref","children","dynamic-classes","cljs.core.into","woolybear.ad.utils.css__GT_str","reagent.core.create_class","cljs.spec.alpha/def-impl","cljs.spec.alpha/fspec-impl","cljs.spec.alpha.spec_impl","cljs.spec.alpha/cat-impl","cljs.core/keyword?","cljs.spec.alpha/map-spec-impl","G__48361","cljs.core/map?","cljs.spec.alpha/rep+impl","cljs.core/any?","cljs.core/vector?","woolybear.packs.flex-panel/flex-top","seq48365","self__4852__auto__","cljs.core/seq","cljs.core.apply","G__48372","woolybear.packs.flex-panel/flex-bottom","seq48400","G__48401","woolybear.packs.flex-panel/flex-content","seq48410","G__48411","opts","map__48422","height","woolybear.ad.containers/v-scroll-pane","G__48424","woolybear.packs.flex-panel/flex-type","child","pred__48426","expr__48427","cljs.core/=","woolybear.packs.flex-panel/get-fixed-child","target-component-type","height-atom","targets","p1__48429#","cljs.core.filter","cljs.core._EQ_","target","woolybear.ad.utils/add-option","cljs.core/reset!","woolybear.packs.flex-panel/flex-panel","seq48437","vec__48441","map__48444","page-height","flex-height-adjustment","reagent.ratom.atom","flex-top-height","flex-bottom-height","resize-handler","e","re-frame.core/dispatch","did-mount-handler","comp-height","js/window","remove-resize-handler","vec__48455","flex-contents","p1__48433#","the-flex-top","the-flex-bottom","panel-height","content-height","G__48469"],"sourcesContent":["(ns woolybear.packs.flex-panel\n  \"\n  A container for scrolling content with fixed elements and the top and/or\n  bottom. Dynamically re-sizes itself to fit onto screens with any arbitrary\n  dimensions and/or any sized browser window.\n  \"\n  (:require [reagent.core :as reagent]\n            [reagent.dom :as rdom]\n            [reagent.ratom :as ratom]\n            [woolybear.ad.utils :as adu]\n            [woolybear.ad.containers :as containers]\n            [cljs.spec.alpha :as s]\n            [re-frame.core :as re-frame]))\n\n;;;\n;;; Subs\n;;;\n\n(re-frame/reg-sub\n  :db/page-height\n  (fn [db _]\n    (:page-height db)))\n\n;;;\n;;; Event handlers\n;;;\n\n(defn get-js-page-height\n  []\n  (.. js/document -documentElement -clientHeight))\n\n;; TODO This should really be a co-effect\n(re-frame/reg-event-db\n  :db/recalculate-page-height\n  (fn [db _]\n    (let [h (get-js-page-height)]\n      (assoc db :page-height h))))\n\n(defn flex-fixed\n  \"\n  A utility component used to build flex-top and flex-bottom. Uses an on-size-change\n  callback fn provided by the parent to report its height back to the parent container.\n  \"\n  [type-class & args]\n  (let [[{:keys [extra-classes subscribe-to-classes\n                 on-size-change]} _] (adu/extract-args args)\n        classes-sub (adu/subscribe-to subscribe-to-classes)\n        size-change-handler (fn [comp]\n                              (on-size-change (-> comp\n                                                  (rdom/dom-node)\n                                                  .-offsetHeight)))\n        render-fn (fn [& args]\n                    (let [[_ children] (adu/extract-args args)\n                          dynamic-classes @classes-sub]\n                      (into [:div {:class (adu/css->str type-class\n                                                        extra-classes\n                                                        dynamic-classes)}]\n                            children)))]\n    (reagent/create-class\n      {:display-name         \"flex-top\"\n       :component-did-mount  size-change-handler\n       :component-did-update size-change-handler\n       :reagent-render       render-fn})))\n\n\n(s/fdef flex-fixed\n  :args (s/cat :type keyword?\n               :opts (s/keys :opt-un [:ad/extra-classes\n                                      :ad/subscribe-to-classes])\n               :children (s/+ any?))\n  :ret vector?)\n\n(defn flex-top\n  \"\n  A container to be used inside a flex-panel. Sticks to the top of the panel and\n  subtracts its own height from the height of the height of the flexible part of\n  the flex panel so that the flex panel fits neatly inside its enclosing space.\n  \"\n  [& args]\n  (apply flex-fixed :wb-flex-top args))\n\n(s/fdef flex-top\n  :args (s/cat :opts (s/keys :opt-un [:ad/extra-classes\n                                      :ad/subscribe-to-classes])\n               :children (s/+ any?))\n  :ret vector?)\n\n(defn flex-bottom\n  \"\n  A container to be used inside a flex-panel. Sticks to the bottom of the panel and\n  subtracts its own height from the height of the height of the flexible part of\n  the flex panel so that the flex panel fits neatly inside its enclosing space.\n  \"\n  [& args]\n  (apply flex-fixed :wb-flex-bottom args))\n\n(s/fdef flex-bottom\n  :args (s/cat :opts (s/keys :opt-un [:ad/extra-classes\n                                      :ad/subscribe-to-classes])\n               :children (s/+ any?))\n  :ret vector?)\n\n(defn flex-content\n  \"\n  The 'flexible' part of a flex-panel. The height of the flex-content component is managed\n  by the parent flex-panel, so that it is always equal to the height of the enclosing\n  container, minus the height(s) any flex-top and/or flex-bottom components in the same\n  flex panel.\n  \"\n  [opts & children]\n  (let [{:keys [height]} opts]\n    (into [containers/v-scroll-pane {:height height}] children)))\n\n(s/fdef flex-content\n  :args (s/cat :opts (s/keys :opt-un [:ad/extra-classes\n                                      :ad/subscribe-to-classes])\n               :children (s/+ any?))\n  :ret vector?)\n\n(defn- flex-type\n  \"Given a child element, return :flex-top if it is a flex-top, :flex-bottom if it is a\n  flex-bottom, or :other if it is anything else.\"\n  [child]\n  (condp = (first child)\n    flex-top :flex-top\n    flex-bottom :flex-bottom\n    :other))\n\n(defn- get-fixed-child\n  \"Search a list of children and pull out the first instance of flex-top or flex-bottom,\n  properly prepared for use in a flex panel.\"\n  [children target-component-type height-atom]\n  (let [targets (filter #(= target-component-type (flex-type %)) children)\n        target (first targets)]\n    (when target\n      (adu/add-option target :on-size-change (fn [h]\n                                               (reset! height-atom h))))))\n\n(defn flex-panel\n  \"\n  A container that creates a flexible, autosizing panel to fill the entire height of the\n  viewport, reserving space for any enclosed flex-top and/or flex-bottom components.\n  Takes a :height option, specified in standard CSS units (180px, 50vh, 8rem, etc). Also\n  takes the standard :extra-classes and :subscribe-to-classes options.\n\n  NOTE: You can have both a flex-top and flex-bottom as a child element, but not more\n  than one of each.\n  \"\n  [& args]\n  (let [[{:keys [height extra-classes subscribe-to-classes]} _] (adu/extract-args args)\n        classes-sub (adu/subscribe-to subscribe-to-classes)\n        page-height (adu/subscribe-to [:db/page-height])\n        flex-height-adjustment (ratom/atom 0)\n        flex-top-height (ratom/atom 0)\n        flex-bottom-height (ratom/atom 0)\n        resize-handler (fn [e]\n                         (re-frame/dispatch [:db/recalculate-page-height]))\n        did-mount-handler (fn [comp]\n                            (let [page-height (get-js-page-height)\n                                  comp-height (-> comp\n                                                  (rdom/dom-node)\n                                                  .-offsetHeight)]\n                              (reset! flex-height-adjustment (- page-height comp-height)))\n                            (.addEventListener js/window \"resize\" resize-handler)\n                            (re-frame/dispatch [:db/recalculate-page-height]))\n        remove-resize-handler (fn [e]\n                                (.removeEventListener js/window \"resize\" resize-handler))\n        render-fn (fn [& args]\n                    (let [[_ children] (adu/extract-args args)\n                          flex-contents (filter #(= :other (flex-type %)) children)\n                          the-flex-top (get-fixed-child children :flex-top flex-top-height)\n                          the-flex-bottom (get-fixed-child children :flex-bottom flex-bottom-height)\n                          dynamic-classes @classes-sub\n                          panel-height (- @page-height @flex-height-adjustment)\n                          content-height (- panel-height (+ @flex-top-height @flex-bottom-height))\n                          content-height (str content-height \"px\")]\n                      [:div {:style {:height height}\n                             :class (adu/css->str :wb-flex-panel\n                                                  extra-classes\n                                                  dynamic-classes)}\n                       the-flex-top\n                       ^{:key (str \"flex-content-\" content-height)}\n                       (into [flex-content {:height              content-height\n                                            :date-content-height content-height}] flex-contents)\n                       the-flex-bottom]))]\n\n    (reagent/create-class\n      {:display-name           \"flex-panel\"\n       :component-did-mount    did-mount-handler\n       :component-will-unmount remove-resize-handler\n       :reagent-render         render-fn})))\n\n(s/fdef flex-panel\n  :args (s/cat :opts (s/keys :opt-un [:ad/extra-classes\n                                      :ad/subscribe-to-classes])\n               :children (s/+ any?))\n  :ret vector?)\n\n"]}