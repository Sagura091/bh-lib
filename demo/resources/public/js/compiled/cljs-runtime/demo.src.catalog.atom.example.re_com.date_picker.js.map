{"version":3,"sources":["demo/src/catalog/atom/example/re_com/date_picker.cljs"],"mappings":"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","names":["demo.src.catalog.atom.example.re-com.date-picker/days-map","demo.src.catalog.atom.example.re-com.date-picker/toggle-inclusion!","set-atom","member","cljs.core/reset!","cljs.core/deref","cljs.core/contains?","cljs.core.disj","cljs.core.conj","demo.src.catalog.atom.example.re-com.date-picker/checkbox-for-day","day","enabled-days","re-com.core/v-box","js/goog.DEBUG","re-com.core/label","re-com.core/checkbox","fexpr__59658","p1__59659#","p1__59660#","p1__59661#","p1__59662#","demo.src.catalog.atom.example.re-com.date-picker/parameters-with","content","as-days","disabled?","show-today?","show-weeks?","start-of-week-choices","start-of-week","re-com.core/h-box","re-com.core/title","re-com.core/box","re-com.core/single-dropdown","re-com.core/gap","demo.src.catalog.atom.example.re-com.date-picker/date->string","date","re-com.validate/date-like?","cljs-time.format/unparse","cljs_time.format.formatter","demo.src.catalog.atom.example.re-com.date-picker/show-variant","variation","model1","reagent.core.atom","re-com.util/now->utc","model2","cljs_time.core.plus","cljs_time.core.days","model3","model4","cljs-time.core/today","start-of-week-right","cljs.core/keys","cljs.core/set","reagent.ratom/make-reaction","p1__59678#","cljs.core.map","G__59686","p1__59679#","cljs.core._EQ_","cljs.core.sort","selectable-pred","G__59688","fexpr__59687","G__59689","cljs.core/Keyword","js/Error","p1__59680#","re-com.datepicker/datepicker","p1__59681#","re-com.core/datepicker-dropdown","demo.src.catalog.atom.example.re-com.date-picker/variations","demo.src.catalog.atom.example.re-com.date-picker/datepicker-examples","selected-variation","p1__59696#","demo.src.catalog.atom.example.re-com.date-picker/example","G__59704","G__59705","G__59706","woolybear.ad.utils/demo"],"sourcesContent":["(ns demo.src.catalog.atom.example.re-com.date-picker\n  (:require-macros\n    [reagent.ratom :refer [reaction]])\n  (:require [cljs-time.coerce :refer [to-local-date]]\n            [cljs-time.core :refer [before? day-of-week days minus plus today]]\n            [cljs-time.format :refer [formatter unparse]]\n            [goog.date.Date]\n            [re-com.core :as core]\n            [re-com.datepicker :as dp]\n            [re-com.util :refer [now->utc px]]\n            [re-com.validate :refer [date-like?]]\n            [reagent.core :as r]\n            [woolybear.ad.utils :as acu]))\n\n\n(def ^:private days-map\n  {:Su \"S\" :Mo \"M\" :Tu \"T\" :We \"W\" :Th \"T\" :Fr \"F\" :Sa \"S\"})\n\n\n(defn- toggle-inclusion!\n  \"convenience function to include/exclude member from\"\n  [set-atom member]\n  (reset! set-atom\n    (if (contains? @set-atom member)\n      (disj @set-atom member)\n      (conj @set-atom member))))\n\n\n(defn- checkbox-for-day\n  [day enabled-days]\n  [core/v-box\n   :src (core/at)\n   :align :center\n   :children [[core/label\n               :src (core/at)\n               :style {:font-size \"smaller\"}\n               :label (day days-map)]\n              [core/checkbox\n               :src (core/at)\n               :model (@enabled-days day)\n               :on-change #(toggle-inclusion! enabled-days day)]]])\n\n\n(defn- parameters-with\n  \"Toggle controls for some parameters.\"\n  [content enabled-days as-days disabled? show-today? show-weeks? start-of-week-choices start-of-week]\n\n  [core/h-box :src (core/at)\n   :gap \"15px\"\n   :justify :between\n   :children [content\n              [core/v-box\n               :src (core/at)\n               :gap \"10px\"\n               :style {:min-width        \"550px\"\n                       :padding          \"15px\"\n                       :border-top       \"1px solid #DDD\"\n                       :background-color \"#f7f7f7\"}\n               :children [[core/title\n                           :src (core/at)\n                           :style {:margin-top \"0\"}\n                           :level :level3 :label \"Interactive Parameters\"]\n                          [core/checkbox\n                           :src (core/at)\n                           :label [core/box\n                                   :src (core/at)\n                                   :align :start\n                                   :child [:code \":disabled?\"]]\n                           :model disabled?\n                           :on-change #(reset! disabled? %)]\n                          [core/checkbox\n                           :src (core/at)\n                           :label [core/box\n                                   :src (core/at)\n                                   :align :start\n                                   :child [:code \":show-today?\"]]\n                           :model show-today?\n                           :on-change #(reset! show-today? %)]\n                          [core/checkbox\n                           :src (core/at)\n                           :label [core/box\n                                   :src (core/at)\n                                   :align :start\n                                   :child [:code \":show-weeks?\"]]\n                           :model show-weeks?\n                           :on-change #(reset! show-weeks? %)]\n                          [core/h-box :src (core/at)\n                           :gap \"5px\"\n                           :align :end\n                           :children [[:code \":start-of-week\"]\n                                      [core/single-dropdown\n                                       :src (core/at)\n                                       :choices start-of-week-choices\n                                       :model start-of-week\n                                       :on-change #(reset! start-of-week %)\n                                       :width \"110px\"]]]\n                          [core/h-box\n                           :src (core/at)\n                           :gap \"2px\"\n                           :align :end\n                           :children [[core/box\n                                       :src (core/at)\n                                       :align :end\n                                       :child [:code \":selectable-fn\"]]\n                                      [core/gap\n                                       :src (core/at)\n                                       :size \"5px\"]\n                                      [checkbox-for-day :Su enabled-days]\n                                      [checkbox-for-day :Mo enabled-days]\n                                      [checkbox-for-day :Tu enabled-days]\n                                      [checkbox-for-day :We enabled-days]\n                                      [checkbox-for-day :Th enabled-days]\n                                      [checkbox-for-day :Fr enabled-days]\n                                      [checkbox-for-day :Sa enabled-days]\n                                      [core/gap\n                                       :src (core/at)\n                                       :size \"5px\"]\n                                      [core/box\n                                       :src (core/at)\n                                       :align :end\n                                       :child [:code (str \"(fn [d]\\n (\" @as-days \" (.getDay d)))\")]]]]]]]])\n\n\n(defn- date->string\n  [date]\n  (if (date-like? date)\n    (unparse (formatter \"dd MMM, yyyy\") date)\n    \"no date\"))\n\n\n(defn- show-variant\n  [variation]\n  (let [model1 (r/atom #_nil  #_(today) (now->utc))         ;; Test 3 valid data types\n        model2 (r/atom #_nil  #_(plus (today) (days 120)) (plus (now->utc) (days 120))) ;; (today) = goog.date.Date, (now->utc) = goog.date.UtcDateTime\n        model3 (r/atom nil)\n        model4 (r/atom (today))\n        disabled? (r/atom false)\n        show-today? (r/atom true)\n        show-weeks? (r/atom false)\n        start-of-week (r/atom 6)\n        start-of-week-right (r/atom 0)\n        start-of-week-choices [{:id 0 :label \"Monday\"}\n                               {:id 1 :label \"Tuesday\"}\n                               {:id 2 :label \"Wednesday\"}\n                               {:id 3 :label \"Thursday\"}\n                               {:id 4 :label \"Friday\"}\n                               {:id 5 :label \"Saturday\"}\n                               {:id 6 :label \"Sunday\"}]\n        enabled-days (r/atom (-> days-map keys set))\n        as-days (reaction (->> (map #(% {:Su 7 :Sa 6 :Fr 5 :Th 4 :We 3 :Tu 2 :Mo 1}) @enabled-days) (map #(if (= 7 %) 0 %)) sort set))\n        selectable-pred (fn [^js/goog.date.UtcDateTime date] (@as-days (.getDay date)))] ; Simply allow selection based on day of week.\n    (case variation\n      :inline [(fn inline-fn\n                 []\n                 [parameters-with\n                  [core/v-box :src (core/at)\n                   :gap \"15px\"\n                   :children [[dp/datepicker :src (core/at)\n                               :model model1\n                               :disabled? disabled?\n                               :show-today? @show-today?\n                               :show-weeks? @show-weeks?\n                               :selectable-fn selectable-pred\n                               :start-of-week @start-of-week\n                               :on-change #(do #_(js/console.log \"model1:\" %) (reset! model1 %))]\n                              [core/label :src (core/at) :label [:span [:code \":model\"] \" is \" (date->string @model1)]]\n                              #_[h-box :src (at)\n                                 :gap \"6px\"\n                                 :margin \"10px 0px 0px 0px\"\n                                 :align :center\n                                 :children [[label :src (at) :style label-style :label \"Change model:\"]\n                                            [md-icon-button :src (at)\n                                             :md-icon-name \"zmdi-arrow-left\"\n                                             :size :smaller\n                                             :disabled? (not (date-like? @model1))\n                                             :on-click #(when (date-like? @model1)\n                                                          (reset! model1 (minus @model1 (days 1))))]\n                                            [md-icon-button :src (at)\n                                             :md-icon-name \"zmdi-arrow-right\"\n                                             :size :smaller\n                                             :disabled? (if (and (date-like? @model1) (date-like? @model2))\n                                                          (not (before? (to-local-date @model1)\n                                                                 (to-local-date @model2)))\n                                                          true)\n                                             :on-click #(when (date-like? @model1)\n                                                          (reset! model1 (plus @model1 (days 1))))]\n                                            [button :src (at)\n                                             :label \"Reset\"\n                                             :class \"btn btn-default\"\n                                             :style {:padding \"1px 4px\"}\n                                             :on-click #(reset! model1 nil)]]]]]\n                  enabled-days\n                  as-days\n                  disabled?\n                  show-today?\n                  show-weeks?\n                  start-of-week-choices\n                  start-of-week])]\n\n      :dropdown [(fn dropdown-fn\n                   []\n                   [parameters-with\n                    [core/v-box\n                     :src (core/at)\n                     :gap \"15px\"\n                     :children [[core/datepicker-dropdown\n                                 :src (core/at)\n                                 :model model3\n                                 :show-today? @show-today?\n                                 :show-weeks? @show-weeks?\n                                 :selectable-fn selectable-pred\n                                 :start-of-week @start-of-week\n                                 :placeholder \"Select a date\"\n                                 :format \"dd MMM, yyyy\"\n                                 :disabled? disabled?\n                                 :on-change #(reset! model3 %)]\n                                [core/label\n                                 :src (core/at)\n                                 :label [:span [:code \":model\"] \" is \" (date->string @model3)]]]]\n                    enabled-days\n                    as-days\n                    disabled?\n                    show-today?\n                    show-weeks?\n                    start-of-week-choices\n                    start-of-week])])))\n\n\n(def variations ^:private\n  [{:id :inline :label \"Inline\"}\n   {:id :dropdown :label \"Dropdown\"}])\n\n\n(defn datepicker-examples\n  []\n  (let [selected-variation (r/atom :inline)]\n    (fn examples-fn []\n      [core/v-box :src (core/at)\n       :size \"auto\"\n       :gap \"10px\"\n       :children [[core/h-box\n                   :src (core/at)\n                   :gap \"100px\"\n                   :children [[core/v-box\n                               :src (core/at)\n                               :gap \"20px\"\n                               :size \"auto\"\n                               :children [[core/h-box\n                                           :src (core/at)\n                                           :gap \"10px\"\n                                           :align :center\n                                           :children [[core/label\n                                                       :src (core/at)\n                                                       :label \"Select a demo\"]\n                                                      [core/single-dropdown\n                                                       :src (core/at)\n                                                       :choices variations\n                                                       :model selected-variation\n                                                       :width \"200px\"\n                                                       :on-change #(reset! selected-variation %)]]]\n                                          [show-variant @selected-variation]]]]]]])))\n\n\n(defn example []\n  (acu/demo \"Date Picker\" [datepicker-examples]\n    '[core/v-box :src (core/at)\n      :size \"auto\"\n      :gap \"10px\"\n      :children [[core/h-box\n                  :src (core/at)\n                  :gap \"100px\"\n                  :children [[core/v-box\n                              :src (core/at)\n                              :gap \"20px\"\n                              :size \"auto\"\n                              :children [[core/h-box\n                                          :src (core/at)\n                                          :gap \"10px\"\n                                          :align :center\n                                          :children [[core/label\n                                                      :src (core/at)\n                                                      :label \"Select a demo\"]\n                                                     [core/single-dropdown\n                                                      :src (core/at)\n                                                      :choices variations\n                                                      :model selected-variation\n                                                      :width \"200px\"\n                                                      :on-change #(reset! selected-variation %)]]]\n                                         [show-variant @selected-variation]]]]]]]))\n"]}