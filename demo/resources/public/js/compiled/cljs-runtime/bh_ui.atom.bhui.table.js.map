{"version":3,"sources":["bh_ui/atom/bhui/table.cljs"],"mappings":"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","names":["bh-ui.atom.bhui.table/sample-data","bh-ui.utils.example-data/tabular-data","bh-ui.atom.bhui.table/sample-meta-data","bh-ui.utils.example-data/meta-tabular-data","bh-ui.atom.bhui.table/sample-meta-coc-data","cljs.core.assoc","bh-ui.utils.example-data/default-coc","bh-ui.atom.bhui.table/random-data","bh-ui.utils.example-data/random-tabular-data","bh-ui.atom.bhui.table/random-data-meta","bh-ui.utils.example-data/random-meta-tabular-data","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","bh-ui.atom.bhui.table/table*","p__59450","map__59451","cljs.core/--destructure-map","cljs.core.get","seq59445","self__4852__auto__","cljs.core/seq","data","max-rows","width","height","cell-style-fn","on-click-row-fn","row-line-color","cljs.core/empty?","re-com.core/alert-box","js/goog.DEBUG","header","cljs.core/keys","cljs.core/first","body","or__4253__auto__","cljs.core.doall","iter__4652__auto__","s__59453","cljs.core/LazySeq","temp__5753__auto__","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","cljs.core/count","b__59455","cljs.core/chunk-buffer","i__59454","vec__59456","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__59452","cljs.core/chunk-rest","vec__59459","cljs.core/cons","cljs.core/rest","idx","h","cljs.core.map_indexed","cljs.core/vector","s__59463","b__59465","i__59464","vec__59466","iter__59462","vec__59473","b","s__59470","b__59472","i__59471","iter__59469","s__59477","b__59479","i__59478","iter__59476","key","cljs.core.keyword","bh-ui.atom.bhui.table/non-meta-table","p__59481","map__59482","seq59480","cljs.core/deref","d","bh-ui.utils.helpers/resolve-value","bh-ui.atom.bhui.table/meta-table","p__59484","map__59485","seq59483","coc?","reagent.core.atom","re-com.core/h-box","re-com.core/popover-anchor-wrapper","re-com.core/md-icon-button","cljs.core.swap_BANG_","cljs.core/not","re-com.core/popover-content-wrapper","bh-ui.atom.bhui.table/table","p__59487","map__59488","seq59486","bh-ui.atom.bhui.table/meta-data","re-frame.core/dispatch-sync","cljs.core/chunk-first"],"sourcesContent":["(ns bh-ui.atom.bhui.table\n  (:require [bh-ui.utils.example-data :as ex]\n            [bh-ui.utils.helpers :as h]\n            [re-com.core :as rc]\n            [re-frame.core :as re-frame]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]))\n\n\n(def sample-data ex/tabular-data)\n(def sample-meta-data ex/meta-tabular-data)\n(def sample-meta-coc-data (assoc ex/meta-tabular-data\n                            :c-o-c ex/default-coc))\n(def random-data ex/random-tabular-data)\n(def random-data-meta ex/random-meta-tabular-data)\n\n\n(defn- table* [& {:keys [data max-rows width height cell-style-fn\n                         on-click-row-fn row-line-color]}]\n\n  ;(log/info \"table(star)\" data)\n\n  (if (empty? data)\n\n    [rc/alert-box :src (rc/at)\n     :alert-type :info\n     :heading \"Waiting for data\"]\n\n    (let [header (keys (first data))\n          body   data]\n\n      ;(log/info \"table(STAR) INSIDE\" header \"//\" body)\n\n      [:div.table-container {:style {:width (or width \"100%\")\n                                     :height (or height \"100%\")\n                                     :overflow  :scroll}}\n       [:table.table.is-hoverable {:style {:width \"100%\" :height \"100%\"}}\n        [:thead {:style {:position :sticky :top 0 :background :darkslategray}}\n         [:tr\n          (doall (for [[idx h] (map-indexed vector header)]\n                   (do\n                     ;(log/info \"header\" idx h)\n                     ^{:key idx} [:th {:style {:color :white}} (str h)])))]]\n\n        [:tbody\n         (doall\n           (for [[idx b] (map-indexed vector body)]\n             (do\n               ;(log/info \"body\" idx b)\n               ^{:key idx} [:tr (for [key header]\n                                  (do\n                                    ;(log/info \"cell\" key)\n                                    ^{:key key} [:td (str (get b (keyword key)))]))])))]]])))\n\n\n(defn- non-meta-table [& {:keys [data max-rows width height cell-style-fn\n                                 on-click-row-fn row-line-color]}]\n  (let [d (h/resolve-value data)]\n    ;(log/info \"non-meta-table\" data \"//\" @d)\n    [table*\n     :data @d\n     :max-rows max-rows\n     :width width\n     :height height\n     :row-line-color row-line-color\n     :on-click-row on-click-row-fn\n     :cell-style-fn cell-style-fn]))\n\n\n(defn- meta-table [& {:keys [data max-rows width height cell-style-fn\n                             on-click-row-fn row-line-color]}]\n  (let [d (h/resolve-value data)]\n    (fn []\n\n      ;(log/info \"meta-table\" data \"//\" @d \"//\" (:data @d))\n\n      (let [coc? (r/atom false)]\n        [:div.card {:style {:width  (or width \"90%\") :height (or height \"100%\")\n                            :margin :auto}}\n         [:div.card-header\n          [:div.card-header-title\n           [rc/h-box :src (rc/at)\n            :width \"100%\"\n            :justify :between\n            :children [(-> @d :metadata :title)\n                       (when (seq (:c-o-c @d))\n                         [:div\n                          [rc/popover-anchor-wrapper :src (rc/at)\n                           :showing? coc?\n                           :position :below-center\n                           :anchor [rc/md-icon-button\n                                    :md-icon-name \"zmdi zmdi-badge-check\"\n                                    :tooltip \"view chain-of-custody\"\n                                    :on-click #(swap! coc? not)]\n                           :popover [rc/popover-content-wrapper :src (rc/at)\n                                     :title \"Chain-of-Custody\"\n                                     :body [table*\n                                            :data (:c-o-c @d)\n                                            :width \"400px\"\n                                            :max-width \"400px\"\n                                            :max-rows 3]]]])]]]]\n         [:div.card-content\n          [table*\n           :data (if (:data @d) (:data @d) [])\n           :max-rows max-rows\n           :width width\n           :height height\n           :row-line-color row-line-color\n           :on-click-row on-click-row-fn\n           :cell-style-fn cell-style-fn]]]))))\n\n\n\n(defn table [& {:keys [data max-rows width height cell-style-fn\n                       on-click-row-fn row-line-color]}]\n\n  (let [d (h/resolve-value data)]\n    ;(log/info \"table\" data \"//\" @d \"//\" (:data @d) \"//\" (:metadata @d))\n    (if (:metadata @d)\n      [meta-table\n       :data data\n       :max-rows max-rows\n       :width width\n       :height height\n       :cell-style-fn cell-style-fn\n       :on-click-row-fn on-click-row-fn\n       :row-line-color row-line-color]\n      [non-meta-table\n       :data data\n       :max-rows max-rows\n       :width width\n       :height height\n       :cell-style-fn cell-style-fn\n       :on-click-row-fn on-click-row-fn\n       :row-line-color row-line-color])))\n\n\n\n(def meta-data {:bhui/table {:component table\n                           :ports     {:data :port/sink}}})\n\n\n(re-frame/dispatch-sync [:register-meta meta-data])\n\n\n\n\n\n\n(comment\n  (def value sample-data)\n\n  (def value [])\n\n  ;(let [ret (cond\n  ;            (and (coll? value)\n  ;              (not (empty? value))\n  ;              (every? keyword? value)) (re-frame/subscribe value)\n  ;            (instance? reagent.ratom.RAtom value) value\n  ;            (instance? Atom value) value\n  ;            :else (r/atom value))]\n  ;  ;(log/info \"resolve-value\" value \"//\" ret \"//\" (str @ret))\n  ;  ret)\n\n  (empty? @(h/resolve-value []))\n\n  (def d (h/resolve-value ex/meta-tabular-data))\n\n  (keys (first (:data @d)))\n  (:data @d)\n\n  (def body (:data @d))\n  (map-indexed vector body)\n\n\n  (def d (h/resolve-value ex/tabular-data))\n  (keys (first @d))\n\n  (def body @d)\n  (map-indexed vector body)\n\n\n  (h/resolve-value [:bhui.subs/source :source/targets])\n  (h/resolve-value [:bhui.subs/source :source/targets] :title)\n\n  (re-frame/subscribe [:bhui.subs/source :source/targets :data])\n\n  (get-in @re-frame.db/app-db [:sources :source/targets :data])\n\n  (get-in @re-frame.db/app-db (reduce conj [:sources :source/targets] '(:data)))\n\n  (or (get-in @re-frame.db/app-db (reduce conj [:sources :dummy] '(:data))) [])\n\n  (h/resolve-value [])\n\n  ())"]}