{"version":3,"sources":["bh_ui/atom/diagram/flow.cljs"],"mappings":"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","names":["bh-ui.atom.diagram.flow/diagram-cell","x","y","bh-ui.atom.diagram.flow/sample-data","reagent.core.atom","bh-ui.atom.chart.colored-pie-chart/component","bh-ui.atom.chart.area-chart/component","bh-ui.atom.chart.bar-chart/component","bh-ui.atom.chart.line-chart/component","bh-ui.atom.diagram.flow/data-sources","bh-ui.atom.chart.area-chart/sample-data","bh-ui.atom.chart.bar-chart/sample-data","bh-ui.atom.chart.line-chart/sample-data","bh-ui.atom.chart.colored-pie-chart/sample-data","bh-ui.atom.diagram.flow/source-code","bh-ui.atom.diagram.flow/default-background","bh-ui.atom.diagram.flow/default-color","bh-ui.atom.diagram.flow/card-style","bh-ui.atom.diagram.flow/handle-style","bh-ui.atom.diagram.flow/image-style","bh-ui.atom.diagram.flow/label-style","bh-ui.atom.diagram.flow/node-style-globe","bh-ui.atom.diagram.flow/node-style-square","bh-ui.atom.diagram.flow/keywordize","m","k","cljs.core/keys","v","cljs.core/vals","cljs.core/zipmap","cljs.core.map","cljs.core/keyword","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","bh-ui.atom.diagram.flow/platform-node","p__59022","map__59023","cljs.core/--destructure-map","cljs.core.get","seq59020","G__59021","cljs.core/first","cljs.core/next","self__4851__auto__","props","data","label","image","chart","ui","bh-ui.atom.card.flippable-card/card","cljs.core.merge","bh_ui.utils.path__GT_keyword","bh-ui.atom.diagram.flow/node","type","sources","d","cljs.core.js__GT_clj","cljs.core.get_in","id","source","reagent.core.as_element","js/shadow.js.shim.module$react_flow_renderer.Handle","bh-ui.atom.diagram.flow/sample-node-types","cljs.core.partial","bh-ui.atom.diagram.flow/component","p__59025","map__59026","seq59024","self__4852__auto__","cljs.core/seq","node-types","edge-types","connectFn","zoom-on-scroll","preventScrolling","component-id","container-id","js/shadow.js.shim.module$react_flow_renderer.ReactFlowProvider","js/shadow.js.shim.module$react_flow_renderer.default","cljs.core/deref","or__4253__auto__","js/shadow.js.shim.module$react_flow_renderer.MiniMap","js/shadow.js.shim.module$react_flow_renderer.Controls"],"sourcesContent":["(ns bh-ui.atom.diagram.flow\n  (:require [bh-ui.atom.card.flippable-card :as card]\n            [bh-ui.atom.chart.area-chart :as area-chart]\n            [bh-ui.atom.chart.bar-chart :as bar-chart]\n            [bh-ui.atom.chart.colored-pie-chart :as colored-pie-chart]\n            [bh-ui.atom.chart.pie-chart :as pie-chart]\n            [bh-ui.atom.chart.line-chart :as line-chart]\n            [bh-ui.utils :as ui-utils]\n            [reagent.core :as r]\n            [\"react-flow-renderer\" :refer (ReactFlowProvider MiniMap Controls Handle) :default ReactFlow]))\n\n\n(defn diagram-cell [x y]\n  {:x (+ 10 (* x 200)) :y (+ 10 (* y 200))})\n\n\n(def sample-data\n  (r/atom {:nodes [{:id        \"viirs-5\"\n                    :el-type   :node\n                    :type      \"globe\"\n                    :data      {:label \"viirs-5\"\n                                :chart colored-pie-chart/component\n                                :ui    {:legend false :tooltip false :label false}}\n                    :draggable false\n                    :position  (diagram-cell 0 1)}\n\n                   {:id        \"abi-meso-11\"\n                    :el-type   :node\n                    :type      \"globe\"\n                    :data      {:label \"abi-meso-11\"\n                                :chart colored-pie-chart/component\n                                :ui    {:legend false :tooltip false :label false}}\n                    :draggable false\n                    :position  (diagram-cell 0 0)}\n\n                   {:id        \"goes-east\"\n                    :el-type   :node\n                    :type      \"platform\"\n                    :data      {:label \"GOES East\"\n                                :image \"/images/icons/Weather-Satellite-PNG-Clipart.png\"\n                                :chart area-chart/component\n                                :ui    {:x-axis false :y-axis false\n                                        :legend false :tooltip false}}\n                    :draggable false\n                    :position  (diagram-cell 1 0)}\n\n                   {:id        \"central\"\n                    :el-type   :node\n                    :type      \"downlink-terminal\"\n                    :data      {:label \"Wallops\"\n                                :image \"/images/icons/downlink-terminal.png\"\n                                :chart bar-chart/component\n                                :ui    {:grid   false :x-axis false :y-axis false\n                                        :legend false :tooltip false}}\n                    :draggable false\n                    :position  (diagram-cell 2 0)}\n\n                   {:id        \"washington\"\n                    :el-type   :node\n                    :type      \"processing-center\"\n                    :data      {:label \"NSOF Suitland\"\n                                :image \"/images/icons/processing-center.png\"\n                                :chart line-chart/component\n                                :ui    {:grid   false :x-axis false :y-axis false\n                                        :legend false :tooltip false}}\n                    :draggable false\n                    :position  (diagram-cell 3 0)}\n\n                   {:id        \"noaa-xx\"\n                    :el-type   :node\n                    :type      \"platform\"\n                    :data      {:label \"NOAA XX\"\n                                :image \"/images/icons/Weather-Satellite-PNG-Clipart.png\"\n                                :chart area-chart/component\n                                :ui    {:x-axis false :y-axis false\n                                        :legend false :tooltip false}}\n                    :draggable false\n                    :position  (diagram-cell 1 1)}\n\n                   {:id        \"mountain\"\n                    :el-type   :node\n                    :type      \"downlink-terminal\"\n                    :data      {:label \"Svalbaard/McMurdo\"\n                                :image \"/images/icons/downlink-terminal.png\"\n                                :chart bar-chart/component\n                                :ui    {:grid   false :x-axis false :y-axis false\n                                        :legend false :tooltip false}}\n                    :draggable false\n                    :position  (diagram-cell 2 1)}]\n\n           :edges [{:id    \"11-n\" :el-type :edge :source \"abi-meso-11\" :target \"goes-east\"\n                    :style {:strokeWidth 20 :stroke :gray} :animated true}\n                   {:id    \"v5-n\" :el-type :edge :source \"viirs-5\" :target \"noaa-xx\"\n                    :style {:strokeWidth 20 :stroke :gray} :animated true}\n                   {:id    \"e-c\" :el-type :edge :source \"goes-east\" :target \"central\"\n                    :style {:strokeWidth 50 :stroke :orange} :animated true}\n                   {:id    \"c-w\" :el-type :edge :source \"central\" :target \"washington\"\n                    :style {:strokeWidth 25 :stroke \"#f00\"} :animated true}\n                   {:id    \"n-m\" :el-type :edge :source \"noaa-xx\" :target \"mountain\"\n                    :style {:strokeWidth 30 :stroke :lightgreen} :animated true}\n                   {:id    \"m-w\" :el-type :edge :source \"mountain\" :target \"washington\"\n                    :style {:strokeWidth 5} :animated true}]}))\n\n\n(def data-sources {\"GOES East\"         area-chart/sample-data\n                   \"NOAA XX\"           area-chart/sample-data\n                   \"Wallops\"           bar-chart/sample-data\n                   \"Svalbaard/McMurdo\" bar-chart/sample-data\n                   \"NSOF Suitland\"     line-chart/sample-data\n                   \"viirs-5\"           colored-pie-chart/sample-data\n                   \"abi-meso-11\"       colored-pie-chart/sample-data})\n\n\n(def source-code '[:> ReactFlowProvider\n                   [:> ReactFlow {:className        component-id\n                                  :nodes            (:nodes @data)\n                                  :edges            (:edges @data)\n                                  :nodeTypes        {}\n                                  :edgeTypes        {}\n                                  :zoomOnScroll     false\n                                  :preventScrolling false\n                                  :onConnect        #()}\n                    [:> MiniMap]\n                    [:> Controls]]])\n\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;\n; STYLES\n;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; region\n(def default-background \"#dcdcdc\")\n(def default-color \"#FF\")\n(def card-style {:width \"100px\" :height \"150px\"})\n(def handle-style {:width \"8px\" :height \"8px\" :borderRadius \"50%\"})\n(def image-style {:width        \"75px\" :height \"75px\"\n                  :display      :block\n                  :margin-left  :auto\n                  :margin-right :auto})\n(def label-style {:margin-top \"10px\" :margin-bottom \"5px\"\n                  :text-align :center})\n(def node-style-globe {:width         \"100px\" :height \"100px\"\n                       :border-radius \"50%\"\n                       :overflow      \"hidden\"})\n(def node-style-square {:width           \"100px\" :height \"150px\"\n                        :overflow        \"hidden\"\n                        :background      default-background\n                        :color           default-color\n                        :display         :flex\n                        :flex-direction  :column\n                        :justify-content :center\n                        :align-items     :center})\n;; endregion\n\n(defn- keywordize\n  \"convert all keys and values into keywords\"\n  [m]\n  (let [k (keys m)\n        v (vals m)]\n    (zipmap (map keyword k) (map keyword v))))\n\n\n(defn- platform-node [props & {:keys [data label image chart ui]}]\n  [card/card\n   :style card-style\n   :front [:div#entity-card {:style (merge node-style-square props)}\n           [:img {:style (merge image-style\n                           {:background-color default-background}\n                           props)\n                  :src   image}]\n           [:div.subtitle.is-3 {:style label-style} label]]\n   :back [:div {:style (merge node-style-square props)}\n          [chart\n           :data data\n           :component-id (ui-utils/path->keyword \"diagram\" label \"chart\")\n           :container-id (ui-utils/path->keyword \"diagram\" label)\n           :ui (keywordize ui)]]])\n\n\n(defn- node [type sources d]\n  (let [data   (js->clj d)\n        label  (get-in data [\"data\" \"label\"])\n        image  (get-in data [\"data\" \"image\"])\n        chart  (get-in data [\"data\" \"chart\"])\n        ui     (get-in data [\"data\" \"ui\"])\n        id     (get data \"id\")\n        source (get sources label)]\n\n    ;(log/info \"node\" id label (if source @source {}))\n\n    (r/as-element\n      [:div#node-card {:style (merge card-style {:margin 0})}\n       [type {:margin 0}\n        :data source\n        :label label\n        :image image\n        :chart chart\n        :ui ui]\n       [:> Handle {:id    (str id \"-out\") :type \"source\" :position \"right\"\n                   :style handle-style}]\n       [:> Handle {:id    (str id \"-in\") :type \"target\" :position \"left\"\n                   :style handle-style}]])))\n\n\n(def sample-node-types {\"globe\"             (partial node platform-node data-sources)\n                        \"platform\"          (partial node platform-node data-sources)\n                        \"downlink-terminal\" (partial node platform-node data-sources)\n                        \"processing-center\" (partial node platform-node data-sources)})\n\n\n(defn component [& {:keys [data node-types edge-types connectFn\n                           zoom-on-scroll preventScrolling\n                           component-id container-id]}]\n  [:> ReactFlowProvider\n   [:> ReactFlow {:className        component-id\n                  :nodes            (:nodes @data)\n                  :edges            (:edges @data)\n                  :nodeTypes        (or node-types sample-node-types)\n                  :edgeTypes        (or edge-types {})\n                  :zoomOnScroll     (or zoom-on-scroll false)\n                  :preventScrolling (or preventScrolling false)\n                  :onConnect        (or connectFn #())\n                  :fitView          true}\n    [:> MiniMap]\n    [:> Controls]]])\n\n"]}