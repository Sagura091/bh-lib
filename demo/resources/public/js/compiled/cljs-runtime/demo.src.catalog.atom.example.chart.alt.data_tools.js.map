{"version":3,"sources":["demo/src/catalog/atom/example/chart/alt/data_tools.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","demo.src.catalog.atom.example.chart.alt.data-tools/meta-tabular-data-ratom-tools","data","default-data","random-data","re-com.core/h-box","js/goog.DEBUG","re-com.core/button","cljs.core/reset!","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core/assoc","cljs.core.conj","cljs.core/deref","cljs.core/rand-int","cljs.core.into","cljs.core.drop_last","cljs.core.assoc","cljs.core.map","x","demo.src.catalog.atom.example.chart.alt.data-tools/meta-tabular-data-sub-tools","old-data","bh-ui.utils/subscribe-local","old-meta","bh-ui.utils.helpers/handle-change-path","demo.src.catalog.atom.example.chart.alt.data-tools/add-node","new-node","original","bh-ui.utils.helpers/resolve-value","next-index","cljs.core.apply","cljs.core/max","demo.src.catalog.atom.example.chart.alt.data-tools/add-nodes-and-link","source","target","value","demo.src.catalog.atom.example.chart.alt.data-tools/add-link","cljs.core.update","cljs.core/conj","demo.src.catalog.atom.example.chart.alt.data-tools/update-link","new-value","original-data","original-link","p1__58580#","cljs.core.filter","cljs.core._EQ_","cljs.core/first","cljs.core/disj","demo.src.catalog.atom.example.chart.alt.data-tools/dag-data-ratom-tools","demo.src.catalog.atom.example.chart.alt.data-tools/dag-data-sub-tools"],"sourcesContent":["(ns demo.src.catalog.atom.example.chart.alt.data-tools\n  (:require [bh-ui.utils :as ui-utils]\n            [bh-ui.utils.helpers :as h]\n            [re-com.core :as rc]\n            [taoensso.timbre :as log]\n            [bh-ui.utils.example-data :as ex]))\n\n\n(log/info \"demo.src.catalog.atom.example.chart.alt.data-tools\")\n\n\n(defn meta-tabular-data-ratom-tools [data default-data random-data]\n  [rc/h-box :src (rc/at)\n   :gap \"10px\"\n   :style {:border     \"1px solid\" :border-radius \"3px\"\n           :box-shadow \"5px 5px 5px 2px\"\n           :margin     \"5px\" :padding \"5px\"}\n   :children [[:label.h5 \"Input Data:\"]\n              [rc/button :label \"Empty\" :on-click #(reset! data []) :label \"Empty\"]\n              [rc/button :label \"Default\" :on-click #(reset! data default-data)]\n              ; TODO: need to pass a \"meaningful\" random-data-set builder function into the tools\n              [rc/button :label \"Random\" :on-click #(reset! data (random-data))]\n              [rc/button :label \"A(uv) -> 10,000\" :on-click #(swap! data assoc-in [:data 0 :uv] 10000)]\n              [rc/button :label \"Add 'Q'\"\n               :on-click #(swap! data assoc :data\n                            (conj (-> @data :data)\n                              {:name \"Page Q\" :uv (rand-int 5000)\n                               :pv   (rand-int 5000) :tv (rand-int 5000) :amt (rand-int 5000)}))]\n\n              [rc/button :label \"Drop Last 2\"\n               :on-click #(swap! data assoc :data (into [] (drop-last 2 (:data @data))))]\n\n              [rc/button :label \"Add :new-item\"\n               :on-click #(reset! data (-> @data\n                                         (assoc-in [:metadata :fields :new-item] :number)\n                                         (assoc :data (into []\n                                                        (map (fn [x]\n                                                               (assoc x :new-item (rand-int 7000)))\n                                                          (:data @data))))))]]])\n\n\n(defn meta-tabular-data-sub-tools [data default-data random-data]\n\n  (let [old-data (ui-utils/subscribe-local data [:data])\n        old-meta (ui-utils/subscribe-local data [])]\n\n    (fn []\n      [rc/h-box :src (rc/at)\n       :gap \"10px\"\n       :style {:border     \"1px solid\" :border-radius \"3px\"\n               :box-shadow \"5px 5px 5px 2px\"\n               :margin     \"5px\" :padding \"5px\"}\n       :children [[:label.h5 \"Input Data:\"]\n\n                  [rc/button :label \"Empty\" :on-click #(h/handle-change-path data [] [])]\n\n                  [rc/button :label \"Default\"\n                   :on-click #(h/handle-change-path data [] default-data)]\n\n                  [rc/button :label \"Random\" :on-click #(h/handle-change-path data [] (random-data))]\n\n                  [rc/button :label \"A(uv) -> 10000\"\n                   :on-click #(h/handle-change-path data [:data]\n                                (assoc-in @old-data [0 :uv] 10000))]\n\n                  [rc/button :label \"Add 'Q'\"\n                   :on-click #(h/handle-change-path data [:data]\n                                (conj @old-data\n                                  {:name \"Page Q\" :uv (rand-int 5000)\n                                   :pv   (rand-int 5000) :tv (rand-int 5000) :amt (rand-int 5000)}))]\n\n                  [rc/button :label \"Drop Last 2\"\n                   :on-click #(h/handle-change-path data [:data]\n                                (into [] (drop-last 2 @old-data)))]\n\n                  [rc/button :label \"Add :new-item\"\n                   :on-click #(h/handle-change-path data []\n                                (-> @old-meta\n                                  (assoc-in [:metadata :fields :new-item] :number)\n                                  (assoc :data (into []\n                                                 (map (fn [x]\n                                                        (assoc x :new-item (rand-int 7000)))\n                                                   @old-data)))))]]])))\n\n\n(defn- add-node [data new-node]\n  (let [original   (h/resolve-value data)\n        next-index (->> @original\n                     :nodes\n                     (map :index)\n                     (apply max)\n                     inc)]\n    (-> data\n      h/resolve-value\n      deref\n      (assoc :nodes (conj (:nodes @original) {:name new-node :index next-index})))))\n\n\n(defn- add-nodes-and-link [data source target value]\n  (let [original   (h/resolve-value data)\n        next-index (->> @original\n                     :nodes\n                     (map :index)\n                     (apply max)\n                     inc)]\n    (-> data\n      h/resolve-value\n      deref\n      (assoc :nodes (conj (:nodes @original)\n                      {:name source :index next-index}\n                      {:name target :index (inc next-index)})\n             :links (conj (:links @original)\n                      {:source source :target target :value value})))))\n\n\n(defn- add-link [data source target value]\n  (-> data\n    h/resolve-value\n    deref\n    (update :links conj {:source source :target target :value value})))\n\n\n(defn- update-link [data source target new-value]\n  (let [original-data (h/resolve-value data)\n        original-link (->> @original-data\n                        :links\n                        (filter #(and (= source (:source %)) (= target (:target %))))\n                        first)]\n    (-> data\n      h/resolve-value\n      deref\n      (update :links disj original-link)\n      (update :links conj {:source source :target target :value new-value}))))\n\n\n(defn dag-data-ratom-tools [data default-data]\n  [rc/h-box :src (rc/at)\n   :gap \"10px\"\n   :style {:border     \"1px solid\" :border-radius \"3px\"\n           :box-shadow \"5px 5px 5px 2px\"\n           :margin     \"5px\" :padding \"5px\"}\n   :children [[:label.h5 \"Input Data:\"]\n\n              [rc/button :label \"Empty\" :on-click #(reset! data [])]\n\n              [rc/button :label \"Default\" :on-click #(reset! data default-data)]\n\n              [rc/button :label \"+ Redirect (1)\"\n               :on-click #(reset! data (add-node data :Redirect))]\n\n              [rc/button :label \"+ Visit->Redirect (2)\"\n               :on-click #(reset! data (add-link data :Visit :Redirect 24987))]\n\n              [rc/button :label \"Redirect = 50000 (3)\"\n               :on-click #(reset! data (update-link data :Visit :Redirect 50000))]\n\n              [rc/button :label \"+ Dummy->New-thing\"\n               :on-click #(reset! data (add-nodes-and-link data :Dummy :New-thing 124987))]]])\n\n\n(defn dag-data-sub-tools [data default-data]\n  [rc/h-box :src (rc/at)\n   :gap \"10px\"\n   :style {:border     \"1px solid\" :border-radius \"3px\"\n           :box-shadow \"5px 5px 5px 2px\"\n           :margin     \"5px\" :padding \"5px\"}\n   :children [[:label.h5 \"Input Data:\"]\n\n              [rc/button :label \"Empty\" :on-click #(h/handle-change-path data [] [])]\n\n              [rc/button :label \"Default\" :on-click #(h/handle-change-path data [] default-data)]\n\n              [rc/button :label \"+ Redirect (1)\"\n               :on-click #(h/handle-change-path data [] (add-node data :Redirect))]\n\n              [rc/button :label \"+ Visit->Redirect (2)\"\n               :on-click #(h/handle-change-path data [] (add-link data :Visit :Redirect 24987))]\n\n              [rc/button :label \"Redirect = 50000 (3)\"\n               :on-click #(h/handle-change-path data [] (update-link data :Visit :Redirect 50000))]\n\n              [rc/button :label \"+ Dummy->New-thing\"\n               :on-click #(h/handle-change-path data [] (add-nodes-and-link data :Dummy :New-thing 124987))]]])\n\n\n\n\n\n(comment\n  (def data [:area-chart-2-data-sub-demo :blackboard :topic.sample-data])\n  (def old-data (ui-utils/subscribe-local data [:data]))\n\n\n  (h/handle-change-path data [:data]\n    (assoc-in @(ui-utils/subscribe-local data [:data]) [0 :uv] 10000))\n  (h/handle-change-path data [:data]\n    (assoc-in @(ui-utils/subscribe-local data [:data]) [0 :pv] 7000))\n\n\n  ())\n\n\n(comment\n  (do\n    (def source :Visit)\n    (def target :Page-Click)\n    (def data {:nodes #{{:name :Visit :index 0}\n                        {:name :Direct-Favourite :index 1}\n                        {:name :Page-Click :index 2}\n                        {:name :Detail-Favourite :index 3}\n                        {:name :Lost :index 4}}\n               :links #{{:source :Visit :target :Direct-Favourite :value 37283}\n                        {:source :Visit :target :Page-Click :value 354170}\n                        {:source :Page-Click :target :Detail-Favourite :value 62429}\n                        {:source :Page-Click :target :Lost :value 291741}}})\n\n    (def original-data (h/resolve-value data)))\n\n  (def next-index (->> @original-data\n                    :nodes\n                    (map :index)\n                    (apply max)\n                    inc))\n\n\n  (def original-link (->> @original-data\n                       :links\n                       (filter #(and (= source (:source %)) (= target (:target %))))\n                       first))\n\n  (disj (:link data) original-link)\n\n  ())\n"]}