{"version":3,"sources":["demo/src/catalog/atom/example/misc/hex_color_picker.cljs"],"mappings":";AAUA,AAAKA,6DAAO,gDAAA,hDAACC;AAGb,mEAAA,nEAAOG,8IAAcC;AAArB,AAAA,4GAAA,wSAAA,iDAAA,MAAA,6DAAA,mFAAA,0GAAA,wSAAA,6DAAA,+DAAA,WAAAH,1hCACGI,sEAAc,EAAA,GAAAC,cAAA,KAAA,2CAAA,sDAAA,2DAAA,oDAAA,sSAEFC,2EAAmB,EAAA,GAAAD,cAAA,KAAA,2CAAA,sDAAA,2DAAA,oDAAA,kEACZF;AAJtB,AAK2B,oCAAAH,7BAACO,sBAAOJ;WALnC,sGAAA,wSAAA,uDAAA,SAAA,uDAAA,2CAAA,4EAAA,AAAAF,wBAAA,jkBAOeO,uEAAe,EAAA,GAAAH,cAAA,KAAA,2CAAA,sDAAA,2DAAA,oDAAA,0QAEYF,+DACD,AAACM,kCACC,+BAAA,AAAAR,/BAACS,+CAAiBP;;AAG7D,sEAAA,tEAAOS,oJAAiBT;AAAxB,AAAA,0FAAA,mGAAA,2CAAA,uDAAA,AAAAF,wBAAA,+DAAA,WAAAU,xPACME,sKAA4BV;AADlC,AAEkC,oCAAAQ,7BAACJ,sBAAOJ;;;AAG1C,8DAAA,9DAAMW;AAAN,AACE,IAAAC,WAAA;IAAAC,WAAA;IAAAC,WAAA,gHAAA,2CAAA,uEAAA,oEAAA,qGAAA,wSAAA,iDAAA,OAAA,6DAAA,mFAAA,uNAAA,//BAQGG,sSACCC,sEAAc,EAAA,GAAAhB,cAAA,KAAA,2CAAA,sDAAA,2DAAA,oDAAA,uSAEFH,iEAAaJ,sJACbc,oEAAgBd;IAZhCoB,WAAA,AAAA;AAAA,AAAA,sHAAAH,SAAAC,SAAAC,SAAAC,8CAAAH,SAAAC,SAAAC,SAAAC,lNAACC,wDAAAA,6FAAAA","names":["demo.src.catalog.atom.example.misc.hex-color-picker/config","reagent.core.atom","p1__59403#","cljs.core/deref","demo.src.catalog.atom.example.misc.hex-color-picker/config-panel","config","re-com.core/v-box","js/goog.DEBUG","re-com.core/input-text","cljs.core/reset!","re-com.core/button","bh-ui.utils.color/best-text-color","bh-ui.utils.color/hex->rgba","p1__59404#","demo.src.catalog.atom.example.misc.hex-color-picker/component-panel","js/shadow.js.shim.module$react_colorful.HexColorPicker","demo.src.catalog.atom.example.misc.hex-color-picker/example","G__59406","G__59407","G__59408","G__59409","woolybear.ad.utils/demo","woolybear.ad.layout/centered","re-com.core/h-box"],"sourcesContent":["(ns demo.src.catalog.atom.example.misc.hex-color-picker\n  (:require [bh-ui.utils.color :as color]\n            [re-com.core :as rc]\n            [reagent.core :as r]\n            [woolybear.ad.utils :as acu]\n            [woolybear.ad.layout :as layout]\n\n            [\"react-colorful\" :refer [HexColorPicker]]))\n\n\n(def config (r/atom \"#aabbcc\"))\n\n\n(defn- config-panel [config]\n  [rc/v-box :src (rc/at)\n   :gap \"5px\"\n   :children [[rc/input-text :src (rc/at)\n               :model config\n               :on-change #(reset! config %)]\n\n              [rc/button :src (rc/at)\n               :label \"Button\"\n               :style {:background-color @config\n                       :color            (color/best-text-color\n                                           (color/hex->rgba @config))}]]])\n\n\n(defn- component-panel [config]\n  [:> HexColorPicker {:color     @config\n                      :on-change #(reset! config %)}])\n\n\n(defn example []\n  (acu/demo \"Hex Color Picker\"\n    \"Use the [react-colorful](https://github.com/omgovich/react-colorful) component to provide simple, yet powerful color picker control.\n\nThis example also includes use of a support function\n`bh-ui.utils/best-text-color` to determine the best text color to place 'over' the given\ncolor choice. You can see this in the example `Button` and`div` shown under the text-field that shows the\nactual hex-encoded string for the chosen color.\n    \"\n    [layout/centered {:extra-classes :width-50}\n     [rc/h-box :src (rc/at)\n      :gap \"10px\"\n      :children [[config-panel config]\n                 [component-panel config]]]]\n    '(let [color (r/atom \"#aabbcc\")]\n       [:> HexColorPicker {:color @color :on-change #(reset! color %)}])))\n"]}