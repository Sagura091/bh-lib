{"version":3,"sources":["bh_ui/molecule/composite/simple_multi_chart_2.cljs"],"mappings":";AASA,AAAAA,0DAAAC,mCAAA,qDAAA,gDAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,YAAA;AAGA,AAAKC,4DAAYC;AAGjB,oEAAA,2CAAA,sDAAA,KAAA,kDAAA,2CAAA,0DAAA,KAAA,oDAAA,UAAA,wDAAA,YAAA,+CAAA,2CAAA,0DAAA,KAAA,oDAAA,UAAA,wDAAA,YAAA,kDAAA,2CAAA,0DAAA,KAAA,oDAAA,UAAA,wDAAA,YAAA,oDAAA,2CAAA,0DAAA,KAAA,oDAAA,UAAA,wDAAA,rxCAAKC;AAOL,oEAAA,pEAAOC,gJAAqBC;AAA5B,AACE,8GAAA,2CAAA,sDAAA,xMAACC,sSAIG,AAACU,oDAAY,WAAKC,IAAIC,nJAKtB,6CAAA,7CAACE;AALY,AAAA,yDAAA,2CAAA,0DAAA,KAAA,0FAAA,qFAAA,wDAAA,nVACGF,qKACY,AAACC,4BAAgBF,yDACjB,AAACE,4BAAgBF;kBAL7C,AAACT,+CAAO,WAAAC,zEACRM,AACA;AAFQ,AAAA,IAAAL,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAAME;QAAN,AAAAD,4CAAAD,WAAA,IAAA,/DAAQG;AAAR,AAAY,oDAAA,7CAACC,sGAAUD;GAD5B,oDAAA,mFAAA,6DAAA,pMAACN,+CAAOF;;AAWjB,+DAAA,uEAAAgB,tIAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAAA,TAAiEM;WAAjE,AAAAJ,4CAAAF,eAAA,lEAA8BjB;kBAA9B,AAAAmB,4CAAAF,eAAA,zEAAmCI;mBAAnC,AAAAF,4CAAAF,eAAA,1EAA+CK;AAA/C,AAEE,iJAAA,1IAACE,2DACC,AAACC,gBAAMJ,+GACHrB,KACJ,WAAK0B,EAAEC;AAAP,AACE,OAACC,8CAEC,yDAAA,mFAAA,kEAAA,9MAACC,4CAA2BP,+OAAyC,AAACvB,kEAAoB2B;;;AAGlG,4BAAA,mFAAA,uEAAA,2CAAA,gHAAA,2CAAA,2HAAA,wDAAA,2CAAA,qDAAA,2DAAA,mEAAA,7wBAACI,0bAAwFV;AAIzF,8DAAA,2CAAA,kEAAA,2CAAA,kEAAA,2CAAA,qDAAA,kEAAA,qDAAA,wEAAA,oEAAA,2CAAA,qDAAA,kEAAA,qDAAA,0EAAA,6DAAA,2CAAA,qDAAA,kEAAA,qDAAA,6DAAA,8HAAA,iEAAA,2CAAA,qDAAA,kEAAA,qDAAA,iEAAA,4DAAA,2CAAA,uEAAA,2CAAA,qDAAA,4DAAA,qDAAA,gIAAA,uDAAA,2CAAA,6DAAA,2CAAA,qDAAA,2CAAA,kEAAA,qDAAA,oEAAA,qDAAA,uEAAA,qEAAA,iEAAA,2CAAA,qDAAA,2CAAA,oEAAA,mEAAA,kEAAA,mFAAA,uEAAA,2CAAA,mEAAA,2CAAA,iEAAA,6EAAA,mEAAA,mFAAA,2CAAA,gDAAA,oEAAA,+CAAA,IAAA,gDAAA,IAAA,8CAAA,KAAA,+CAAA,KAAA,yDAAA,aAAA,2CAAA,gDAAA,kEAAA,+CAAA,KAAA,gDAAA,IAAA,8CAAA,KAAA,+CAAA,KAAA,yDAAA,7qJAAKW,yyCAG4EnC;AAcjF,4DAAA,AAAA,5DAAKoC","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","bh-ui.molecule.composite.simple-multi-chart-2/sample-data","bh-ui.atom.chart.bar-chart/sample-data","bh-ui.molecule.composite.simple-multi-chart-2/default-config-data","bh-ui.molecule.composite.simple-multi-chart-2/compute-data-config","data","cljs.core.merge","cljs.core.get_in","cljs.core.filter","p__61197","vec__61198","cljs.core.nth","k","v","cljs.core._EQ_","cljs.core/keys","cljs.core.map_indexed","idx","a","bh-ui.utils.color/get-color","cljs.core.into","p__61201","map__61202","cljs.core/--destructure-map","cljs.core.get","bh-ui.molecule.composite.simple-multi-chart-2/fn-make-config","config-data","container-id","params","re_frame.core.reg_sub","cljs.core/first","d","_","cljs.core.doall","bh-ui.utils.locals/update-local-path-values","re-frame.core/dispatch-sync","bh-ui.molecule.composite.simple-multi-chart-2/ui-definition","bh-ui.molecule.composite.simple-multi-chart-2/source-code"],"sourcesContent":["(ns bh-ui.molecule.composite.simple-multi-chart-2\n  (:require [bh-ui.atom.chart.bar-chart :as chart]\n            [bh-ui.utils.color :as color]\n            [bh-ui.utils.helpers :as h]\n            [bh-ui.utils.locals :as l]\n            [re-frame.core :as re-frame]\n            [taoensso.timbre :as log]))\n\n\n(log/info \"bh-ui.molecule.composite.simple-multi-chart-2\")\n\n\n(def sample-data chart/sample-data)\n\n\n(def default-config-data {:brush true\n                          :uv    {:include true, :fill \"#ff0000\", :stackId \"b\"}\n                          :pv    {:include true, :fill \"#228B22\", :stackId \"b\"}\n                          :tv    {:include true, :fill \"#ADD8E6\", :stackId \"a\"}\n                          :amt   {:include true, :fill \"#800000\", :stackId \"a\"}})\n\n\n(defn- compute-data-config [data]\n  (merge {:brush false}\n    (->> (get-in data [:metadata :fields])\n      (filter (fn [[k v]] (= :number v)))\n      keys\n      (map-indexed (fn [idx a]\n                     {a {:include true\n                         :stroke  (color/get-color idx)\n                         :fill    (color/get-color idx)\n                         :stackId \"\"}}))\n      (into {}))))\n\n\n(defn fn-make-config [{:keys [data config-data container-id] :as params}]\n  ;(log/info \"fn-make-config\" config-data)\n  (re-frame/reg-sub\n    (first config-data)\n    :<- data\n    (fn [d _]\n      (doall\n        ; TODO: need a way to have :topic.config passed in somehow...\n        (l/update-local-path-values container-id [:blackboard :topic.config] (compute-data-config d))))))\n\n\n(re-frame/dispatch-sync [:register-meta {:simple-multi-chart-2/fn-make-config {:function fn-make-config\n                                                                               :ports {:data :port/sink :config-data :port/source-sink}}}])\n\n\n(def ui-definition\n  {:components  {:ui/bar-chart   {:type :ui/component :name :rechart/bar}\n                 :ui/line-chart  {:type :ui/component :name :rechart/line}\n                 :topic/data     {:type :source/local :name :topic/data :default sample-data}\n                 :topic/config   {:type :source/local :name :topic/config :default {}}\n                 :fn/make-config {:type  :source/fn :name :simple-multi-chart-2/fn-make-config}}\n   :links       {:topic/data     {:data {:ui/bar-chart   :data\n                                         :ui/line-chart  :data\n                                         :fn/make-config :data}}\n                 :topic/config   {:data {:ui/line-chart :config-data\n                                         :ui/bar-chart  :config-data}}\n                 :fn/make-config {:config-data {:topic/config :data}}}\n\n   :grid-layout [{:i :ui/line-chart :x 0 :y 0 :w 10 :h 11 :static true}\n                 {:i :ui/bar-chart :x 10 :y 0 :w 10 :h 11 :static true}]})\n\n\n(def source-code '(let [def {:components  {:ui/bar-chart   {:type :ui/component :name :rechart/bar}\n                                           :ui/line-chart  {:type :ui/component :name :rechart/line}\n                                           :topic/data     {:type :source/local :name :topic/data :default sample-data}\n                                           :topic/config   {:type :source/local :name :topic/config :default {}}\n                                           :fn/make-config {:type  :source/fn :name fn-make-config\n                                                            :ports {:data :port/sink :config-data :port/source-sink}}}\n                             :links       {:topic/data     {:data {:ui/bar-chart   :data\n                                                                   :ui/line-chart  :data\n                                                                   :fn/make-config :data}}\n                                           :topic/config   {:data {:ui/line-chart :config-data\n                                                                   :ui/bar-chart  :config-data}}\n                                           :fn/make-config {:config-data {:topic/config :data}}}\n\n                             :grid-layout [{:i :ui/line-chart :x 0 :y 0 :w 7 :h 11 :static true}\n                                           {:i :ui/bar-chart :x 7 :y 0 :w 7 :h 11 :static true}]}]\n                    [grid-widget/component\n                     :data def\n                     :component-id (h/path->keyword container-id \"widget\")]))\n\n"]}