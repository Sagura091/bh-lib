{"version":3,"sources":["demo/src/catalog/atom/example/misc/bh/bh_table.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","js/demo","js/demo.src","js/demo.src.catalog","js/demo.src.catalog.atom","js/demo.src.catalog.atom.example","js/demo.src.catalog.atom.example.misc","js/demo.src.catalog.atom.example.misc.bh","js/demo.src.catalog.atom.example.misc.bh.bh-table","js/demo.src.catalog.atom.example.misc.bh.bh-table.data","demo.src.catalog.atom.example.misc.bh.bh-table/data","reagent.core.atom","bh-ui.atom.bhui.table/sample-data","demo.src.catalog.atom.example.misc.bh.bh-table/data-tools","re-com.core/h-box","js/goog.DEBUG","re-com.core/button","cljs.core/reset!","bh-ui.atom.bhui.table/random-data","cljs.core.swap_BANG_","cljs.core/assoc-in","cljs.core/conj","cljs.core.into","cljs.core/deref","cljs.core.drop_last","cljs.core.map","x","cljs.core.assoc","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","demo.src.catalog.atom.example.misc.bh.bh-table/data-update-example","p__59499","map__59504","cljs.core/--destructure-map","cljs.core.get","seq59495","self__4852__auto__","cljs.core/seq","data","container-id","component-id","params","d","bh-ui.utils.helpers/resolve-value","re-com.core/v-box","bh-ui.atom.bhui.table/table","demo.src.catalog.atom.example.misc.bh.bh-table/example","G__59508","G__59509","G__59510","G__59511","woolybear.ad.utils/demo","woolybear.ad.layout/centered"],"sourcesContent":["(ns demo.src.catalog.atom.example.misc.bh.bh-table\n  (:require [bh-ui.atom.bhui.table :as table]\n            [bh-ui.utils :as ui-utils]\n            [bh-ui.utils.helpers :as h]\n            [reagent.core :as r]\n            [re-com.core :as rc]\n            [taoensso.timbre :as log]\n            [woolybear.ad.utils :as acu]\n            [woolybear.ad.layout :as layout]))\n\n\n(log/info \"demo.src.catalog.atom.example.misc.bh-table\")\n\n\n(defonce data (r/atom table/sample-data))\n\n\n(defn- data-tools []\n  [rc/h-box :src (rc/at)\n   :gap \"10px\"\n   :style {:border     \"1px solid\" :border-radius \"3px\"\n           :box-shadow \"5px 5px 5px 2px\"\n           :margin     \"5px\" :padding \"5px\"}\n   :children [[:label.h5 \"Input Data:\"]\n              [rc/button :on-click #(reset! data []) :label \"Empty\"]\n              [rc/button :on-click #(reset! data table/sample-data) :label \"Default\"]\n              [rc/button :on-click #(reset! data (table/random-data)) :label \"Random\"]\n              [rc/button :on-click #(swap! data assoc-in [0 :uv] 10000) :label \"A -> 10,000\"]\n              [rc/button :on-click #(swap! data conj {:name \"Page Q\" :uv 1100\n                                                      :pv   1100 :tv 1100 :amt 1100})\n               :label \"Add 'Q'\"]\n              [rc/button :on-click #(reset! data (into [] (drop-last 2 @data)))\n               :label \"Drop Last 2\"]\n              [rc/button :on-click #(reset! data (into []\n                                                   (map (fn [x]\n                                                          (assoc x :new-item 1750))\n                                                     @data)))\n               :label \"Add :new-item\"]]])\n\n\n(defn- data-update-example [& {:keys [data container-id component-id] :as params}]\n  ;(log/info \"data-update-example (params)\" params)\n\n  (let [d (h/resolve-value data)]\n    (fn []\n      [rc/v-box :src (rc/at)\n       :class \"data-update-example\"\n       :gap \"10px\"\n       :width \"100%\"\n       :height \"100%\"\n       :children [[:div.chart-part {:style {:width \"100%\" :height \"90%\"}}\n                   [table/table :data d]]\n                  [:div.data-tools-part {:style {:width \"100%\"}}\n                   [data-tools]]]])))\n\n\n(defn example []\n  (let [component-id \"table-demo\"]\n    (acu/demo \"Basic Table\"\n      \"Table using HTML tags. data comes from a ratom\n\n> No meta-data. Feel free to use the controls at the bottom to change the data and see how the Table responds.\"\n      [layout/centered {:extra-classes :width-50}\n       [data-update-example\n        :data data]]\n\n      '[table/table :data table/sample-data])))\n\n\n\n(comment\n  @data\n\n  ; add \"Q\"\n  (swap! data conj {:name \"Page Q\" :uv 1100\n                    :pv   1100 :tv 1100 :amt 1100})\n\n  ; drop past 2\n  (reset! data (into [] (drop-last 2 @data)))\n  (swap! data (conj @data\n                {:name \"Page Q\" :uv 1100\n                 :pv   1100 :tv 1100 :amt 1100}))\n\n  ; :new-item\n  (into []\n    (map (fn [x]\n           (assoc x :new-item 1750))\n      @data))\n\n  ())"]}