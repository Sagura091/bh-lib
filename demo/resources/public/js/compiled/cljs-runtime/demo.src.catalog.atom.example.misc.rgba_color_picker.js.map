{"version":3,"sources":["demo/src/catalog/atom/example/misc/rgba_color_picker.cljs"],"mappings":";AAYA,AAAAA,0DAAAC,mCAAA,qDAAA,uDAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,UAAA;AAGA,AAAKC,8DAAO,gDAAA,2CAAA,+CAAA,MAAA,+CAAA,MAAA,+CAAA,KAAA,gDAAA,zSAACC;AAGb,kEAAA,iFAAAC,nJAAOI,4IAAYC;AAAnB,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;YAAAA,RAAuDS;QAAvD,AAAAP,4CAAAF,eAAA,/DAA2BK;QAA3B,AAAAH,4CAAAF,eAAA,/DAAiCM;QAAjC,AAAAJ,4CAAAF,eAAA,/DAAuCO;QAAvC,AAAAL,4CAAAF,eAAA,/DAA6CQ;AAA7C,AACE,wFAAA,mGAAA,iDAAA,iDAAA,tRAACE,0DAAMN,OAAOO,+DAASN,mGAAKC,iDAAKC,kDAAKC;;AAGxC,oEAAA,pEAAOI,gJAAcR;AAArB,AAAA,4GAAA,ySAAA,iDAAA,MAAA,6DAAA,mFAAA,2IAAA,+CAAA,IAAA,MAAA,YAAA,2IAAA,+CAAA,IAAA,MAAA,YAAA,2IAAA,+CAAA,IAAA,cAAA,2IAAA,gDAAA,IAAA,IAAA,aAAA,qGAAA,ySAAA,iDAAA,MAAA,6DAAA,mFAAA,sGAAA,ySAAA,uDAAA,SAAA,uDAAA,2CAAA,kKAAA,kIAAA,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,uDAAA,QAAA,iEAAA,yDAAA,yDAAA,qDAAA,2DAAA,MAAA,qIAAA,wIAAA,hnHACGS,sEAAc,EAAA,GAAAC,cAAA,KAAA,2CAAA,sDAAA,4DAAA,oDAAA,sSAEFC,iDAAmBX,+JACnBW,iDAAmBX,+JACnBW,iDAAmBX,2JACnBW,iDAAmBX,+JACnBY,sEAAc,EAAA,GAAAF,cAAA,KAAA,2CAAA,sDAAA,4DAAA,oDAAA,sSAEFG,uEAAe,EAAA,GAAAH,cAAA,KAAA,2CAAA,sDAAA,4DAAA,oDAAA,0PAEW,6DAAA,AAAAI,7DAACC,6EAAiBf,gEAClB,kCAAA,AAAAc,lCAACE,kDAAuBhB,guBAMvB,gCAAA,AAAAc,hCAACG,gDAAkBjB,gEACnB,wCAAA,AAAAc,xCAACI,wDAA6BlB;;AAIpF,uEAAA,vEAAOoB,sJAAiBpB;AAAxB,AAAA,0FAAA,oGAAA,2CAAA,uDAAA,AAAAc,wBAAA,+DAAA,WAAAK,zPACME,uKAA6BrB;AADnC,AAEmC,OAACD,gEAAWC,OAAO,mDAAAmB,nDAACG;;;AAGvD,+DAAA,/DAAMC;AAAN,AACE,IAAAC,WAAA;IAAAC,WAAA;IAAAC,WAAA,gHAAA,2CAAA,uEAAA,oEAAA,qGAAA,ySAAA,iDAAA,OAAA,6DAAA,mFAAA,yNAAA,lgCAYGG,sSACCjB,sEAAc,EAAA,GAAAF,cAAA,KAAA,2CAAA,sDAAA,4DAAA,oDAAA,uSAEFF,kEAAaf,uJACb2B,qEAAgB3B;IAhBhCkC,WAAA,AAAA;AAAA,AAAA,sHAAAH,SAAAC,SAAAC,SAAAC,8CAAAH,SAAAC,SAAAC,SAAAC,lNAACC,wDAAAA,6FAAAA","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","demo.src.catalog.atom.example.misc.rgba-color-picker/config","reagent.core.atom","p__59418","map__59419","cljs.core/--destructure-map","cljs.core.get","demo.src.catalog.atom.example.misc.rgba-color-picker/set-colors","config","r","g","b","a","color","cljs.core.swap_BANG_","cljs.core/assoc","demo.src.catalog.atom.example.misc.rgba-color-picker/config-panel","re-com.core/v-box","js/goog.DEBUG","demo.src.catalog.atom.example.utils/value-slider","re-com.core/h-box","re-com.core/button","cljs.core/deref","bh_ui.utils.color.rgba__GT_hex","bh-ui.utils.color/best-text-color","bh-ui.utils.color/hash->rgba","bh-ui.utils.color/best-text-color-alpha","p1__59423#","demo.src.catalog.atom.example.misc.rgba-color-picker/component-panel","js/shadow.js.shim.module$react_colorful.RgbaColorPicker","cljs.core.js__GT_clj","demo.src.catalog.atom.example.misc.rgba-color-picker/example","G__59427","G__59428","G__59429","G__59430","woolybear.ad.utils/demo","woolybear.ad.layout/centered"],"sourcesContent":["(ns demo.src.catalog.atom.example.misc.rgba-color-picker\n  (:require [bh-ui.utils.color :as color]\n            [demo.src.catalog.atom.example.utils :as utils]\n            [re-com.core :as rc]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]\n            [woolybear.ad.utils :as acu]\n            [woolybear.ad.layout :as layout]\n\n            [\"react-colorful\" :refer [RgbaColorPicker]]))\n\n\n(log/info \"demo.src.catalog.atom.example.misc.rgba-color-picker\")\n\n\n(def config (r/atom {:r 200 :g 150 :b 35 :a 0.5}))\n\n\n(defn- set-colors [config {r \"r\" g \"g\" b \"b\" a \"a\" :as color}]\n  (swap! config assoc :r r :g g :b b :a a))\n\n\n(defn- config-panel [config]\n  [rc/v-box :src (rc/at)\n   :gap \"5px\"\n   :children [[utils/value-slider config :r 0 255 1]\n              [utils/value-slider config :g 0 255 1]\n              [utils/value-slider config :b 0 255]\n              [utils/value-slider config :a 0 1 0.01]\n              [rc/h-box :src (rc/at)\n               :gap \"5px\"\n               :children [[rc/button :src (rc/at)\n                           :label \"Button\"\n                           :style {:background-color (color/rgba->hex @config)\n                                   :color            (color/best-text-color @config)}]\n                          [:div\n                           {:style {:width            \"100px\"\n                                    :text-align       :center\n                                    :margin           :auto\n                                    :padding          \"5px\"\n                                    :background-color (color/hash->rgba @config)\n                                    :color            (color/best-text-color-alpha @config)}}\n                           \"div w/alpha\"]]]]])\n\n\n(defn- component-panel [config]\n  [:> RgbaColorPicker {:color     @config\n                       :on-change #(set-colors config (js->clj %))}])\n\n\n(defn example []\n  (acu/demo \"RGBA Color Picker\"\n    \"Use the [react-colorful](https://github.com/omgovich/react-colorful) component to provide simple, yet powerful color picker control\n\nThis example also includes use of a support function\n`bh-ui.utils/best-text-color-alpha` to determine the best text color to place 'over' the given\ncolor choice. You can see this in the example `Button` shown under the text-field that shows the\nactual hex-encoded string for the chosen color.\n\n\n> Note: `buttons` do _NOT_ support alpha-channel colors, but `divs` do, so you may see\n> a difference in the color choices between the two components.\n    \"\n    [layout/centered {:extra-classes :width-50}\n     [rc/h-box :src (rc/at)\n      :gap \"10px\"\n      :children [[config-panel config]\n                 [component-panel config]]]]\n    '(let [color {:r 200 :g 150 :b 35 :a 0.5}]\n       [:> RgbaColorPicker {:color @color :on-change #(set-colors config (js->clj %))}])))\n"]}