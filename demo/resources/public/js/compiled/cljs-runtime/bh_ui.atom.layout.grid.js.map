{"version":3,"sources":["bh_ui/atom/layout/grid.cljs"],"mappings":";AAKA,AAAAA,0DAAAC,mCAAA,qDAAA,yBAAA,KAAA,EAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,YAAA;AAGA,AAAA;;;;;;;;;;;;;;;;;;;;;;8BAAA,sCAAAC,pEAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,iEAAAF;;;AAAA,AAAA,CAAA,mEAAA,WAAAG,9EAAMD;AAAN,AAAA,IAAAE,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;WAAAA,PA0BYmB;sBA1BZ,AAAAjB,4CAAAF,eAAA,7EAuB6BgB;gBAvB7B,AAAAd,4CAAAF,eAAA,vEAsBwBa;eAtBxB,AAAAX,4CAAAF,eAAA,tEAqBgCS;eArBhC,AAAAP,4CAAAF,eAAA,tEAqBgBO;sBArBhB,AAAAL,4CAAAF,eAAA,7EAuBae;cAvBb,AAAAb,4CAAAF,eAAA,rEAqByCU;kBArBzC,AAAAR,4CAAAF,eAAA,zEAsBkCc;aAtBlC,AAAAZ,4CAAAF,eAAA,pEAqByBQ;YArBzB,AAAAN,4CAAAF,eAAA,nEAsBkBY;kBAtBlB,AAAAV,4CAAAF,eAAA,zEAwBaiB;kBAxBb,AAAAf,4CAAAF,eAAA,zEAwByBkB;WAxBzB,AAAAhB,4CAAAF,eAAA,lEAsBaW;SAtBb,AAAAT,4CAAAF,eAAA,hEAqBaM;AArBb,AA8BE,oDAAA,mFAAA,uFAAA,wCAAA,kEAAA,2EAAA,0DAAA,wEAAA,uDAAA,yEAAA,mEAAA,mEAAA,sDAAA,kDAAA,4EAAA,x8BAACc,+KAASC,01BAW6B,iBAAAC,mBAAIR;AAAJ,AAAA,oBAAAQ;AAAAA;;AAAA;;KAFA,iBAAAA,mBAAIP;AAAJ,AAAA,oBAAAO;AAAAA;;AAAA;;KARAd,OAKA,iBAAAc,mBAAIZ;AAAJ,AAAA,oBAAAY;AAAAA;;AAAA;AAAA,AAAA;;;KAHA,iBAAAA,mBAAIV;AAAJ,AAAA,oBAAAU;AAAAA;;AAAA;;KAEA,iBAAAA,mBAAIb;AAAJ,AAAA,oBAAAa;AAAAA;;AAAA;AAAA,AAAA;;;KAEA,iBAAAA,mBAAIL;AAAJ,AAAA,oBAAAK;AAAAA;;AAAA;;KACA,iBAAAA,mBAAIJ;AAAJ,AAAA,oBAAAI;AAAAA;;AAAA;;KANA,iBAAAA,mBAAIX;AAAJ,AAAA,oBAAAW;AAAAA;;AAAA;;KAFAhB,GAUA,iBAAAgB,mBAAIN;AAAJ,AAAA,oBAAAM;AAAAA;;AAAA;;KANA,iBAAAA,mBAAIT;AAAJ,AAAA,oBAAAS;AAAAA;;AAAA;;eAQrCf;;;AA1CJ,CAAA,sDAAA,tDAAMT;;AAAN;AAAA,CAAA,gDAAA,WAAAK,3DAAML;AAAN,AAAA,IAAAM,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","bh-ui.atom.layout.grid/grid","p__59334","map__59335","cljs.core/--destructure-map","cljs.core.get","seq59333","self__4852__auto__","cljs.core/seq","id","children","layout","layoutFn","widthFn","cols","width","rowHeight","compactType","draggableHandle","draggableCancel","isDraggable","isResizable","args","cljs.core.into","js/shadow.js.shim.module$react_grid_layout","or__4253__auto__"],"sourcesContent":["(ns bh-ui.atom.layout.grid\n  (:require [\"react-grid-layout\" :as GridLayout]\n            [taoensso.timbre :as log]))\n\n\n(log/info \"bh-ui.atom.layout.grid\")\n\n\n(defn grid\n  \"use [react-grid-layout](https://github.com/react-grid-layout/react-grid-layout) to organize a bunch of children in a draggable grid\n\n  ---\n\n  Parameters are keyword identified as follows:\n\n  | keyword     | type     | description            |\n  |:------------|:--------:|:-----------------------|\n  | `:id`       | string   | uniquely identify this particular grid, in case you have multiples |\n  | `:children` | vector   | vector of hiccup that define each child to be placed into the grid |\n  | `:layout`   | atom     | atom of layout 'records' that track where each child is drawn in the grid |\n  | `:layoutFn` | function | function to update the layout atom when children are resized or move |\n  | `:cols`     | atom     | atom wrapping an integer, which specifies the number of 'grid columns' |\n\n> See also\n>\n> [react-grid-layout](https://github.com/react-grid-layout/react-grid-layout)\n>\n> [re-com](https://github.com/Day8/re-com)\n  \"\n  [& {:keys [id children layout layoutFn widthFn\n             cols width rowHeight compactType\n             draggableHandle draggableCancel\n             isDraggable isResizable]\n\n      :as   args}]\n\n  ;(log/info \"grid\" id \"//\" children \"//\" layout \"//\" layoutFn)\n\n  (into [:> GridLayout {:id              id\n                        :layout          layout\n                        :cols            (or cols 12)\n                        :width           (or width 600)\n                        :rowHeight       (or rowHeight 25)\n                        :onLayoutChange  (or layoutFn #())\n                        :onWidthChange   (or widthFn #())\n                        :isDraggable     (or isDraggable true)\n                        :isResizable     (or isResizable true)\n                        :draggableHandle (or draggableHandle \".grid-toolbar\")\n                        :draggableCancel (or draggableCancel \".grid-content\")\n                        :compactType     (or compactType :vertical)}]\n    children))\n\n\n\n"]}