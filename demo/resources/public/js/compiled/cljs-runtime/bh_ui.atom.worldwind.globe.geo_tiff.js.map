{"version":3,"sources":["bh_ui/atom/worldwind/globe/geo_tiff.cljs"],"mappings":";AAMA,AAAAA,0DAAAC,mCAAA,qDAAA,sCAAA,KAAA,EAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,WAAA;AAGA,AAAKC,yDAAmB,6CAAA,7CAACC;AACzB,AAAKC,qDAAe,6CAAA,7CAACD;AAGrB,AAAAE,wFAAA,sEAAA,WAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAqDG;UAArD,AAAAD,4CAAAF,eAAA,jEAAwDI;QAAxD,AAAAF,4CAAAF,eAAA,/DAA4DK;AAA5D,AAEE,IAAMC,QAAM,KAAAC;AAAZ,AACE,CAAM,AAAeD,oBAAOH;;AAC5B,qBAAA,pBAAM,AAAeG;;AAErB,AAAkB,AAAiBE,gEAAWJ,IAC5C,WAAKK,cAAcC;AAAnB,AACE,AAAAlB,0DAAAC,mCAAA,qDAAA,sCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,uBAAiC,AAAYe;GAA7C,OAAA,KAAA,UAAA;;AACA,AAACE,sBAAOhB,uDAAmBc;;AAC3B,IAAMG,cACA,KACE,AAAgBJ,+CAChB,AAAA,AAAIC,4BAEJ,KAAK,AAAeD,8CAAW,AAAWC;AALlD,AAME,AAAAjB,0DAAAC,mCAAA,qDAAA,sCAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA,yBAAmCkB;GAAnC,OAAA,KAAA,SAAA;;AACA,AAAgBN,oBAAMM;;AACtB,4BAAA,pBAAM,AAAeN;;;AAhB7B,kDAAA,qDAAA,8DAAA,jEAkBOH,2DAAUG,qDAAS,iBAAAO,mBAAIR;AAAJ,AAAA,oBAAAQ;AAAAA;;AAAA;;;;AAM5B","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","bh-ui.atom.worldwind.globe.geo-tiff/last-geoTiffReader","cljs.core.atom","bh-ui.atom.worldwind.globe.geo-tiff/last-xhrStatus","bh-ui.atom.worldwind.globe.shape/make-shape","p__59583","map__59584","cljs.core/--destructure-map","cljs.core.get","id","url","z","layer","js/shadow.js.shim.module$worldwindjs.RenderableLayer","js/shadow.js.shim.module$worldwindjs","geoTiffReader","xhrStatus","cljs.core/reset!","surfaceTiff","or__4253__auto__"],"sourcesContent":["(ns bh-ui.atom.worldwind.globe.geo-tiff\n  (:require [\"worldwindjs\" :as WorldWind]\n            [bh-ui.atom.worldwind.globe.shape :as shape]\n            [bh-ui.atom.worldwind.globe.sector :as sector]\n            [taoensso.timbre :as log]))\n\n(log/info \"bh-ui.atom.worldwind.globe.geo-tiff\")\n\n\n(def last-geoTiffReader (atom nil))\n(def last-xhrStatus (atom nil))\n\n\n(defmethod shape/make-shape :shape/geo-tiff [{:keys [id url z]}]\n  ;(log/info \"make-shape :shape/geo-tiff\" id url)\n  (let [layer (WorldWind/RenderableLayer.)]\n    (set! (.-displayName layer) id)\n    (set! (.-showSpinner layer) true)\n\n    (.retrieveFromUrl (.-GeoTiffReader WorldWind) url\n      (fn [geoTiffReader xhrStatus]\n        (log/info \"make-shape call-back\" (.isGeoTiff geoTiffReader))\n        (reset! last-geoTiffReader geoTiffReader)\n        (let [surfaceTiff\n              (new\n                (.-SurfaceImage WorldWind)\n                (.. geoTiffReader -metadata -bbox)\n                ;(sector/sector [22.074653 33.344622 -95.433292 -82.723547]) ;\n                (new (.-ImageSource WorldWind) (.getImage geoTiffReader)))]\n          (log/info \"make-shape surfaceTiff\" surfaceTiff)\n          (.addRenderable layer surfaceTiff)\n          (set! (.-showSpinner layer) false))))\n\n    {:id id :layer layer :z (or z 10)}))\n\n\n\n\n\n(comment\n  (def url \"https://cdn.star.nesdis.noaa.gov/GOES18/ABI/FD/GEOCOLOR/GOES18-ABI-FD-GEOCOLOR-10848x10848.tif\")\n  (def url \"https://worldwind.arc.nasa.gov/web/examples/data/black_sea_rgb.tif\")\n  (def url \"data/20222351640_GOES18-ABI-FD-GEOCOLOR-10848x10848.jpg\")\n  (def url \"data/20222351640_GOES18-ABI-FD-GEOCOLOR-10848x10848.tif\")\n\n  (def url \"data/a.tif\")\n\n\n  (shape/make-shape {:shape :shape/geo-tiff\n                     :id    \"geo-tiff\"\n                     :url   url})\n\n\n  (.. @last-geoTiffReader -metadata -bbox)\n  (.getImage @last-geoTiffReader)\n  (.-createImage @last-geoTiffReader)\n\n  (.retrieveFromUrl (.-GeoTiffReader WorldWind) url\n    (fn [geoTiffReader xhrStatus]\n      (reset! last-xhrStatus xhrStatus)\n      (reset! last-geoTiffReader geoTiffReader)))\n\n  (WorldWind/SurfaceImage. (.. @last-geoTiffReader -metadata -bbox)\n    (new (.-ImageSource WorldWind) (.getImage @last-geoTiffReader)))\n\n\n  (new (.-ImageSource WorldWind) (.getImage @last-geoTiffReader))\n\n  (WorldWind/SurfaceImage. (.. @last-geoTiffReader -metadata -bbox)\n    \"data/a.tif\")\n\n\n  (do\n    (def meta-data (.. @last-geoTiffReader -metadata))\n    (def bbox (.. @last-geoTiffReader -metadata -bbox))\n\n    (def tiePointValues (.-modelTiepoint meta-data))\n    (def modelPixelScaleValues (.-modelPixelScale meta-data))\n    (def modelTransformationValues (.-modelTransformation meta-data))\n\n    (def tiePointCount (if tiePointValues (.-length tiePointValues) 0))\n    (def modelPixelScaleCount (if modelPixelScaleValues (.-length modelPixelScaleValues) 0))\n    (def modelTransformationCount (if modelTransformationValues\n                                    (.-length modelTransformationValues) 0)))\n\n  (.-imageLength meta-data)\n  (.-imageWidth meta-data)\n  (.-imageDescription meta-data)\n  (.-metaData meta-data)\n\n\n\n  (.-minLatitude bbox)\n  (.-maxLatitude bbox)\n  (.-minLongitude bbox)\n  (.-maxLongitude bbox)\n  (.deltaLatitude bbox)\n  (.deltaLongitude bbox)\n\n  ())\n\n"]}