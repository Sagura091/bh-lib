{"version":3,"sources":["demo/src/catalog/atom/example/chart/colored_pie_chart.cljs"],"mappings":";AAcA,mEAAA,nEAAOA;AAAP,AAAA,8JAAA,qEAAA,gHAAA,sDAAA,wCAAA,oEAAA,+ZAAA,kHAAA,mHAAA,kHAAA,kJAAA,4GAAA,+GAAA,7/CACGC,43BASaC,mHACAC,kHACAC,gHACDC,gJACDC,6GACCC,qHACEC;;AAGjB,uEAAA,vEAAOC;AAAP,AAAA,kKAAA,qEAAA,uHAAA,sDAAA,4CAAA,oEAAA,ybAAA,kHAAA,mHAAA,kHAAA,4GAAA,+GAAA,p5CACGC,q6BAQaR,mHACAC,kHACAC,8GACFE,6GACCC,qHACEC;;AAGjB,iEAAA,jEAAMG;AAAN,AACE,mBAAA,fAAMC;AAAN,AAAA,4JAAA,kFAAA,sDAAA,+CAAA,oEAAA,yVAAA,mEAAA,gGAAA,kEAAA,sFAAA,qHAAA,mHAAA,gJAAA,kHAAA,4GAAA,+GAAA,rpDACGC,sIACcD,qqBAOAA,2OACAV,mHACDC,gHACDW,kJACCV,8GACFE,6GACCC,qHACEC;;AAGnB,qEAAA,rEAAOO;AAAP,AAAA,gKAAA,qEAAA,kHAAA,sDAAA,iDAAA,oEAAA,qiBAAA,kHAAA,8JAAA,kHAAA,4GAAA,17CACGC,+gCAUad,oHACCe,4JACDb,8GACFE,iIACUY;;AAGxB,yEAAA,zEAAOC;AAAP,AAAA,oKAAA,qEAAA,0HAAA,sDAAA,qDAAA,oEAAA,kdAAA,kHAAA,kHAAA,4GAAA,ztCACGC,48BASalB,kHACAE,8GACFE,iIACUY;;AAGxB,mEAAA,nEAAOG;AAAP,AACE,mBAAA,fAAMT;AAAN,AAAA,8JAAA,kFAAA,sDAAA,wDAAA,oEAAA,gWAAA,kHAAA,4JAAA,kHAAA,4GAAA,mEAAA,gGAAA,kEAAA,2EAAA,n8CACGU,wIACcV,kmBAMDV,oHACCqB,0JACDnB,8GACFE,mMACGM,8OACOM;;AAG1B,iEAAA,jEAAMM;AAAN,AAAA,+IAAA,2CAAA,aAAA,4JAAA,cAAA,gKAAA,WAAA,0JAAA,eAAA,8JAAA,gBAAA,kKAAA,aAAA,x8BACGC,gMAA2BzB,0KACES,2KACHE,yKACII,8KACCI,+KACHE","names":["demo.src.catalog.atom.example.chart.colored-pie-chart/data-ratom","demo.src.catalog.atom.example.chart.alt.data-ratom-example/example","bh-ui.atom.chart.colored-pie-chart/sample-data","bh-ui.atom.chart.colored-pie-chart/random-data","bh-ui.atom.chart.colored-pie-chart/source-code","demo.src.catalog.atom.example.chart.alt.data-tools/meta-tabular-data-ratom-tools","bh-ui.atom.chart.colored-pie-chart/component","bh-ui.atom.chart.utils/meta-tabular-data-panel","bh-ui.atom.chart.colored-pie-chart/config-panel","demo.src.catalog.atom.example.chart.colored-pie-chart/data-structure","demo.src.catalog.atom.example.chart.alt.data-structure-example/example","demo.src.catalog.atom.example.chart.colored-pie-chart/data-sub","container-id","demo.src.catalog.atom.example.chart.alt.data-sub-example/example","demo.src.catalog.atom.example.chart.alt.data-tools/meta-tabular-data-sub-tools","demo.src.catalog.atom.example.chart.colored-pie-chart/config-ratom","demo.src.catalog.atom.example.chart.alt.config-ratom-example/example","demo.src.catalog.atom.example.chart.alt.config-tools/meta-tabular-config-row-ratom-tools","bh-ui.atom.chart.colored-pie-chart/sample-config-data","demo.src.catalog.atom.example.chart.colored-pie-chart/config-structure","demo.src.catalog.atom.example.chart.alt.config-structure-example/example","demo.src.catalog.atom.example.chart.colored-pie-chart/config-sub","demo.src.catalog.atom.example.chart.alt.config-sub-example/example","demo.src.catalog.atom.example.chart.alt.config-tools/meta-tabular-config-row-sub-tools","demo.src.catalog.atom.example.chart.colored-pie-chart/examples","demo.src.catalog.atom.example.multi-example/examples"],"sourcesContent":["(ns demo.src.catalog.atom.example.chart.colored-pie-chart\n  (:require [bh-ui.atom.chart.colored-pie-chart :as chart]\n            [bh-ui.atom.chart.utils :as chart-utils]\n            [demo.src.catalog.atom.example.chart.alt.config-ratom-example :as config-ratom-example]\n            [demo.src.catalog.atom.example.chart.alt.config-structure-example :as config-structure-example]\n            [demo.src.catalog.atom.example.chart.alt.config-sub-example :as config-sub-example]\n            [demo.src.catalog.atom.example.chart.alt.data-ratom-example :as data-ratom-example]\n            [demo.src.catalog.atom.example.chart.alt.data-structure-example :as data-structure-example]\n            [demo.src.catalog.atom.example.chart.alt.data-sub-example :as data-sub-example]\n            [demo.src.catalog.atom.example.chart.alt.data-tools :as data-tools]\n            [demo.src.catalog.atom.example.chart.alt.config-tools :as config-tools]\n            [demo.src.catalog.atom.example.multi-example :as me]))\n\n\n(defn- data-ratom []\n  [data-ratom-example/example\n   :container-id :colored-pie-chart-data-ratom-demo\n   :title \"Colored Pie Chart (Live Data - ratom)\"\n   :description \"A Pie Chart built using [Recharts](https://recharts.org/en-US/api/PieChart) with colored Cells. This example shows how\n  charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the data changes.\n\n  > In _this_ case, we are using a ratom for the data.\n  >\n  > You can use the buttons below to change some of the data and see how the chart responds.\"\n   :sample-data chart/sample-data\n   :random-data chart/random-data\n   :source-code chart/source-code\n   :data-tools data-tools/meta-tabular-data-ratom-tools\n   :component chart/component\n   :data-panel chart-utils/meta-tabular-data-panel\n   :config-panel chart/config-panel])\n\n\n(defn- data-structure []\n  [data-structure-example/example\n   :container-id :colored-pie-chart-data-structure-demo\n   :title \"Colored Pie Chart (Live Data - structure)\"\n   :description \"A Pie Chart built using [Recharts](https://recharts.org/en-US/api/PieChart) with colored Cells. This example shows how\n  charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the data changes.\n\n  > In _this_ case, we are using a plain data structure for the data, so there is no way to update it (it lives\n  > only inside the chart, with no way to get at it from outside).\"\n   :sample-data chart/sample-data\n   :random-data chart/random-data\n   :source-code chart/source-code\n   :component chart/component\n   :data-panel chart-utils/meta-tabular-data-panel\n   :config-panel chart/config-panel])\n\n\n(defn data-sub []\n  (let [container-id :colored-pie-chart-data-sub-demo]\n    [data-sub-example/example\n     :container-id container-id\n     :title \"Colored Pie Chart (Live Data - subscription)\"\n     :description \"A Pie Chart built using [Recharts](https://recharts.org/en-US/api/PieChart) with colored Cells. This example shows how\n     charts can take [subscriptions](https://day8.github.io/re-frame/subscriptions/) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a subscription to handle the data for the chart.\n\"\n     :sample-data [container-id :blackboard :topic.sample-data]\n     :default-data chart/sample-data\n     :random-data chart/random-data\n     :data-tools data-tools/meta-tabular-data-sub-tools\n     :source-code chart/source-code\n     :component chart/component\n     :data-panel chart-utils/meta-tabular-data-panel\n     :config-panel chart/config-panel]))\n\n\n(defn- config-ratom []\n  [config-ratom-example/example\n   :container-id :colored-pie-chart-config-ratom-demo\n   :title \"Colored Pie Chart (Live Configuration - ratom)\"\n   :description \"A Pie Chart built using [Recharts](https://recharts.org/en-US/api/PieChart) with colored Cells. This example shows how\n     charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a ratom to hold the configuration for the chart.\n>\n> You can use the buttons in the bottom-most panel to change some of the chart configuration options and see\n> how that affects the data (shown in the gray panel) and how the chart responds.\"\n   :sample-data chart/sample-data\n   :config-tools config-tools/meta-tabular-config-row-ratom-tools\n   :source-code chart/source-code\n   :component chart/component\n   :default-config-data chart/sample-config-data])\n\n\n(defn- config-structure []\n  [config-structure-example/example\n   :container-id :colored-pie-chart-config-structure-demo\n   :title \"Colored Pie Chart (Live Configuration - structure)\"\n   :description \"A Pie Chart built using [Recharts](https://recharts.org/en-US/api/PieChart) with colored Cells. This example shows how\n     charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a plain data structure to hold the configuration for the chart.\n>\n> You can see the configuration data in the gray panel and how it how that affects the chart.\"\n   :sample-data chart/sample-data\n   :source-code chart/source-code\n   :component chart/component\n   :default-config-data chart/sample-config-data])\n\n\n(defn- config-sub []\n  (let [container-id :colored-pie-chart-config-sub-demo]\n    [config-sub-example/example\n     :container-id container-id\n     :title \"Colored Pie Chart (Live Configuration - subscription)\"\n     :description \"A Pie Chart built using [Recharts](https://recharts.org/en-US/api/PieChart) with colored Cells. This example shows how\n     charts can take [subscriptions](https://day8.github.io/re-frame/subscriptions/) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a subscription to handle the configuration for the chart.\"\n     :sample-data chart/sample-data\n     :config-tools config-tools/meta-tabular-config-row-sub-tools\n     :source-code chart/source-code\n     :component chart/component\n     :config-data [container-id :blackboard :config-data]\n     :default-config-data chart/sample-config-data]))\n\n\n(defn examples []\n  [me/examples {\"data-ratom\" [data-ratom]\n                \"data-struct\"  [data-structure]\n                \"data-sub\"  [data-sub]\n                \"config-ratom\"  [config-ratom]\n                \"config-struct\"  [config-structure]\n                \"config-sub\"  [config-sub]}])\n\n"]}