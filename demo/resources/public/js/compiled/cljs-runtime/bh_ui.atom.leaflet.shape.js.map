{"version":3,"sources":["bh_ui/atom/leaflet/shape.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","js/bh-ui","js/bh-ui.atom","js/bh-ui.atom.leaflet","js/bh-ui.atom.leaflet.shape","js/bh-ui.atom.leaflet.shape.make-shape","method-table__4747__auto__","cljs.core.atom","prefer-table__4748__auto__","method-cache__4749__auto__","cached-hierarchy__4750__auto__","hierarchy__4751__auto__","cljs.core.get","fexpr__59420","cljs.core/MultiFn","cljs.core.symbol","bh-ui.atom.leaflet.shape/make-shape","p__59421","map__59422","cljs.core/--destructure-map","shape","p__59424","map__59425","id","locations","fill-color","outline-color","width","js/shadow.js.shim.module$react_leaflet.Polygon","bh_ui.utils.color.normal__GT_rgba","bh_ui.utils.color.rgba__GT_hex","p__59431","map__59432","js/shadow.js.shim.module$react_leaflet.Polyline","p__59433","map__59434","location","radius","js/shadow.js.shim.module$react_leaflet.Circle","p__59435","map__59436","bounding-box","url","js/shadow.js.shim.module$react_leaflet.ImageOverlay","cljs.core/seq","bh-ui.utils.bounding-box/bounding-box->locations","p__59437","map__59438","label","js/shadow.js.shim.module$react_leaflet.Marker","js/shadow.js.shim.module$react_leaflet.Popup","_"],"sourcesContent":["(ns bh-ui.atom.leaflet.shape\n  (:require [\"react-leaflet\" :refer (Polygon Circle Polyline ImageOverlay Marker Popup)]\n            [bh-ui.utils.color :as c]\n            [bh-ui.utils.bounding-box :as bound]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]))\n\n\n(log/info \"bh-ui.atom.leaflet.shape\")\n\n\n(defmulti make-shape (fn [{:keys [shape]}] shape))\n\n\n; :shape/polygon\n(defmethod make-shape :shape/polygon [{:keys [id locations fill-color outline-color width]}]\n  ;(log/info \"make-shape :shape/polygon\")\n\n  [:> Polygon {:pathOptions {:color (-> outline-color c/normal->rgba c/rgba->hex)\n                             :weight width\n                             :fillColor (-> fill-color c/normal->rgba c/rgba->hex)}\n               :positions locations}])\n\n\n; :shape/polyline\n(defmethod make-shape :shape/polyline [{:keys [id locations outline-color width]}]\n  ;(log/info \"make-shape :shape/polyline\")\n\n  [:> Polyline {:pathOptions {:color (-> outline-color c/normal->rgba c/rgba->hex)\n                              :weight width}\n                :positions locations}])\n\n\n; :shape/circle\n(defmethod make-shape :shape/circle [{:keys [id location radius fill-color outline-color width]}]\n  ;(log/info \"make-shape :shape/circle\")\n\n  [:> Circle {:pathOptions {:color (-> outline-color c/normal->rgba c/rgba->hex)\n                            :fillColor (-> fill-color c/normal->rgba c/rgba->hex)\n                            :weight width}\n              :radius radius\n              :center location}])\n\n\n; :shape/image\n(defmethod make-shape :shape/image [{:keys [id locations bounding-box url]}]\n  ;(log/info \"make-shape :shape/image\")\n\n  [:> ImageOverlay {:bounds (cond\n                              (seq locations) locations\n                              (seq bounding-box ) (bound/bounding-box->locations bounding-box)\n                              :else [:div \":shape/image is missing both :bounding-box AND :locations parameters\"])\n                    :url url}])\n\n\n; :shape/label\n(defmethod make-shape :shape/label [{:keys [id location label]}]\n  ;(log/info \"make-shape :shape/label\")\n\n  [:> Marker {:position location}\n   [:> Popup label]])\n\n\n\n(defmethod make-shape :default [_]\n  [:div])\n\n\n(comment\n  (def outline-color [1 0.5 0.78 1.0])\n\n\n\n  ())"]}