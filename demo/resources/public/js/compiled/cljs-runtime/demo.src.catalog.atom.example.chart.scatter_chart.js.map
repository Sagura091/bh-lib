{"version":3,"sources":["demo/src/catalog/atom/example/chart/scatter_chart.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","demo.src.catalog.atom.example.chart.scatter-chart/column-picker-ratom","config-data","label","path","p1__59006#","headings","cljs.core.into","cljs.core/deref","cljs.core.get_in","buttons","cljs.core.mapv","h","re-com.core/h-box","js/goog.DEBUG","re-com.core/box","re-com.core/horizontal-bar-tabs","bh-ui.atom.chart.utils/btns-style","cljs.core.swap_BANG_","cljs.core/assoc-in","demo.src.catalog.atom.example.chart.scatter-chart/column-picker-sub","cd","bh-ui.utils.helpers/resolve-value","p1__59007#","bh-ui.utils.helpers/handle-change-path","demo.src.catalog.atom.example.chart.scatter-chart/meta-tabular-config-row-ratom-tools","default-config-data","data","component-id","re-com.core/button","cljs.core/reset!","cljs.core/update-in","cljs.core/not","bh-ui.atom.chart.utils/color-config","demo.src.catalog.atom.example.chart.scatter-chart/meta-tabular-config-row-sub-tools","page-a","bh-ui.utils/subscribe-local","page-c","demo.src.catalog.atom.example.chart.scatter-chart/data-ratom","demo.src.catalog.atom.example.chart.alt.data-ratom-example/example","bh-ui.atom.chart.scatter-chart/sample-data","bh-ui.atom.chart.scatter-chart/random-data","bh-ui.atom.chart.scatter-chart/source-code","demo.src.catalog.atom.example.chart.alt.data-tools/meta-tabular-data-ratom-tools","bh-ui.atom.chart.scatter-chart/component","bh-ui.atom.chart.utils/meta-tabular-data-panel","bh-ui.atom.chart.scatter-chart/config-panel","demo.src.catalog.atom.example.chart.scatter-chart/data-structure","demo.src.catalog.atom.example.chart.alt.data-structure-example/example","demo.src.catalog.atom.example.chart.scatter-chart/data-sub","container-id","demo.src.catalog.atom.example.chart.alt.data-sub-example/example","demo.src.catalog.atom.example.chart.alt.data-tools/meta-tabular-data-sub-tools","demo.src.catalog.atom.example.chart.scatter-chart/config-ratom","demo.src.catalog.atom.example.chart.alt.config-ratom-example/example","bh-ui.atom.chart.scatter-chart/sample-config-data","demo.src.catalog.atom.example.chart.scatter-chart/config-structure","demo.src.catalog.atom.example.chart.alt.config-structure-example/example","demo.src.catalog.atom.example.chart.scatter-chart/config-sub","demo.src.catalog.atom.example.chart.alt.config-sub-example/example","demo.src.catalog.atom.example.chart.scatter-chart/examples","demo.src.catalog.atom.example.multi-example/examples"],"sourcesContent":["(ns demo.src.catalog.atom.example.chart.scatter-chart\n  (:require [bh-ui.atom.chart.scatter-chart :as chart]\n            [bh-ui.atom.chart.utils :as chart-utils]\n            [demo.src.catalog.atom.example.chart.alt.data-tools :as data-tools]\n            [demo.src.catalog.atom.example.chart.alt.config-tools :as config-tools]\n            [demo.src.catalog.atom.example.chart.alt.data-ratom-example :as data-ratom-example]\n            [demo.src.catalog.atom.example.chart.alt.data-structure-example :as data-structure-example]\n            [demo.src.catalog.atom.example.chart.alt.data-sub-example :as data-sub-example]\n            [demo.src.catalog.atom.example.chart.alt.config-ratom-example :as config-ratom-example]\n            [demo.src.catalog.atom.example.chart.alt.config-structure-example :as config-structure-example]\n            [demo.src.catalog.atom.example.chart.alt.config-sub-example :as config-sub-example]\n            [bh-ui.utils :as ui-utils]\n            [bh-ui.utils.helpers :as h]\n            [bh-ui.utils :as u]\n            [taoensso.timbre :as log]\n            [re-com.core :as rc]\n            [reagent.core :as r]\n            [demo.src.catalog.atom.example.multi-example :as me]))\n\n\n(log/info \"demo.src.catalog.atom.example.chart.scatter-chart\")\n\n\n(defn- column-picker-ratom [config-data label path]\n  ;(log/info \"column-picker-ratom\" @config-data  \"//\" path)\n  (fn []\n    (let [headings (into #{} (get-in @config-data [:value :keys]))\n          buttons  (mapv (fn [h] {:id h :label h}) headings)]\n      ;(log/info \"column-picker\" headings)\n      [rc/h-box :src (rc/at)\n       :gap \"5px\"\n       :children [[rc/box :src (rc/at) :align :start :child [:code label]]\n                  [rc/horizontal-bar-tabs\n                   :src (rc/at)\n                   :model (get-in @config-data path)\n                   :tabs buttons\n                   :style chart-utils/btns-style\n                   :on-change #(swap! config-data assoc-in path %)]]])))\n\n\n(defn- column-picker-sub [config-data label path]\n  ;(log/info \"column-picker-sub\" config-data  \"//\" path)\n  (let [cd (h/resolve-value config-data)]\n    (fn []\n      (let [headings (into #{} (get-in @cd [:value :keys]))\n            buttons  (mapv (fn [h] {:id h :label h}) headings)]\n        [rc/h-box :src (rc/at)\n         :gap \"5px\"\n         :children [[rc/box :src (rc/at) :align :start :child [:code label]]\n                    [rc/horizontal-bar-tabs\n                     :src (rc/at)\n                     :model (get-in @cd path)\n                     :tabs buttons\n                     :style chart-utils/btns-style\n                     :on-change #(h/handle-change-path config-data path %)]]]))))\n\n\n(defn- meta-tabular-config-row-ratom-tools [config-data default-config-data data component-id]\n  (log/info \"meta-tabular\" component-id)\n  [rc/h-box :src (rc/at)\n   :gap \"10px\"\n   :style {:border     \"1px solid\" :border-radius \"3px\"\n           :box-shadow \"5px 5px 5px 2px\"\n           :margin     \"5px\" :padding \"5px\"}\n   :children [[:label.h5 \"Config:\"]\n              [rc/button :on-click #(reset! config-data default-config-data) :label \"Default\"]\n              [rc/button :on-click #(swap! config-data update-in [:Page-A :include] not) :label \"! Page A\"]\n              [rc/button :on-click #(swap! config-data update-in [:Page-C :include] not) :label \"! Page C\"]\n              [chart-utils/color-config config-data \":Page-D :color\" [:Page-D :color] :above-center]\n              [column-picker-ratom config-data \":x\" [:values :x]]\n              [column-picker-ratom config-data \":y\" [:values :y]]\n              [column-picker-ratom config-data \":z\" [:values :z]]]])\n\n\n(defn- meta-tabular-config-row-sub-tools [config-data default-config-data data component-id]\n  (let [page-a (ui-utils/subscribe-local config-data [:Page-A :include])\n        page-c (ui-utils/subscribe-local config-data [:Page-C :include])]\n\n    (fn []\n      [rc/h-box :src (rc/at)\n       :gap \"10px\"\n       :style {:border     \"1px solid\" :border-radius \"3px\"\n               :box-shadow \"5px 5px 5px 2px\"\n               :margin     \"5px\" :padding \"5px\"}\n       :children [[:label.h5 \"Config:\"]\n                  [rc/button :on-click #(h/handle-change-path config-data [] default-config-data) :label \"Default\"]\n                  [rc/button :on-click #(h/handle-change-path config-data [:Page-A :include] (not @page-a)) :label \"! Page A\"]\n                  [rc/button :on-click #(h/handle-change-path config-data [:Page-C :include] (not @page-c)) :label \"! Page C\"]\n                  [chart-utils/color-config config-data \":Page-D :color\" [:Page-D :color] :above-center]\n                  [column-picker-sub config-data \":x\" [:values :x]]\n                  [column-picker-sub config-data \":y\" [:values :y]]\n                  [column-picker-sub config-data \":z\" [:values :z]]]])))\n\n\n(defn- data-ratom []\n  [data-ratom-example/example\n   :container-id :scatter-chart-data-ratom-demo\n   :title \"Scatter Chart (Live Data - ratom) - IN PROGRESS (not complete)\"\n   :description \"A Scatter Chart built using [Recharts](https://recharts.org/en-US/api/ScatterChart). This example shows how\n  charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the data changes.\n\n  > In _this_ case, we are using a ratom for the data.\n  >\n  > You can use the buttons below to change some of the data and see how the chart responds.\"\n   :sample-data chart/sample-data\n   :random-data chart/random-data\n   :source-code chart/source-code\n   :data-tools data-tools/meta-tabular-data-ratom-tools\n   :source-code chart/source-code\n   :component chart/component\n   :data-panel chart-utils/meta-tabular-data-panel\n   :config-panel chart/config-panel])\n\n\n(defn- data-structure []\n  [data-structure-example/example\n   :container-id :scatter-chart-data-structure-demo\n   :title \"Scatter Chart (Live Data - structure) - IN PROGRESS (not complete)\"\n   :description \"A Scatter Chart built using [Recharts](https://recharts.org/en-US/api/ScatterChart) with colored Cells. This example shows how\n  charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the data changes.\n\n  > In _this_ case, we are using a plain data structure for the data, so there is no way to update it (it lives\n  > only inside the chart, with no way to get at it from outside).\"\n   :sample-data chart/sample-data\n   :random-data chart/random-data\n   :source-code chart/source-code\n   :component chart/component\n   :data-panel chart-utils/meta-tabular-data-panel\n   :config-panel chart/config-panel])\n\n\n(defn data-sub []\n  (let [container-id :scatter-chart-data-sub-demo]\n    [data-sub-example/example\n     :container-id container-id\n     :title \"Scatter Chart (Live Data - subscription) - IN PROGRESS (not complete)\"\n     :description \"A Scatter Chart built using [Recharts](https://recharts.org/en-US/api/ScatterChart) with colored Cells. This example shows how\n     charts can take [subscriptions](https://day8.github.io/re-frame/subscriptions/) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a subscription to handle the data for the chart.\n\"\n     :sample-data [container-id :blackboard :topic.sample-data]\n     :default-data chart/sample-data\n     :random-data chart/random-data\n     :data-tools data-tools/meta-tabular-data-sub-tools\n     :source-code chart/source-code\n     :component chart/component\n     :data-panel chart-utils/meta-tabular-data-panel\n     :config-panel chart/config-panel]))\n\n\n(defn- config-ratom []\n  [config-ratom-example/example\n   :container-id :scatter-chart-config-ratom-demo\n   :title \"Scatter Chart (Live Configuration - ratom) - IN PROGRESS (not complete)\"\n   :description \"A Scatter Chart built using [Recharts](https://recharts.org/en-US/api/ScatterChart) with colored Cells. This example shows how\n     charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a ratom to hold the configuration for the chart.\n>\n> You can use the buttons in the bottom-most panel to change some of the chart configuration options and see\n> how that affects the data (shown in the gray panel) and how the chart responds.\"\n   :sample-data chart/sample-data\n   :config-tools meta-tabular-config-row-ratom-tools\n   :source-code chart/source-code\n   :component chart/component\n   :default-config-data chart/sample-config-data])\n\n\n(defn- config-structure []\n  [config-structure-example/example\n   :container-id :scatter-chart-config-structure-demo\n   :title \"Scatter Chart (Live Configuration - structure) - IN PROGRESS (not complete)\"\n   :description \"A Scatter Chart built using [Recharts](https://recharts.org/en-US/api/ScatterChart) with colored Cells. This example shows how\n     charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a plain data structure to hold the configuration for the chart.\n>\n> You can see the configuration data in the gray panel and how it how that affects the chart.\"\n   :sample-data chart/sample-data\n   :source-code chart/source-code\n   :component chart/component\n   :default-config-data chart/sample-config-data])\n\n\n(defn- config-sub []\n  (let [container-id :scatter-chart-config-sub-demo]\n    [config-sub-example/example\n     :container-id container-id\n     :title \"Scatter Chart (Live Configuration - subscription) - IN PROGRESS (not complete)\"\n     :description \"A Scatter Chart built using [Recharts](https://recharts.org/en-US/api/ScatterChart) with colored Cells. This example shows how\n     charts can take [subscriptions](https://day8.github.io/re-frame/subscriptions/) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a subscription to handle the configuration for the chart.\"\n     :sample-data chart/sample-data\n     :config-tools meta-tabular-config-row-sub-tools ; TODO: this tool panel does not have tools for the axes\n     :source-code chart/source-code\n     :component chart/component\n     :config-data [container-id :blackboard :config-data]\n     :default-config-data chart/sample-config-data]))\n\n\n(defn examples []\n  [me/examples {\"data-ratom\" [data-ratom]\n                \"data-struct\"  [data-structure]\n                \"data-sub\"  [data-sub]\n                \"config-ratom\"  [config-ratom]\n                \"config-struct\"  [config-structure]\n                \"config-sub\"  [config-sub]}])\n\n"]}