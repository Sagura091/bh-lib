{"version":3,"sources":["demo/src/catalog/organism/ui_grid/ratom_example.cljs"],"mappings":"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","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","demo.src.catalog.organism.ui-grid.ratom-example/container-id","demo.src.catalog.organism.ui-grid.ratom-example/bar-chart-widget","bh-ui.molecule.grid-container/component","reagent.core.atom","bh-ui.molecule.composite.chart-remote-data/ui-definition","bh_ui.utils.helpers.path__GT_keyword","demo.src.catalog.organism.ui-grid.ratom-example/multi-chart-widget","bh-ui.molecule.composite.simple-multi-chart/ui-definition","demo.src.catalog.organism.ui-grid.ratom-example/multi-chart-2-widget","bh-ui.molecule.composite.simple-multi-chart-2/ui-definition","demo.src.catalog.organism.ui-grid.ratom-example/coverage-plan-widget","bh-ui.molecule.composite.coverage-plan/ui-definition","demo.src.catalog.organism.ui-grid.ratom-example/default-widgets","demo.src.catalog.organism.ui-grid.ratom-example/bar-chart-layout","demo.src.catalog.organism.ui-grid.ratom-example/multi-chart-layout","demo.src.catalog.organism.ui-grid.ratom-example/multi-chart-2-layout","demo.src.catalog.organism.ui-grid.ratom-example/coverage-plan-layout","demo.src.catalog.organism.ui-grid.ratom-example/default-layout","demo.src.catalog.organism.ui-grid.ratom-example/empty-widgets","demo.src.catalog.organism.ui-grid.ratom-example/empty-layout","demo.src.catalog.organism.ui-grid.ratom-example/widgets","demo.src.catalog.organism.ui-grid.ratom-example/layout","demo.src.catalog.organism.ui-grid.ratom-example/grid-reset","widgets","layout","widget-val","layout-val","cljs.core/reset!","demo.src.catalog.organism.ui-grid.ratom-example/toggle-val","s","val","cljs.core/contains?","cljs.core.disj","cljs.core.conj","demo.src.catalog.organism.ui-grid.ratom-example/grid-update","cljs.core/deref","demo.src.catalog.organism.ui-grid.ratom-example/widget-tools","default-widgets","re-com.core/h-box","js/goog.DEBUG","re-com.core/button","demo.src.catalog.organism.ui-grid.ratom-example/example","logged-in?","re_frame.core.subscribe","pub-sub-started?","cljs.core/not","re-frame.core/dispatch","G__61280","G__61281","G__61282","G__61283","woolybear.ad.utils/demo","and__4251__auto__","woolybear.ad.layout/page","re-com.core/v-box","bh-ui.organism.ui-grid/component","re-com.core/alert-box"],"sourcesContent":["(ns demo.src.catalog.organism.ui-grid.ratom-example\n  (:require [bh-ui.organism.ui-grid :as grid]\n            [bh-ui.molecule.composite.chart-remote-data :as chart-remote-data]\n            [bh-ui.molecule.composite.coverage-plan :as coverage-plan]\n            [bh-ui.molecule.composite.simple-multi-chart :as simple-multi-chart]\n            [bh-ui.molecule.composite.simple-multi-chart-2 :as simple-multi-chart-2]\n            [bh-ui.molecule.grid-container :as grid-container]\n            [bh-ui.utils.helpers :as h]\n            [re-com.core :as rc]\n            [re-frame.core :as re-frame]\n            [reagent.core :as r]\n            [taoensso.timbre :as log]\n            [woolybear.ad.utils :as acu]\n            [woolybear.ad.layout :as layout]))\n\n\n(log/info \"demo.src.catalog.organism.ui-grid.ratom-example\")\n\n\n(def container-id \"ui-grid-ratom-demo\")\n\n(def bar-chart-widget [\"bar-chart\" \"Bar Chart\"\n                       [grid-container/component\n                        :data (r/atom chart-remote-data/ui-definition)\n                        :component-id (h/path->keyword container-id \"bar-chart\")\n                        :resizable true]\n                       :green :white])\n(def multi-chart-widget [\"multi-chart\" \"Multi-Chart\"\n                         [grid-container/component\n                          :data (r/atom simple-multi-chart/ui-definition)\n                          :component-id (h/path->keyword container-id \"multi-chart\")\n                          :resizable true]\n                         :blue :white])\n(def multi-chart-2-widget [\"multi-chart-2\" \"Multi-Chart-2\"\n                           [grid-container/component\n                            :data (r/atom simple-multi-chart-2/ui-definition)\n                            :component-id (h/path->keyword container-id \"multi-chart-2\")\n                            :resizable true]\n                           :rebeccapurple :white])\n(def coverage-plan-widget [\"coverage-plan\" \"Coverage Plan\"\n                           [grid-container/component\n                            :data (r/atom coverage-plan/ui-definition)\n                            :component-id (h/path->keyword container-id \"coverage-plan\")\n                            :resizable true]\n                           :yellow :black])\n(def default-widgets #{bar-chart-widget})\n\n(def bar-chart-layout {:i \"bar-chart\" :x 0 :y 0 :w 8 :h 15})\n(def multi-chart-layout {:i \"multi-chart\" :x 0 :y 10 :w 8 :h 15})\n(def multi-chart-2-layout {:i \"multi-chart-2\" :x 8 :y 21 :w 12 :h 15})\n(def coverage-plan-layout {:i \"coverage-plan\" :x 8 :y 0 :w 12 :h 21})\n(def default-layout #{bar-chart-layout})\n\n\n(def empty-widgets #{})\n(def empty-layout  #{})\n\n\n(def widgets (r/atom default-widgets))\n(def layout (r/atom default-layout))\n\n\n(defn- grid-reset [widgets layout widget-val layout-val]\n  (reset! widgets widget-val)\n  (reset! layout layout-val))\n\n\n(defn- toggle-val [s val]\n  (if (contains? s val)\n    (disj s val)\n    (conj s val)))\n\n\n(defn- grid-update [widgets layout widget-val layout-val]\n  (reset! widgets (toggle-val @widgets widget-val))\n  (reset! layout (toggle-val @layout layout-val)))\n\n\n(defn- widget-tools [widgets layout default-widgets]\n  [rc/h-box :src (rc/at)\n   :gap \"10px\"\n   :style {:border     \"1px solid\" :border-radius \"3px\"\n           :box-shadow \"5px 5px 5px 2px\"\n           :margin     \"5px\" :padding \"5px\"}\n   :children [[:label.h5 \"Widgets:\"]\n              [rc/button :on-click #(grid-reset widgets layout empty-widgets empty-layout)\n               :label \"Empty\"]\n              [rc/button :on-click #(grid-reset widgets layout default-widgets default-layout)\n               :label \"Default\"]\n              [rc/button :on-click #(grid-update widgets layout bar-chart-widget bar-chart-layout)\n               :label \"! Bar Chart\"]\n              [rc/button :on-click #(grid-update widgets layout multi-chart-widget multi-chart-layout)\n               :label \"! Multi Chart\"]\n              [rc/button :on-click #(grid-update widgets layout multi-chart-2-widget multi-chart-2-layout)\n               :label \"! Multi Chart 2\"]\n              [rc/button :on-click #(grid-update widgets layout coverage-plan-widget coverage-plan-layout)\n               :label \"! Coverage Plan\"]]])\n\n\n(defn example []\n  (let [logged-in?       (re-frame/subscribe [:subs/logged-in?])\n        pub-sub-started? (re-frame/subscribe [:bhui.subs/pub-sub-started?])]\n\n    (if (not @logged-in?)\n      (re-frame/dispatch [:events/login \"test-user\" \"test-pwd\"]))\n\n    (fn []\n      (acu/demo \"Widget Grid (ratom-based)\"\n        \"A grid of widget, which are composed of UI Components using a data structure that defines a directed graph.\"\n\n        (if (and @logged-in? @pub-sub-started?)\n          [layout/page {:extra-classes :is-fluid}\n\n           [rc/v-box :src (rc/at)\n            :gap \"5px\"\n            :children [[grid/component\n                        :widgets widgets\n                        :layout layout\n                        :container-id container-id]\n                       [widget-tools widgets layout default-widgets default-layout]]]]\n\n\n          [rc/alert-box :src (rc/at)\n           :alert-type :info\n           :heading \"Waiting for (demo) Log-in\"])\n        '[grid/component\n          :widgets widgets\n          :layout layout\n          :container-id container-id]))))\n"]}