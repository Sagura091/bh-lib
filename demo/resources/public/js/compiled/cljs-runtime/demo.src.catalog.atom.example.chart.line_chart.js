goog.provide('demo.src.catalog.atom.example.chart.line_chart');
demo.src.catalog.atom.example.chart.line_chart.data_ratom = (function demo$src$catalog$atom$example$chart$line_chart$data_ratom(){
return new cljs.core.PersistentVector(null, 21, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.alt.data_ratom_example.example,new cljs.core.Keyword(null,"container-id","container-id",1274665684),new cljs.core.Keyword(null,"line-chart-data-ratom-demo","line-chart-data-ratom-demo",-995563347),new cljs.core.Keyword(null,"title","title",636505583),"Line Chart (Live Data - ratom)",new cljs.core.Keyword(null,"description","description",-1428560544),"A Line Chart built using [Recharts](https://recharts.org/en-US/api/BarChart). This example shows how\n   charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the data changes.\n\n   > In _this_ case, we are using a ratom for the data.\n   >\n   > You can use the buttons below to change some of the data and see how the chart responds.",new cljs.core.Keyword(null,"sample-data","sample-data",1646287982),bh_ui.atom.chart.line_chart.sample_data,new cljs.core.Keyword(null,"random-data","random-data",-1549112236),bh_ui.atom.chart.line_chart.random_data,new cljs.core.Keyword(null,"source-code","source-code",-685884337),bh_ui.atom.chart.line_chart.source_code,new cljs.core.Keyword(null,"data-tools","data-tools",2099087673),demo.src.catalog.atom.example.chart.alt.data_tools.meta_tabular_data_ratom_tools,new cljs.core.Keyword(null,"component","component",1555936782),bh_ui.atom.chart.line_chart.component,new cljs.core.Keyword(null,"data-panel","data-panel",198148393),bh_ui.atom.chart.utils.meta_tabular_data_panel,new cljs.core.Keyword(null,"config-panel","config-panel",-1307835748),bh_ui.atom.chart.line_chart.config_panel], null);
});
demo.src.catalog.atom.example.chart.line_chart.data_structure = (function demo$src$catalog$atom$example$chart$line_chart$data_structure(){
return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.alt.data_structure_example.example,new cljs.core.Keyword(null,"container-id","container-id",1274665684),new cljs.core.Keyword(null,"line-chart-data-structure-demo","line-chart-data-structure-demo",1736917633),new cljs.core.Keyword(null,"title","title",636505583),"Line Chart (Live Data - structure)",new cljs.core.Keyword(null,"description","description",-1428560544),"A line Chart built using [Recharts](https://recharts.org/en-US/api/lineChart). This example shows how\n   charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the data changes.\n\n   > In _this_ case, we are using a plain data structure for the data, so there is no way to update it (it lives\n   > only inside the chart, with no way to get at it from outside).",new cljs.core.Keyword(null,"sample-data","sample-data",1646287982),bh_ui.atom.chart.line_chart.sample_data,new cljs.core.Keyword(null,"random-data","random-data",-1549112236),bh_ui.atom.chart.line_chart.random_data,new cljs.core.Keyword(null,"source-code","source-code",-685884337),bh_ui.atom.chart.line_chart.source_code,new cljs.core.Keyword(null,"component","component",1555936782),bh_ui.atom.chart.line_chart.component,new cljs.core.Keyword(null,"data-panel","data-panel",198148393),bh_ui.atom.chart.utils.meta_tabular_data_panel,new cljs.core.Keyword(null,"config-panel","config-panel",-1307835748),bh_ui.atom.chart.line_chart.config_panel], null);
});
demo.src.catalog.atom.example.chart.line_chart.data_sub = (function demo$src$catalog$atom$example$chart$line_chart$data_sub(){
var container_id = new cljs.core.Keyword(null,"line-chart-data-sub-demo","line-chart-data-sub-demo",-1574193566);
return new cljs.core.PersistentVector(null, 23, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.alt.data_sub_example.example,new cljs.core.Keyword(null,"container-id","container-id",1274665684),container_id,new cljs.core.Keyword(null,"title","title",636505583),"Line Chart (Live data - subscription)",new cljs.core.Keyword(null,"description","description",-1428560544),"A line Chart built using [Recharts](https://recharts.org/en-US/api/lineChart). This example shows how\n     charts can take [subscriptions](https://day8.github.io/re-frame/subscriptions/) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a subscription to handle the data for the chart.\n",new cljs.core.Keyword(null,"sample-data","sample-data",1646287982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [container_id,new cljs.core.Keyword(null,"blackboard","blackboard",-1864070822),new cljs.core.Keyword(null,"topic.sample-data","topic.sample-data",223380112)], null),new cljs.core.Keyword(null,"default-data","default-data",-1901322301),bh_ui.atom.chart.line_chart.sample_data,new cljs.core.Keyword(null,"random-data","random-data",-1549112236),bh_ui.atom.chart.line_chart.random_data,new cljs.core.Keyword(null,"data-tools","data-tools",2099087673),demo.src.catalog.atom.example.chart.alt.data_tools.meta_tabular_data_sub_tools,new cljs.core.Keyword(null,"source-code","source-code",-685884337),bh_ui.atom.chart.line_chart.source_code,new cljs.core.Keyword(null,"component","component",1555936782),bh_ui.atom.chart.line_chart.component,new cljs.core.Keyword(null,"data-panel","data-panel",198148393),bh_ui.atom.chart.utils.meta_tabular_data_panel,new cljs.core.Keyword(null,"config-panel","config-panel",-1307835748),bh_ui.atom.chart.line_chart.config_panel], null);
});
demo.src.catalog.atom.example.chart.line_chart.config_ratom = (function demo$src$catalog$atom$example$chart$line_chart$config_ratom(){
return new cljs.core.PersistentVector(null, 17, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.alt.config_ratom_example.example,new cljs.core.Keyword(null,"container-id","container-id",1274665684),new cljs.core.Keyword(null,"line-chart-config-ratom-demo","line-chart-config-ratom-demo",-947239030),new cljs.core.Keyword(null,"title","title",636505583),"Line Chart (Live Configuration - ratom)",new cljs.core.Keyword(null,"description","description",-1428560544),"A Line Chart built using [Recharts](https://recharts.org/en-US/api/lineChart). This example shows how\n     charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a ratom to hold the configuration for the chart.\n>\n> You can use the buttons in the bottom-most panel to change some of the chart configuration options and see\n> how that affects the data (shown in the gray panel) and how the chart responds.\n\n> Note: Line charts CANNOT stack!",new cljs.core.Keyword(null,"sample-data","sample-data",1646287982),bh_ui.atom.chart.line_chart.sample_data,new cljs.core.Keyword(null,"config-tools","config-tools",1698586144),demo.src.catalog.atom.example.chart.alt.config_tools.meta_tabular_config_column_ratom_tools,new cljs.core.Keyword(null,"source-code","source-code",-685884337),bh_ui.atom.chart.line_chart.source_code,new cljs.core.Keyword(null,"component","component",1555936782),bh_ui.atom.chart.line_chart.component,new cljs.core.Keyword(null,"default-config-data","default-config-data",-1003639894),bh_ui.atom.chart.line_chart.sample_config_data], null);
});
demo.src.catalog.atom.example.chart.line_chart.config_structure = (function demo$src$catalog$atom$example$chart$line_chart$config_structure(){
return new cljs.core.PersistentVector(null, 15, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.alt.config_structure_example.example,new cljs.core.Keyword(null,"container-id","container-id",1274665684),new cljs.core.Keyword(null,"line-chart-config-structure-demo","line-chart-config-structure-demo",1525271946),new cljs.core.Keyword(null,"title","title",636505583),"Line Chart (Live Configuration - structure)",new cljs.core.Keyword(null,"description","description",-1428560544),"A Line Chart built using [Recharts](https://recharts.org/en-US/api/lineChart). This example shows how\n     charts can take [ratoms](http://reagent-project.github.io/docs/master/reagent.ratom.html) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a plain data structure to hold the configuration for the chart.\n>\n> You can see the configuration data in the gray panel and how it how that affects the chart.",new cljs.core.Keyword(null,"sample-data","sample-data",1646287982),bh_ui.atom.chart.line_chart.sample_data,new cljs.core.Keyword(null,"source-code","source-code",-685884337),bh_ui.atom.chart.line_chart.source_code,new cljs.core.Keyword(null,"component","component",1555936782),bh_ui.atom.chart.line_chart.component,new cljs.core.Keyword(null,"default-config-data","default-config-data",-1003639894),bh_ui.atom.chart.line_chart.sample_config_data], null);
});
demo.src.catalog.atom.example.chart.line_chart.config_sub = (function demo$src$catalog$atom$example$chart$line_chart$config_sub(){
var container_id = new cljs.core.Keyword(null,"line-chart-config-sub-demo","line-chart-config-sub-demo",-2021187017);
return new cljs.core.PersistentVector(null, 19, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.alt.config_sub_example.example,new cljs.core.Keyword(null,"container-id","container-id",1274665684),container_id,new cljs.core.Keyword(null,"title","title",636505583),"Line Chart (Live Configuration - subscription)",new cljs.core.Keyword(null,"description","description",-1428560544),"A Line Chart built using [Recharts](https://recharts.org/en-US/api/lineChart). This example shows how\n     charts can take [subscriptions](https://day8.github.io/re-frame/subscriptions/) as input and re-render as the configuration changes.\n\n> In _this_ case, we are using a subscription to handle the configuration for the chart.\n\n> Note: Line charts CANNOT stack!",new cljs.core.Keyword(null,"sample-data","sample-data",1646287982),bh_ui.atom.chart.line_chart.sample_data,new cljs.core.Keyword(null,"config-tools","config-tools",1698586144),demo.src.catalog.atom.example.chart.alt.config_tools.meta_tabular_config_column_sub_tools,new cljs.core.Keyword(null,"source-code","source-code",-685884337),bh_ui.atom.chart.line_chart.source_code,new cljs.core.Keyword(null,"component","component",1555936782),bh_ui.atom.chart.line_chart.component,new cljs.core.Keyword(null,"config-data","config-data",1933573865),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [container_id,new cljs.core.Keyword(null,"blackboard","blackboard",-1864070822),new cljs.core.Keyword(null,"config-data","config-data",1933573865)], null),new cljs.core.Keyword(null,"default-config-data","default-config-data",-1003639894),bh_ui.atom.chart.line_chart.sample_config_data], null);
});
demo.src.catalog.atom.example.chart.line_chart.examples = (function demo$src$catalog$atom$example$chart$line_chart$examples(){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.multi_example.examples,new cljs.core.PersistentArrayMap(null, 6, ["data-ratom",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.line_chart.data_ratom], null),"data-struct",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.line_chart.data_structure], null),"data-sub",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.line_chart.data_sub], null),"config-ratom",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.line_chart.config_ratom], null),"config-struct",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.line_chart.config_structure], null),"config-sub",new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [demo.src.catalog.atom.example.chart.line_chart.config_sub], null)], null)], null);
});

//# sourceMappingURL=demo.src.catalog.atom.example.chart.line_chart.js.map
