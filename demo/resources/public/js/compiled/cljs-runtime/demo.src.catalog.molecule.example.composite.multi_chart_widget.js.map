{"version":3,"sources":["demo/src/catalog/molecule/example/composite/multi_chart_widget.cljs"],"mappings":";AAaA,AAAAA,0DAAAC,mCAAA,qDAAA,iEAAA,KAAA,GAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,UAAA;AAGA,4EAAA,5EAAOC,gKAAYC;AAAnB,AACE,IAAMC,WAAS,iCAAA,jCAACC,4BAAyBF;AAAzC,AAIE;AAAA,AAAA,4GAAA,mTAAA,iDAAA,OAAA,uDAAA,2CAAA,yDAAA,YAAA,sEAAA,MAAA,iEAAA,kBAAA,yDAAA,MAAA,2DAAA,cAAA,6DAAA,mFAAA,mFAAA,8DAAA,sBAAA,sGAAA,6DAAA,ryCACGG,sEAAc,EAAA,GAAAC,cAAA,KAAA,2CAAA,sDAAA,sEAAA,oDAAA,45BAOFC;AARf,AAQoC,mDAAA,iCAAA,7EAACC,uCAAqBN;GAR1D,uDAAA,gBAAA,sGAAA,6DAAA,hFAUeK;AAVf,AAUoC,mDAAA,5CAACC,uCAAqBN,sCAAQO;GAVlE,uDAAA,kBAAA,sGAAA,6DAAA,hFAaeF;AAbf,AAaoC,mDAAA,5CAACC,uCAAqBN,sCACpB,mBAAA,AAAAQ,0BAAA,mFAAA,qDAAA,IAAA,0DAAA,nPAACC,mCAAUR;GAdjD,uDAAA,qBAAA,sGAAA,6DAAA,hFAiBeI;AAjBf,AAiBoC,mDAAA,5CAACC,uCAAqBN,sCACpB,8CAAA,AAAAQ,0BAAA,xEAACE,8DAAOT,+DACS,2JAAA,2CAAA,qDAAA,SAAA,kDAAA,OAAA,+CAAA,OAAA,kDAAA,OAAA,oDAAA,heAACU,6CAAK,AAAA,mFAAA,AAAAH,gBAAQP;GAnBrE,uDAAA,kBAAA,sGAAA,6DAAA,hFAwBeI;AAxBf,AAwBoC,mDAAA,5CAACC,uCAAqBN,sCACpB,8CAAA,AAAAQ,0BAAA,xEAACE,8DAAOT,+DACS,6CAAA,7CAACW,8EAAQ,kDAAA,lDAACC,sDAAY,AAAA,mFAAA,AAAAL,gBAAQP;GA1BrF,uDAAA,sBAAA,sGAAA,6DAAA,hFA6BeI;AA7Bf,AA6BoC,mDAAA,5CAACC,uCAAqBN,uHACfC,nCACH,mBAAA,AAAAO,0BAAA,mFAAA,6DAAA,0DAAA,sEAAA,7TAACC,9CACD,qaAAA,raAACC,0dAAY,6CAAA,7CAACE,8EACC,AAACE,4CAAI,WAAKC;AAAL,AACE,uDAAA,hDAACL,8CAAMK,gEAAY,mBAAA,nBAACC;GACzB,AAAA,mFAAA,AAAAR,gBAAQP;GAnCjE,uDAAA;;;AAuCJ,AAAA,qFAAA,6FAAAgB,lLAAOM;AAAP,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,wHAAAF;;;AAAA,AAAA,CAAA,0HAAA,WAAAG,rIAAOD;AAAP,AAAA,IAAAE,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAAA,TAA+DQ;aAA/D,AAAAN,4CAAAF,eAAA,pEAAsCM;mBAAtC,AAAAJ,4CAAAF,eAAA,1EAA6CO;AAA7C,AAAA,6GAAA,mTAAA,iDAAA,OAAA,uDAAA,OAAA,yDAAA,OAAA,6DAAA,mFAAA,mFAAA,yEAAA,2CAAA,uDAAA,2CAAA,uDAAA,sCAAA,qGAAA,mTAAA,iDAAA,MAAA,6DAAA,mFAAA,6JAAA,gGAAA,kEAAA,/6DAGGE,sEAAc,EAAA,GAAA9B,cAAA,KAAA,2CAAA,sDAAA,sEAAA,oDAAA,ysBAKF2B,kGAEAG,sEAAc,EAAA,GAAA9B,cAAA,KAAA,2CAAA,sDAAA,sEAAA,oDAAA,sSAEFL,6JAAYiC;;;AAZvC,CAAA,6GAAA,7GAAOT;;AAAP;AAAA,CAAA,uGAAA,WAAAK,lHAAOL;AAAP,AAAA,IAAAM,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAeA,yEAAA,zEAAMO;AAAN,AACE,mBAAA,fAAMC;IACAJ,eAAa,yIAAA,zIAACK,4HAAgBD;AADpC,AAGE;AAAA,AACE,IAAAE,WAAA;IAAAC,WAAA;IAAAC,WAAA,6GAAA,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,uDAAA,OAAA,gEAAA,wBAAA,sKAAA,yDAAA,2HAAA,yJAAA,kFAAA,gEAAA,KAAA,wDAAA,aAAA,lpCAMGG,shBAOEpB,+NACSqB,6FACM,AAACC,gDAAOC,yHACAd,4NAGTA;IAnBnBS,WAoBEM;AApBF,AAAA,sHAAAT,SAAAC,SAAAC,SAAAC,8CAAAH,SAAAC,SAAAC,SAAAC,lNAACC,wDAAAA,6FAAAA","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","demo.src.catalog.molecule.example.composite.multi-chart-widget/data-tools","data","old-data","bh-ui.utils/subscribe-local","re-com.core/h-box","js/goog.DEBUG","re-com.core/button","bh-ui.utils.helpers/handle-change-path","bh-ui.molecule.composite.multi-chart/sample-data","cljs.core/deref","cljs.core/assoc-in","cljs.core.assoc","cljs.core.conj","cljs.core.into","cljs.core.drop_last","cljs.core.map","x","cljs.core/rand-int","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","demo.src.catalog.molecule.example.composite.multi-chart-widget/data-update-example","p__61252","map__61253","cljs.core/--destructure-map","cljs.core.get","seq61251","self__4852__auto__","cljs.core/seq","widget","component-id","params","re-com.core/v-box","demo.src.catalog.molecule.example.composite.multi-chart-widget/example","container-id","bh_ui.utils.helpers.path__GT_keyword","G__61254","G__61255","G__61256","G__61257","woolybear.ad.utils/demo","woolybear.ad.layout/frame","bh-ui.molecule.grid-container/component","reagent.core.atom","bh-ui.molecule.composite.multi-chart/ui-definition","bh-ui.molecule.composite.multi-chart/source-code"],"sourcesContent":["(ns demo.src.catalog.molecule.example.composite.multi-chart-widget\n  (:require [bh-ui.molecule.composite.multi-chart :as widget]\n            [bh-ui.atom.chart.utils :as chart-utils]\n            [bh-ui.utils :as ui-utils]\n            [bh-ui.molecule.grid-container :as grid]\n            [bh-ui.utils.helpers :as h]\n            [reagent.core :as r]\n            [re-com.core :as rc]\n            [taoensso.timbre :as log]\n            [woolybear.ad.utils :as acu]\n            [woolybear.ad.layout :as layout]))\n\n\n(log/info \"demo.src.catalog.molecule.example.composite.multi-chart-widget\")\n\n\n(defn- data-tools [data]\n  (let [old-data (ui-utils/subscribe-local data [])]\n\n    ;(log/info \"data-tools\" data \"//\" @old-data)\n\n    (fn []\n      [rc/h-box :src (rc/at)\n       :gap \"10px\"\n       :style {:border     \"1px solid\" :border-radius \"3px\"\n               :box-shadow \"5px 5px 5px 2px\"\n               :margin     \"5px\" :padding \"5px\"}\n       :children [[:label.h5 \"Input Data:\"]\n\n                  [rc/button :on-click #(h/handle-change-path data [] []) :label \"Empty\"]\n\n                  [rc/button :on-click #(h/handle-change-path data [] widget/sample-data)\n                   :label \"Default\"]\n\n                  [rc/button :on-click #(h/handle-change-path data []\n                                          (assoc-in @old-data [:data 0 :uv] 10000))\n                   :label \"A -> 10000\"]\n\n                  [rc/button :on-click #(h/handle-change-path data []\n                                          (assoc @old-data :data\n                                                           (conj (:data @old-data)\n                                                             {:name \"Page Q\" :uv 1100\n                                                              :pv   1100 :tv 1100 :amt 1100})))\n                   :label \"Add 'Q'\"]\n\n                  [rc/button :on-click #(h/handle-change-path data []\n                                          (assoc @old-data :data\n                                                           (into [] (drop-last 2 (:data @old-data)))))\n                   :label \"Drop Last 2\"]\n\n                  [rc/button :on-click #(h/handle-change-path data []\n                                          (-> @old-data\n                                            (assoc-in [:metadata :fields :new-item] :number)\n                                            (assoc :data (into []\n                                                           (map (fn [x]\n                                                                  (assoc x :new-item (rand-int 7000)))\n                                                             (:data @old-data))))))\n                   :label \"Add :new-item\"]]])))\n\n\n(defn- data-update-example [& {:keys [widget component-id] :as params}]\n  ;(log/info \"data-update-example (params)\" params)\n\n  [rc/v-box :src (rc/at)\n   :gap \"10px\"\n   :width \"100%\"\n   :height \"100%\"\n   :children [[:div.chart-part {:style {:width \"100%\"}}     ;:height \"90%\"}}\n               widget]\n\n              [rc/v-box :src (rc/at)\n               :gap \"8px\"\n               :children [[data-tools [component-id :blackboard :topic.data]]]]]])\n\n\n(defn example []\n  (let [container-id \"multi-chart-widget\"\n        component-id (h/path->keyword container-id \"widget\")]\n\n    (fn []\n      (acu/demo \"Multiple Charts in a Widget\"\n        \"This example provides a 'widget' (collection of UI Components) organized into a digraph (Event Model) that\n          describes the flow of data from sources (remote or local) into and out-of the UI.\n\n> In this example the configuration is presented as part of the widget, rather than separately as in\n> the example above\"\n        [layout/frame\n         ;;\n         ;; NOTE: the :height MUST be specified here since the ResponsiveContainer down in bowels of the chart needs a height\n         ;; in order to actually draw the Recharts components. just saying \"100%\" doesn't work, since the\n         ;; that really means \"be as big as you need\" and ResponsiveContainer then doesn't know what to do.\n         ;;\n         [:div {:style {:width \"100%\" :min-height \"400px\"}}\n          [data-update-example\n           :widget [grid/component\n                    :data (r/atom widget/ui-definition)\n                    :component-id component-id\n                    :resizable true\n                    :tools true]\n           :component-id component-id]]]\n        widget/source-code))))\n"]}