{"version":3,"sources":["demo/src/catalog/atom/example/experimental/ui_element.cljs"],"mappings":";AAQA,AAAAA,0DAAAC,mCAAA,qDAAA,wDAAA,KAAA,EAAA,8CAAA,qDAAA,KAAAC,gBAAA;AAAA,AAAA,0FAAA;GAAA,OAAA,KAAA,WAAA;AAGA,yEAAA,zEAAMC;AAAN,AACE,mBAAA,fAAMC;AAAN,AACE,IAAAC,WAAA;IAAAC,WAAA;IAAAC,WAAA,gHAAA,2CAAA,uEAAA,oEAAA,uIAAA,qDAAA,mFAAA,mFAAA,8DAAA,4WAAA,kFAAA,jjCAIGE,sSACCC,gaAEY,iIAAA,kEAAA,nMAACC,oHAAoBP,0OACnBA,kFACA,iIAAA,jIAACO,oHAAoBP;AATvC,AAAA,sHAAAC,SAAAC,SAAAC,8CAAAF,SAAAC,SAAAC,hMAACC,wDAAAA,oFAAAA;;AAYL,sEAAA,tEAAMI;AAAN,AACE,mBAAA,fAAMR;AAAN,AACE,IAAAS,WAAA;IAAAC,WAAA;IAAAC,WAAA,gHAAA,2CAAA,uEAAA,oEAAA,oIAAA,yDAAA,sWAAA,sEAAA,mXAAA,kFAAA,jwCAIGN,sSACCO,6LACS,iIAAA,kEAAA,nMAACL,oHAAoBP,wTACf,iIAAA,kEAAA,nMAACO,oHAAoBP,iPACtBA,kFACA,iIAAA,jIAACO,oHAAoBP;AATvC,AAAA,sHAAAS,SAAAC,SAAAC,8CAAAF,SAAAC,SAAAC,hMAACP,wDAAAA,oFAAAA;;AAYL,+DAAA,/DAAMS;AAAN,AACE,mBAAA,fAAMb;AAAN,AACE,IAAAc,WAAA;IAAAC,WAAA;IAAAC,WAAA,gHAAA,2CAAA,uEAAA,oEAAA,6HAAA,sDAAA,mFAAA,yFAAA,uDAAA,oWAAA,kFAAA,/hCAIGX,sSACCY,sZAEQ,iIAAA,kEAAA,nMAACV,oHAAoBP,kOACfA,kFACA,iIAAA,jIAACO,oHAAoBP;AATvC,AAAA,sHAAAc,SAAAC,SAAAC,8CAAAF,SAAAC,SAAAC,hMAACZ,wDAAAA,oFAAAA;;AAYL,8DAAA,9DAAMc;AAAN,AACE,mBAAA,fAAMlB;AAAN,AACE,IAAAmB,WAAA;IAAAC,WAAA;IAAAC,WAAA,gHAAA,2CAAA,uEAAA,oEAAA,6HAAA,sDAAA,mXAAA,kFAAA,30BAIGhB,sSACCY,mLACQ,iIAAA,kEAAA,nMAACV,oHAAoBP,iPACfA,kFACA,iIAAA,jIAACO,oHAAoBP;AARvC,AAAA,sHAAAmB,SAAAC,SAAAC,8CAAAF,SAAAC,SAAAC,hMAACjB,wDAAAA,oFAAAA","names":["taoensso.timbre._log_BANG_","taoensso.timbre/*config*","cljs.core/Delay","demo.src.catalog.atom.example.experimental.ui-element/selectable-table","container-id","G__59310","G__59311","G__59312","woolybear.ad.utils/demo","woolybear.ad.layout/centered","bh-ui.atom.experimental.ui-element/selectable-table","bh_ui.utils.path__GT_keyword","demo.src.catalog.atom.example.experimental.ui-element/three-d-globe","G__59321","G__59322","G__59323","bh-ui.atom.experimental.ui-element/three-d-globe","demo.src.catalog.atom.example.experimental.ui-element/slider","G__59327","G__59328","G__59329","bh-ui.atom.experimental.ui-element/slider","demo.src.catalog.atom.example.experimental.ui-element/label","G__59330","G__59331","G__59332"],"sourcesContent":["(ns demo.src.catalog.atom.example.experimental.ui-element\n  (:require [bh-ui.atom.experimental.ui-element :as elements]\n            [bh-ui.utils :as utils]\n            [taoensso.timbre :as log]\n            [woolybear.ad.utils :as acu]\n            [woolybear.ad.layout :as layout]))\n\n\n(log/info \"demo.src.catalog.atom.example.experimental.ui-element\")\n\n\n(defn selectable-table []\n  (let [container-id \"experimental-selectable-table-demo\"]\n    (acu/demo\n      \"Experimental Selectable Table\"\n      \"Demonstration of how we could build UI components that can be composed at run=time using\n      a DSL\"\n      [layout/centered {:extra-classes :width-50}\n       [elements/selectable-table\n        :data [:topic/target-data]\n        :selection [(utils/path->keyword container-id :blackboard :topic/selection)]\n        :container-id container-id\n        :component-id (utils/path->keyword container-id \"selectable-table\")]])))\n\n\n(defn three-d-globe []\n  (let [container-id \"experimental-three-d-globe-demo\"]\n    (acu/demo\n      \"Experimental 3D Globe\"\n      \"Demonstration of how we could build UI components that can be composed at run=time using\n      a DSL\"\n      [layout/centered {:extra-classes :width-50}\n       [elements/three-d-globe\n        :layers [(utils/path->keyword container-id :blackboard :topic/layers)]\n        :current-time [(utils/path->keyword container-id :blackboard :topic/current-time)]\n        :container-id container-id\n        :component-id (utils/path->keyword container-id \"three-d-globe\")]])))\n\n\n(defn slider []\n  (let [container-id \"experimental-slider-demo\"]\n    (acu/demo\n      \"Experimental Slider\"\n      \"Demonstration of how we could build UI components that can be composed at run=time using\n      a DSL\"\n      [layout/centered {:extra-classes :width-50}\n       [elements/slider\n        :value [:topic/coverage-data]\n        :range [(utils/path->keyword container-id :blackboard :topic/range)]\n        :container-id container-id\n        :component-id (utils/path->keyword container-id \"slider\")]])))\n\n\n(defn label []\n  (let [container-id \"experimental-label-demo\"]\n    (acu/demo\n      \"Experimental Label\"\n      \"Demonstration of how we could build UI components that can be composed at run=time using\n      a DSL\"\n      [layout/centered {:extra-classes :width-50}\n       [elements/slider\n        :value [(utils/path->keyword container-id :blackboard :topic/current-time)]\n        :container-id container-id\n        :component-id (utils/path->keyword container-id \"label\")]])))\n\n"]}