"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkDemo"] = self["webpackChunkDemo"] || []).push([["vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-button_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-button.entry.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-button.entry.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rux_button: () => (/* binding */ RuxButton)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n/* harmony import */ var _utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils-73490106.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js\");\n\n\n\nconst ruxButtonCss = \":host{--button-text-color:var(--color-text-inverse);--button-background-color:var(--color-background-interactive-default);--button-border-color:transparent;--button-hover-background-color:var(--color-background-interactive-hover);--button-hover-border-color:transparent;--button-active-background-color:var(\\n      --color-background-interactive-default\\n  );--button-active-border-color:var(--color-background-interactive-default);--button-secondary-text-color:var(--color-background-interactive-default);--button-secondary-hover-text-color:var(\\n      --color-background-interactive-hover\\n  );--button-secondary-background-color:transparent;--button-secondary-border-color:var(\\n      --color-background-interactive-default,\\n      rgb(0, 90, 143)\\n  );--button-secondary-hover-background-color:transparent;--button-secondary-hover-border-color:var(\\n      --color-background-interactive-hover\\n  );--button-borderless-color:var(--color-background-interactive-default);--button-borderless-hover-color:var(--color-background-interactive-hover);display:inline-block;width:auto}:host([hidden]){display:none}:host([disabled]){pointer-events:none}.rux-button{display:flex;position:relative;margin:0;width:inherit;padding:0 1rem;height:2.125rem;min-width:2.25rem;border-radius:var(--radius-base);color:var(--button-text-color);font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);font-weight:var(--font-body-1-font-weight);letter-spacing:var(--font-body-1-letter-spacing);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;justify-content:center;align-items:center;user-select:none}.rux-button rux-icon,.rux-button ::slotted(rux-icon){height:1rem;width:1rem;margin-right:0.625rem;color:var(--button-text-color)}.rux-button:disabled{opacity:var(--disabled-opacity);cursor:not-allowed;pointer-events:none}.rux-button:focus{outline:none}.rux-button:hover:not([disabled]){cursor:pointer}.rux-button--default{border:1px solid var(--button-border-color);background-color:var(--button-background-color)}.rux-button--default:hover:not([disabled]){border-color:var(--button-hover-border-color);background-color:var(--button-hover-background-color)}.rux-button--default:active:not([disabled]){border-color:var(--button-active-border-color);background-color:var(--button-active-background-color)}.rux-button--secondary{color:var(--button-secondary-text-color);background-color:var(--button-secondary-background-color);border:1px solid var(--button-secondary-border-color)}.rux-button--secondary:hover:not([disabled]){color:var(--button-secondary-hover-text-color);background-color:var(--button-secondary-hover-background-color);border-color:var(--button-secondary-hover-border-color)}.rux-button--secondary:hover:not([disabled]) rux-icon,.rux-button--secondary:hover:not([disabled]) ::slotted(rux-icon){color:var(--button-secondary-hover-text-color)}.rux-button--secondary:active:not([disabled]){border-color:var(--button-secondary-border-color);background-color:var(--button-secondary-background-color);color:var(--button-secondary-text-color)}.rux-button--secondary:active:not([disabled]) rux-icon,.rux-button--secondary:active:not([disabled]) ::slotted(rux-icon){color:var(--button-secondary-text-color)}.rux-button--secondary rux-icon,.rux-button--secondary ::slotted(rux-icon){color:var(--button-secondary-text-color)}.rux-button--borderless{color:var(--button-borderless-color);border:none;background:none}.rux-button--borderless:hover:not([disabled]){color:var(--button-borderless-hover-color);background:none}.rux-button--borderless:hover:not([disabled]) rux-icon,.rux-button--borderless:hover:not([disabled]) ::slotted(rux-icon){color:var(--button-borderless-hover-color)}.rux-button--borderless:active:not([disabled]){color:var(--button-borderless-color)}.rux-button--borderless:active:not([disabled]) rux-icon,.rux-button--borderless:active:not([disabled]) ::slotted(rux-icon){color:var(--button-borderless-color)}.rux-button--borderless rux-icon,.rux-button--borderless ::slotted(rux-icon){color:var(--button-borderless-color)}.rux-button--small{height:1.625rem;padding:0 1rem;line-height:1}.rux-button--large{height:2.875rem;min-width:3rem;padding:0 1rem}.rux-button--icon-only{font-size:0;width:3rem}.rux-button--icon-only ::slotted(rux-icon),.rux-button--icon-only rux-icon{margin-left:-0.625rem;margin-right:-0.625rem}\";\n\nconst RuxButton = class {\n  constructor(hostRef) {\n    (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    /**\n     * Hides slotted text from the button by setting rux-button--icon-only class\n     */\n    this.iconOnly = false;\n    /**\n     * Changes button style from solid to secondary by setting the rux-button--secondary class\n     */\n    this.secondary = false;\n    /**\n     * Toggles disabled attribute on the button\n     */\n    this.disabled = false;\n    /**\n     * Changes button style from solid to borderless by setting the rux-button--borderless class\n     */\n    this.borderless = false;\n    /**\n     * The button type. Use 'submit' to submit native form data.\n     */\n    this.type = 'button';\n    /**\n     * Creates and appends a native <button> if used within a form\n     * so that it can trigger the submit event.\n     *\n     * Shadow DOM limitation prevents <form> from working correctly.\n     * https://github.com/ionic-team/ionic-framework/blob/main/core/src/components/button/button.tsx\n     * @param ev\n     */\n    this.handleClick = (ev) => {\n      if ((0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_1__.b)(this.el)) {\n        const form = this.el.closest('form');\n        if (form) {\n          ev.preventDefault();\n          const fakeButton = document.createElement('button');\n          fakeButton.type = this.type;\n          fakeButton.style.display = 'none';\n          form.appendChild(fakeButton);\n          fakeButton.click();\n          fakeButton.remove();\n        }\n      }\n    };\n  }\n  render() {\n    const { size, iconOnly, secondary, disabled, icon, borderless } = this;\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"button\", { type: \"button\", onClick: this.handleClick, class: {\n        'rux-button': true,\n        'rux-button--secondary': secondary,\n        'rux-button--default': !secondary,\n        'rux-button--small': size === 'small',\n        'rux-button--large': size === 'large',\n        'rux-button--icon-only': iconOnly,\n        'rux-button--borderless': borderless,\n      }, \"aria-disabled\": disabled ? 'true' : null, disabled: disabled, part: \"container\" }, icon ? ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"rux-icon\", { size: \"extra-small\", icon: icon, exportparts: \"icon\", color: secondary ? 'primary' : 'dark' })) : null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", null))));\n  }\n  get el() { return (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n};\nRuxButton.style = ruxButtonCss;\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-button.entry.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ renderHiddenSelect),\n/* harmony export */   b: () => (/* binding */ hasShadowDom),\n/* harmony export */   h: () => (/* binding */ hasSlot),\n/* harmony export */   r: () => (/* binding */ renderHiddenInput)\n/* harmony export */ });\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nfunction hasSlot(el, name) {\n  // Look for a named slot\n  if (name) {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n  // Look for a default slot\n  return [...el.childNodes].some((node) => {\n    var _a;\n    //If node is text and not an empty string return true\n    if (node.nodeType === node.TEXT_NODE &&\n      ((_a = node === null || node === void 0 ? void 0 : node.textContent) === null || _a === void 0 ? void 0 : _a.trim()) !== '') {\n      return true;\n    }\n    //If node is an element with a slot attribute return true\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node;\n      if (!el.hasAttribute('slot') &&\n        /*\n         * This condition is specifically for checkbox because\n         * the hidden input becomes slotted content\n         */\n        el.getAttribute('type') !== 'hidden') {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n/**\n* This method is used to add a hidden input to a host element that contains\n* a Shadow DOM. It does not add the input inside of the Shadow root which\n* allows it to be picked up inside of forms. It should contain the same\n* values as the host element.\n* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198\n\n*\n* @param always Add a hidden input even if the container does not use Shadow\n* @param container The element where the input will be added\n* @param name The name of the input\n* @param value The value of the input\n* @param disabled If true, the input is disabled\n* @param checked Optional. If true, the input is checked\n*/\nconst renderHiddenInput = (always, container, name, value, disabled, checked) => {\n  let input = container.querySelector('input.aux-input');\n  if (always || hasShadowDom(container)) {\n    if (checked || checked == undefined) {\n      if (!input) {\n        input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-input');\n        container.appendChild(input);\n      }\n      input.disabled = disabled;\n      input.name = name;\n      input.value = value || '';\n    }\n    else {\n      if (input) {\n        input.remove();\n      }\n    }\n  }\n};\n/**\n * Renders multiple hidden inputs from an array of values\n * Used in multiselect\n * @param always\n * @param container\n * @param name\n * @param value\n * @param disabled\n */\nconst renderHiddenSelect = (always, container, name, value, disabled) => {\n  // Clear any existing hidden options. May be more performant to edit their values instead though.\n  let inputs = container.querySelectorAll('input.aux-select');\n  if (inputs) {\n    for (const elem of inputs) {\n      elem.remove();\n    }\n  }\n  if (always || hasShadowDom(container)) {\n    if (Array.isArray(value)) {\n      for (const el in value) {\n        let input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-select');\n        input.classList.add(`aux-select-${el}`);\n        input.disabled = disabled;\n        input.name = name;\n        if (value[el]) {\n          input.value = value[el];\n        }\n        container.appendChild(input);\n      }\n    }\n    else {\n      let input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-select');\n      input.classList.add(`aux-select-0`);\n      input.disabled = disabled;\n      input.name = name;\n      if (value) {\n        input.value = value;\n      }\n      container.appendChild(input);\n    }\n  }\n};\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js?");

/***/ })

}]);