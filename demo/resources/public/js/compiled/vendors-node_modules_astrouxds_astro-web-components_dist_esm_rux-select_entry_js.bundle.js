"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkDemo"] = self["webpackChunkDemo"] || []).push([["vendors-node_modules_astrouxds_astro-web-components_dist_esm_rux-select_entry_js"],{

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   F: () => (/* binding */ FormFieldMessage)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n\n\n/**\n * @part error-text - The error text element\n * @part help-text - The help text element\n */\nconst FormFieldMessage = (props, children) => {\n  const { helpText, errorText } = props;\n  if (errorText) {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-error-text\", part: \"error-text\" },\n      children,\n      (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"svg\", { fill: \"none\", width: \"14\", height: \"14\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 14 14\" },\n        (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"path\", { \"fill-rule\": \"evenodd\", \"clip-rule\": \"evenodd\", d: \"M11.393 12.25c.898 0 1.458-.974 1.009-1.75L8.009 2.91a1.166 1.166 0 0 0-2.018 0L1.598 10.5c-.449.776.111 1.75 1.01 1.75h8.784ZM7 8.167a.585.585 0 0 1-.583-.584V6.417c0-.321.262-.584.583-.584.32 0 .583.263.583.584v1.166c0 .321-.262.584-.583.584Zm-.583 1.166V10.5h1.166V9.333H6.417Z\", fill: \"currentColor\" })),\n      errorText));\n  }\n  if (helpText) {\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { class: \"rux-help-text\", part: \"help-text\" },\n      children,\n      helpText));\n  }\n  return null;\n};\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/rux-select.entry.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/rux-select.entry.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rux_select: () => (/* binding */ RuxSelect)\n/* harmony export */ });\n/* harmony import */ var _index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-b64764b4.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/index-b64764b4.js\");\n/* harmony import */ var _FormFieldMessage_9a3fc22c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FormFieldMessage-9a3fc22c.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/FormFieldMessage-9a3fc22c.js\");\n/* harmony import */ var _utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils-73490106.js */ \"./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js\");\n\n\n\n\nconst ruxSelectCss = \".rux-help-text{margin-top:0.625rem;color:var(--color-text-primary);font-size:var(--font-body-2-font-size);font-family:var(--font-body-2-font-family);font-weight:var(--font-body-2-font-weight);letter-spacing:var(--font-body-2-letter-spacing)}.rux-error-text{display:flex;align-items:center;text-align:left;width:fit-content;-webkit-order:3;order:3;margin-top:0.625rem;color:var(--color-text-error);font-size:var(--font-body-2-bold-font-size);font-family:var(--font-body-2-bold-font-family);font-weight:var(--font-body-2-bold-font-weight);letter-spacing:var(--font-body-2-bold-letter-spacing)}.rux-error-text svg{margin-right:0.625rem}:host{display:block;scrollbar-color:var(--color-border-interactive-muted) var(--color-background-surface-default);--select-menu-border-radius:var(--radius-base);--select-menu-border-hover-color:var(--color-background-interactive-hover);--select-menu-border-focus-color:var(--color-background-interactive-hover);--select-menu-invalid-border-color:var(--color-border-error);--select-menu-text-color:var(--color-background-interactive-default);--select-menu-option-text-hover-color:var(\\n      --color-background-interactive-hover\\n  );--select-menu-option-selected-background-color:var(\\n      --color-background-surface-selected\\n  );--select-menu-option-selected-text-color:var(--color-text-primary);--select-menu-label-color:var(--color-text-primary);--select-menu-inactive-caret:url(\\\"data:image/svg+xml,%3Csvg%20width%3D%2210%22%20height%3D%225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%234dacff%22%20d%3D%22M0%200h10L5%205z%22%20fill-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E\\\");--select-menu-active-caret:url(\\\"data:image/svg+xml,%3Csvg%20width%3D%2210%22%20height%3D%225%22%20style%3D%22transform%3A%20rotate%28180deg%29%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20fill%3D%22%234dacff%22%20d%3D%22M0%200h10L5%205z%22%20fill-rule%3D%22evenodd%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\\\");--select-menu-background-color:linear-gradient(\\n      to left,\\n      var(--color-background-surface-selected) 2rem,\\n      var(--color-background-base-default) 2rem\\n  );--select-menu-border-color:var(--color-border-interactive-muted)}:host ::-webkit-scrollbar{width:16px;height:16px;background-color:transparent}:host ::-webkit-scrollbar-thumb{background-color:var(--color-background-interactive-muted, #2b659b);border-radius:8px;border:3px solid transparent;background-clip:padding-box}:host ::-webkit-scrollbar-thumb:vertical{border-left-width:4px}:host ::-webkit-scrollbar-thumb:horizontal{border-top-width:4px}:host ::-webkit-scrollbar-thumb:active,:host ::-webkit-scrollbar-thumb:hover{background-color:var(--color-background-interactive-default, #3a81bf)}:host ::-webkit-scrollbar-track,:host ::-webkit-scrollbar-corner{background-color:var(--color-background-surface-default, #1b2d3e);box-shadow:var(--shadow-inner-scrollbar-vertical)}:host ::-webkit-scrollbar-track:vertical{box-shadow:var(--shadow-inner-scrollbar-vertical)}:host ::-webkit-scrollbar-track:horizontal{box-shadow:var(--shadow-inner-scrollbar-horizontal)}.hidden,:host([hidden]){display:none}label{display:inline-block;margin-bottom:10px;color:var(--select-menu-label-color);font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);font-weight:var(--font-body-1-font-weight);letter-spacing:var(--font-body-1-letter-spacing)}label .rux-label__asterisk{margin-left:4px}.rux-select:not(.rux-select--multiple){background-image:var(--select-menu-inactive-caret), var(--select-menu-background-color);background-position:center right 0.625rem, center left 0;background-repeat:no-repeat;box-shadow:0 1px 3px 1px rgba(0, 0, 0, 0.5)}.rux-select:not(.rux-select--multiple):active:not(:disabled){background-image:var(--select-menu-active-caret), var(--select-menu-background-color)}.rux-select:not(.rux-select--multiple):hover{cursor:pointer}.rux-select{position:relative;background:var(--color-background-base-default);appearance:none;-webkit-appearance:none;-moz-appearance:none;width:100%;border:1px solid var(--select-menu-border-color);border-radius:var(--select-menu-border-radius);color:var(--select-menu-text-color);font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);font-weight:var(--font-body-1-font-weight);letter-spacing:var(--font-body-1-letter-spacing);user-select:none}.rux-select--small{padding:3.5px 8px}.rux-select--medium{padding:7.5px 8px}.rux-select--large{padding:13.5px 8px}.rux-select--multiple{background:var(--color-background-base-default);padding:0}.rux-select--multiple option{padding:0.438rem 0 0.438rem 1rem;text-indent:1rem}.rux-select--multiple option:hover{color:var(--color-background-interactive-hover);background-color:var(--color-background-surface-hover);cursor:pointer}.rux-select--multiple option:checked{background:var(--color-background-surface-selected);color:var(--color-text-primary)}.rux-select--multiple option:disabled{cursor:not-allowed}.rux-select--multiple option:disabled:hover{color:var(--select-menu-text-color);opacity:var(--disabled-opacity);background-color:var(--select-menu-background-color)}.rux-select--invalid{border:1px solid var(--select-menu-invalid-border-color)}.rux-select:hover{border:1px solid var(--select-menu-border-hover-color)}.rux-select:focus{outline:none;border:1px solid var(--select-menu-border-focus-color)}.rux-select:disabled{opacity:0.4;cursor:not-allowed}.rux-select:disabled:hover{border:1px solid var(--select-menu-border-color)}.rux-select::-ms-expand{display:none}.rux-select:focus::-ms-value{background:transparent}.rux-select option{opacity:1;color:var(--select-menu-text-color);border-radius:0}.rux-select option:hover{color:var(--select-menu-option-text-hover-color);background-color:var(--select-menu-option-hover-background-color)}.rux-select option:focus{color:var(--select-menu-option-selected-text-color);background-color:var(--select-menu-option-selected-background-color)}.rux-select option:disabled{cursor:not-allowed;color:#4dacff66}.rux-select optgroup{text-indent:1rem;color:var(--select-menu-text-color);font-family:var(--font-body-1-font-family);font-size:var(--font-body-1-font-size);font-weight:var(--font-body-1-font-weight);letter-spacing:var(--font-body-1-letter-spacing);font-style:normal}\";\n\nconst RuxSelect = class {\n  constructor(hostRef) {\n    (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);\n    this.ruxSelectChanged = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxchange\", 7);\n    this.ruxBlur = (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.c)(this, \"ruxblur\", 7);\n    this.hasLabelSlot = false;\n    /**\n     * Disables the select menu via HTML disabled attribute. Select menu takes on a distinct visual state. Cursor uses the not-allowed system replacement and all keyboard and mouse events are ignored.\n     */\n    this.disabled = false;\n    /**\n     * Sets the field as required\n     */\n    this.required = false;\n    /**\n     * Presentational only. Renders the Select Menu as invalid.\n     */\n    this.invalid = false;\n    /**\n     * Enables multiselect\n     */\n    this.multiple = false;\n    /**\n     * Sets the Name of the Input Element\n     */\n    this.name = '';\n    /**\n     * The size of rux-select\n     */\n    this.size = 'medium';\n    this._onBlur = () => {\n      this.ruxBlur.emit();\n    };\n  }\n  onValueChange() {\n    this._syncOptionsFromValue();\n  }\n  handleLabelChange() {\n    this._handleLabelSlotChange();\n  }\n  handleGroupChange() {\n    this._syncOptionsToNativeSelect();\n  }\n  handleOptionChange() {\n    this._syncOptionsToNativeSelect();\n  }\n  connectedCallback() {\n    this._handleSlotChange = this._handleSlotChange.bind(this);\n    this._handleLabelSlotChange = this._handleLabelSlotChange.bind(this);\n  }\n  componentWillLoad() {\n    this._handleLabelSlotChange();\n    if (this.value) {\n      this._handleSlotChange();\n    }\n  }\n  get hasLabel() {\n    return this.label ? true : this.hasLabelSlot;\n  }\n  _handleLabelSlotChange() {\n    this.hasLabelSlot = (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__.h)(this.el, 'label');\n  }\n  async _handleSlotChange() {\n    await this._syncOptionsToNativeSelect();\n    await this._syncOptionsFromValue();\n  }\n  /**\n   * The native select element doesn't play nicely with slots. If an <option> isn't a direct child element, it won't render properly.\n   * As a solution, we expose a slot outside the shadow-DOMed <select> and then manually copy the contents inside the shadow DOM.\n   *\n   * A RuxOptionGroup component is required because onSlotchange won't fire if we use the native <optgroup> and we change just its options.\n   * RuxOptionGroup exists only to fire a change event that we can listen to.\n   */\n  _syncOptionsToNativeSelect() {\n    var _a;\n    const slot = (_a = this.slotContainer) === null || _a === void 0 ? void 0 : _a.querySelector('slot');\n    if (slot) {\n      this.selectEl.innerHTML = '';\n      const assignedElements = slot.assignedElements({\n        flatten: true,\n      });\n      assignedElements.map((item) => {\n        const option = item;\n        if (option.tagName.toLowerCase() === 'rux-option') {\n          this._appendOptionToNativeSelect(option.label, option.value, option.disabled, this.selectEl);\n        }\n        if (option.tagName.toLowerCase() === 'rux-option-group') {\n          const children = [\n            ...Array.from(option.querySelectorAll('rux-option')),\n          ];\n          this._appendOptGroupToNativeSelect(option.label ? option.label : 'Group', children);\n        }\n      });\n    }\n    return Promise.resolve();\n  }\n  _appendOptGroupToNativeSelect(groupName, children) {\n    const group = Object.assign(document.createElement('optgroup'), {\n      label: groupName,\n    });\n    children.map((option) => {\n      this._appendOptionToNativeSelect(option.label, option.value, option.disabled, group);\n      this.selectEl.appendChild(group);\n    });\n    this.selectEl.appendChild(group);\n  }\n  _appendOptionToNativeSelect(label, value, disabled, target) {\n    const item = Object.assign(document.createElement('option'), {\n      innerHTML: label ? label : '',\n      value: value,\n      disabled: disabled,\n    });\n    target.appendChild(item);\n  }\n  _syncOptionsFromValue() {\n    if (this.selectEl) {\n      const options = [\n        ...Array.from(this.selectEl.querySelectorAll('option')),\n      ];\n      options.map((option) => {\n        if (Array.isArray(this.value)) {\n          option.selected = this.value.includes(option.value);\n        }\n        else {\n          option.selected = option.value === this.value;\n        }\n      });\n    }\n    return Promise.resolve();\n  }\n  _onChange(e) {\n    const target = e.target;\n    const values = [...target.options]\n      .filter((option) => {\n      return option.selected;\n    })\n      .map((option) => {\n      return option.value;\n    });\n    if (values.length === 1) {\n      this.value = values[0];\n    }\n    else {\n      this.value = values;\n    }\n    this.ruxSelectChanged.emit();\n  }\n  render() {\n    const { disabled, required, label, inputId, labelId, invalid, name, multiple, } = this;\n    (0,_utils_73490106_js__WEBPACK_IMPORTED_MODULE_2__.a)(true, this.el, this.name, this.value, this.disabled);\n    return ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.H, null, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"label\", { id: labelId, htmlFor: inputId, \"aria-hidden\": this.hasLabel ? 'false' : 'true', part: \"label\" }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", { class: { hidden: !this.hasLabel } }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { onSlotchange: this._handleLabelSlotChange, name: \"label\" }, label, this.required && ((0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"span\", { part: \"required\", class: \"rux-label__asterisk\" }, \"*\"))))), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"select\", { class: {\n        'rux-select': true,\n        'rux-select--small': this.size === 'small',\n        'rux-select--medium': this.size === 'medium',\n        'rux-select--large': this.size === 'large',\n        'rux-select--invalid': invalid,\n        'rux-select--multiple': multiple,\n      }, ref: (el) => (this.selectEl = el), id: inputId, disabled: disabled, required: required, multiple: multiple, name: name, onChange: (e) => this._onChange(e), onBlur: this._onBlur, part: \"select\" }), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"div\", { \"aria-hidden\": \"true\", class: \"hidden\", ref: (el) => (this.slotContainer = el) }, (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(\"slot\", { onSlotchange: this._handleSlotChange })), (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.h)(_FormFieldMessage_9a3fc22c_js__WEBPACK_IMPORTED_MODULE_1__.F, { errorText: this.errorText, helpText: this.helpText })));\n  }\n  get el() { return (0,_index_b64764b4_js__WEBPACK_IMPORTED_MODULE_0__.g)(this); }\n  static get watchers() { return {\n    \"value\": [\"onValueChange\"],\n    \"label\": [\"handleLabelChange\"]\n  }; }\n};\nRuxSelect.style = ruxSelectCss;\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/rux-select.entry.js?");

/***/ }),

/***/ "./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ renderHiddenSelect),\n/* harmony export */   b: () => (/* binding */ hasShadowDom),\n/* harmony export */   h: () => (/* binding */ hasSlot),\n/* harmony export */   r: () => (/* binding */ renderHiddenInput)\n/* harmony export */ });\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nfunction hasSlot(el, name) {\n  // Look for a named slot\n  if (name) {\n    return el.querySelector(`[slot=\"${name}\"]`) !== null;\n  }\n  // Look for a default slot\n  return [...el.childNodes].some((node) => {\n    var _a;\n    //If node is text and not an empty string return true\n    if (node.nodeType === node.TEXT_NODE &&\n      ((_a = node === null || node === void 0 ? void 0 : node.textContent) === null || _a === void 0 ? void 0 : _a.trim()) !== '') {\n      return true;\n    }\n    //If node is an element with a slot attribute return true\n    if (node.nodeType === node.ELEMENT_NODE) {\n      const el = node;\n      if (!el.hasAttribute('slot') &&\n        /*\n         * This condition is specifically for checkbox because\n         * the hidden input becomes slotted content\n         */\n        el.getAttribute('type') !== 'hidden') {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n/**\n* This method is used to add a hidden input to a host element that contains\n* a Shadow DOM. It does not add the input inside of the Shadow root which\n* allows it to be picked up inside of forms. It should contain the same\n* values as the host element.\n* https://github.com/ionic-team/ionic-framework/blob/ae96563fb3c4612cb8585292b389ee746f5759f7/core/src/utils/helpers.ts#L198\n\n*\n* @param always Add a hidden input even if the container does not use Shadow\n* @param container The element where the input will be added\n* @param name The name of the input\n* @param value The value of the input\n* @param disabled If true, the input is disabled\n* @param checked Optional. If true, the input is checked\n*/\nconst renderHiddenInput = (always, container, name, value, disabled, checked) => {\n  let input = container.querySelector('input.aux-input');\n  if (always || hasShadowDom(container)) {\n    if (checked || checked == undefined) {\n      if (!input) {\n        input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-input');\n        container.appendChild(input);\n      }\n      input.disabled = disabled;\n      input.name = name;\n      input.value = value || '';\n    }\n    else {\n      if (input) {\n        input.remove();\n      }\n    }\n  }\n};\n/**\n * Renders multiple hidden inputs from an array of values\n * Used in multiselect\n * @param always\n * @param container\n * @param name\n * @param value\n * @param disabled\n */\nconst renderHiddenSelect = (always, container, name, value, disabled) => {\n  // Clear any existing hidden options. May be more performant to edit their values instead though.\n  let inputs = container.querySelectorAll('input.aux-select');\n  if (inputs) {\n    for (const elem of inputs) {\n      elem.remove();\n    }\n  }\n  if (always || hasShadowDom(container)) {\n    if (Array.isArray(value)) {\n      for (const el in value) {\n        let input = container.ownerDocument.createElement('input');\n        input.type = 'hidden';\n        input.classList.add('aux-select');\n        input.classList.add(`aux-select-${el}`);\n        input.disabled = disabled;\n        input.name = name;\n        if (value[el]) {\n          input.value = value[el];\n        }\n        container.appendChild(input);\n      }\n    }\n    else {\n      let input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-select');\n      input.classList.add(`aux-select-0`);\n      input.disabled = disabled;\n      input.name = name;\n      if (value) {\n        input.value = value;\n      }\n      container.appendChild(input);\n    }\n  }\n};\n\n\n\n\n//# sourceURL=webpack://Demo/./node_modules/@astrouxds/astro-web-components/dist/esm/utils-73490106.js?");

/***/ })

}]);